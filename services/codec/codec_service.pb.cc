// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: codec_service.proto
// Protobuf C++ Version: 5.29.3

#include "codec_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace im {
namespace codec {

inline constexpr EncodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encoded_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncodeResponse::EncodeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncodeResponseDefaultTypeInternal() {}
  union {
    EncodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncodeResponseDefaultTypeInternal _EncodeResponse_default_instance_;

inline constexpr DecodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : encoded_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DecodeRequest::DecodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DecodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecodeRequestDefaultTypeInternal() {}
  union {
    DecodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecodeRequestDefaultTypeInternal _DecodeRequest_default_instance_;

inline constexpr EncodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EncodeRequest::EncodeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncodeRequestDefaultTypeInternal() {}
  union {
    EncodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncodeRequestDefaultTypeInternal _EncodeRequest_default_instance_;

inline constexpr DecodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DecodeResponse::DecodeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DecodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecodeResponseDefaultTypeInternal() {}
  union {
    DecodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecodeResponseDefaultTypeInternal _DecodeResponse_default_instance_;
}  // namespace codec
}  // namespace im
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_codec_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_codec_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_codec_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeRequest, _impl_.message_data_),
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeRequest, _impl_.message_type_name_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeResponse, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::im::codec::EncodeResponse, _impl_.encoded_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeRequest, _impl_.encoded_data_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_.message_data_),
        PROTOBUF_FIELD_OFFSET(::im::codec::DecodeResponse, _impl_.message_type_name_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::im::codec::EncodeRequest)},
        {14, -1, -1, sizeof(::im::codec::EncodeResponse)},
        {25, -1, -1, sizeof(::im::codec::DecodeRequest)},
        {34, 47, -1, sizeof(::im::codec::DecodeResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::im::codec::_EncodeRequest_default_instance_._instance,
    &::im::codec::_EncodeResponse_default_instance_._instance,
    &::im::codec::_DecodeRequest_default_instance_._instance,
    &::im::codec::_DecodeResponse_default_instance_._instance,
};
const char descriptor_table_protodef_codec_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023codec_service.proto\022\010im.codec\032\nbase.pr"
    "oto\"c\n\rEncodeRequest\022!\n\006header\030\001 \001(\0132\021.i"
    "m.base.IMHeader\022\024\n\014message_data\030\002 \001(\014\022\031\n"
    "\021message_type_name\030\003 \001(\t\"N\n\016EncodeRespon"
    "se\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_message\030\002 \001"
    "(\t\022\024\n\014encoded_data\030\003 \001(\014\"%\n\rDecodeReques"
    "t\022\024\n\014encoded_data\030\001 \001(\014\"\214\001\n\016DecodeRespon"
    "se\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_message\030\002 \001"
    "(\t\022!\n\006header\030\003 \001(\0132\021.im.base.IMHeader\022\024\n"
    "\014message_data\030\004 \001(\014\022\031\n\021message_type_name"
    "\030\005 \001(\t2\214\001\n\014CodecService\022=\n\006Encode\022\027.im.c"
    "odec.EncodeRequest\032\030.im.codec.EncodeResp"
    "onse\"\000\022=\n\006Decode\022\027.im.codec.DecodeReques"
    "t\032\030.im.codec.DecodeResponse\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_codec_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_base_2eproto,
};
static ::absl::once_flag descriptor_table_codec_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_codec_5fservice_2eproto = {
    false,
    false,
    557,
    descriptor_table_protodef_codec_5fservice_2eproto,
    "codec_service.proto",
    &descriptor_table_codec_5fservice_2eproto_once,
    descriptor_table_codec_5fservice_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_codec_5fservice_2eproto::offsets,
    file_level_enum_descriptors_codec_5fservice_2eproto,
    file_level_service_descriptors_codec_5fservice_2eproto,
};
namespace im {
namespace codec {
// ===================================================================

class EncodeRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EncodeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_._has_bits_);
};

void EncodeRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EncodeRequest::EncodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.codec.EncodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE EncodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::codec::EncodeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_data_(arena, from.message_data_),
        message_type_name_(arena, from.message_type_name_) {}

EncodeRequest::EncodeRequest(
    ::google::protobuf::Arena* arena,
    const EncodeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.codec.EncodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE EncodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        message_data_(arena),
        message_type_name_(arena) {}

inline void EncodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
EncodeRequest::~EncodeRequest() {
  // @@protoc_insertion_point(destructor:im.codec.EncodeRequest)
  SharedDtor(*this);
}
inline void EncodeRequest::SharedDtor(MessageLite& self) {
  EncodeRequest& this_ = static_cast<EncodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_data_.Destroy();
  this_._impl_.message_type_name_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* EncodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EncodeRequest(arena);
}
constexpr auto EncodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncodeRequest),
                                            alignof(EncodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EncodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EncodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EncodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EncodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EncodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EncodeRequest>(), &EncodeRequest::ByteSizeLong,
            &EncodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_._cached_size_),
        false,
    },
    &EncodeRequest::kDescriptorMethods,
    &descriptor_table_codec_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EncodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 48, 2> EncodeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::codec::EncodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.header_)}},
    // bytes message_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.message_data_)}},
    // string message_type_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.message_type_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes message_data = 2;
    {PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.message_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string message_type_name = 3;
    {PROTOBUF_FIELD_OFFSET(EncodeRequest, _impl_.message_type_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\26\0\0\21\0\0\0\0"
    "im.codec.EncodeRequest"
    "message_type_name"
  }},
};

PROTOBUF_NOINLINE void EncodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.codec.EncodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_data_.ClearToEmpty();
  _impl_.message_type_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EncodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EncodeRequest& this_ = static_cast<const EncodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EncodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EncodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.codec.EncodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // bytes message_data = 2;
          if (!this_._internal_message_data().empty()) {
            const std::string& _s = this_._internal_message_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string message_type_name = 3;
          if (!this_._internal_message_type_name().empty()) {
            const std::string& _s = this_._internal_message_type_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.codec.EncodeRequest.message_type_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.codec.EncodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EncodeRequest::ByteSizeLong(const MessageLite& base) {
          const EncodeRequest& this_ = static_cast<const EncodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EncodeRequest::ByteSizeLong() const {
          const EncodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.codec.EncodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes message_data = 2;
            if (!this_._internal_message_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_message_data());
            }
            // string message_type_name = 3;
            if (!this_._internal_message_type_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_type_name());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EncodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncodeRequest*>(&to_msg);
  auto& from = static_cast<const EncodeRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.codec.EncodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_data().empty()) {
    _this->_internal_set_message_data(from._internal_message_data());
  }
  if (!from._internal_message_type_name().empty()) {
    _this->_internal_set_message_type_name(from._internal_message_type_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncodeRequest::CopyFrom(const EncodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.codec.EncodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncodeRequest::InternalSwap(EncodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_data_, &other->_impl_.message_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_type_name_, &other->_impl_.message_type_name_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata EncodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncodeResponse::_Internal {
 public:
};

EncodeResponse::EncodeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.codec.EncodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE EncodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::codec::EncodeResponse& from_msg)
      : error_message_(arena, from.error_message_),
        encoded_data_(arena, from.encoded_data_),
        _cached_size_{0} {}

EncodeResponse::EncodeResponse(
    ::google::protobuf::Arena* arena,
    const EncodeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:im.codec.EncodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE EncodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        encoded_data_(arena),
        _cached_size_{0} {}

inline void EncodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
EncodeResponse::~EncodeResponse() {
  // @@protoc_insertion_point(destructor:im.codec.EncodeResponse)
  SharedDtor(*this);
}
inline void EncodeResponse::SharedDtor(MessageLite& self) {
  EncodeResponse& this_ = static_cast<EncodeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.encoded_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EncodeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EncodeResponse(arena);
}
constexpr auto EncodeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncodeResponse),
                                            alignof(EncodeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EncodeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EncodeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EncodeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EncodeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EncodeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EncodeResponse>(), &EncodeResponse::ByteSizeLong,
            &EncodeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_._cached_size_),
        false,
    },
    &EncodeResponse::kDescriptorMethods,
    &descriptor_table_codec_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EncodeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 45, 2> EncodeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::codec::EncodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EncodeResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.success_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.error_message_)}},
    // bytes encoded_data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.encoded_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes encoded_data = 3;
    {PROTOBUF_FIELD_OFFSET(EncodeResponse, _impl_.encoded_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\15\0\0\0\0\0"
    "im.codec.EncodeResponse"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void EncodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.codec.EncodeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.encoded_data_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EncodeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EncodeResponse& this_ = static_cast<const EncodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EncodeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EncodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.codec.EncodeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.codec.EncodeResponse.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes encoded_data = 3;
          if (!this_._internal_encoded_data().empty()) {
            const std::string& _s = this_._internal_encoded_data();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.codec.EncodeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EncodeResponse::ByteSizeLong(const MessageLite& base) {
          const EncodeResponse& this_ = static_cast<const EncodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EncodeResponse::ByteSizeLong() const {
          const EncodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.codec.EncodeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bytes encoded_data = 3;
            if (!this_._internal_encoded_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_encoded_data());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EncodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncodeResponse*>(&to_msg);
  auto& from = static_cast<const EncodeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.codec.EncodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_encoded_data().empty()) {
    _this->_internal_set_encoded_data(from._internal_encoded_data());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncodeResponse::CopyFrom(const EncodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.codec.EncodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncodeResponse::InternalSwap(EncodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoded_data_, &other->_impl_.encoded_data_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata EncodeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DecodeRequest::_Internal {
 public:
};

DecodeRequest::DecodeRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.codec.DecodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE DecodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::codec::DecodeRequest& from_msg)
      : encoded_data_(arena, from.encoded_data_),
        _cached_size_{0} {}

DecodeRequest::DecodeRequest(
    ::google::protobuf::Arena* arena,
    const DecodeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DecodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:im.codec.DecodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE DecodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : encoded_data_(arena),
        _cached_size_{0} {}

inline void DecodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DecodeRequest::~DecodeRequest() {
  // @@protoc_insertion_point(destructor:im.codec.DecodeRequest)
  SharedDtor(*this);
}
inline void DecodeRequest::SharedDtor(MessageLite& self) {
  DecodeRequest& this_ = static_cast<DecodeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encoded_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DecodeRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DecodeRequest(arena);
}
constexpr auto DecodeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DecodeRequest),
                                            alignof(DecodeRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DecodeRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DecodeRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DecodeRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DecodeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DecodeRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DecodeRequest>(), &DecodeRequest::ByteSizeLong,
            &DecodeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DecodeRequest, _impl_._cached_size_),
        false,
    },
    &DecodeRequest::kDescriptorMethods,
    &descriptor_table_codec_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DecodeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DecodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::codec::DecodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes encoded_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DecodeRequest, _impl_.encoded_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes encoded_data = 1;
    {PROTOBUF_FIELD_OFFSET(DecodeRequest, _impl_.encoded_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DecodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.codec.DecodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.encoded_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DecodeRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DecodeRequest& this_ = static_cast<const DecodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DecodeRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DecodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.codec.DecodeRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes encoded_data = 1;
          if (!this_._internal_encoded_data().empty()) {
            const std::string& _s = this_._internal_encoded_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.codec.DecodeRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DecodeRequest::ByteSizeLong(const MessageLite& base) {
          const DecodeRequest& this_ = static_cast<const DecodeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DecodeRequest::ByteSizeLong() const {
          const DecodeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.codec.DecodeRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes encoded_data = 1;
            if (!this_._internal_encoded_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_encoded_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DecodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DecodeRequest*>(&to_msg);
  auto& from = static_cast<const DecodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.codec.DecodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_encoded_data().empty()) {
    _this->_internal_set_encoded_data(from._internal_encoded_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DecodeRequest::CopyFrom(const DecodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.codec.DecodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DecodeRequest::InternalSwap(DecodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoded_data_, &other->_impl_.encoded_data_, arena);
}

::google::protobuf::Metadata DecodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DecodeResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DecodeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_._has_bits_);
};

void DecodeResponse::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DecodeResponse::DecodeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.codec.DecodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE DecodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::codec::DecodeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        error_message_(arena, from.error_message_),
        message_data_(arena, from.message_data_),
        message_type_name_(arena, from.message_type_name_) {}

DecodeResponse::DecodeResponse(
    ::google::protobuf::Arena* arena,
    const DecodeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DecodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:im.codec.DecodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE DecodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        error_message_(arena),
        message_data_(arena),
        message_type_name_(arena) {}

inline void DecodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, success_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::success_));
}
DecodeResponse::~DecodeResponse() {
  // @@protoc_insertion_point(destructor:im.codec.DecodeResponse)
  SharedDtor(*this);
}
inline void DecodeResponse::SharedDtor(MessageLite& self) {
  DecodeResponse& this_ = static_cast<DecodeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.message_data_.Destroy();
  this_._impl_.message_type_name_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* DecodeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DecodeResponse(arena);
}
constexpr auto DecodeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DecodeResponse),
                                            alignof(DecodeResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DecodeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DecodeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DecodeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DecodeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DecodeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DecodeResponse>(), &DecodeResponse::ByteSizeLong,
            &DecodeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_._cached_size_),
        false,
    },
    &DecodeResponse::kDescriptorMethods,
    &descriptor_table_codec_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DecodeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 62, 2> DecodeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::codec::DecodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DecodeResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.success_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.error_message_)}},
    // .im.base.IMHeader header = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.header_)}},
    // bytes message_data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.message_data_)}},
    // string message_type_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.message_type_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.error_message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .im.base.IMHeader header = 3;
    {PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes message_data = 4;
    {PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.message_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string message_type_name = 5;
    {PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.message_type_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\27\0\15\0\0\21\0\0"
    "im.codec.DecodeResponse"
    "error_message"
    "message_type_name"
  }},
};

PROTOBUF_NOINLINE void DecodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.codec.DecodeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.message_data_.ClearToEmpty();
  _impl_.message_type_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DecodeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DecodeResponse& this_ = static_cast<const DecodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DecodeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DecodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.codec.DecodeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.codec.DecodeResponse.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // bytes message_data = 4;
          if (!this_._internal_message_data().empty()) {
            const std::string& _s = this_._internal_message_data();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // string message_type_name = 5;
          if (!this_._internal_message_type_name().empty()) {
            const std::string& _s = this_._internal_message_type_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.codec.DecodeResponse.message_type_name");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.codec.DecodeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DecodeResponse::ByteSizeLong(const MessageLite& base) {
          const DecodeResponse& this_ = static_cast<const DecodeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DecodeResponse::ByteSizeLong() const {
          const DecodeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.codec.DecodeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bytes message_data = 4;
            if (!this_._internal_message_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_message_data());
            }
            // string message_type_name = 5;
            if (!this_._internal_message_type_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_type_name());
            }
          }
           {
            // .im.base.IMHeader header = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DecodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DecodeResponse*>(&to_msg);
  auto& from = static_cast<const DecodeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.codec.DecodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_message_data().empty()) {
    _this->_internal_set_message_data(from._internal_message_data());
  }
  if (!from._internal_message_type_name().empty()) {
    _this->_internal_set_message_type_name(from._internal_message_type_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DecodeResponse::CopyFrom(const DecodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.codec.DecodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DecodeResponse::InternalSwap(DecodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_data_, &other->_impl_.message_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_type_name_, &other->_impl_.message_type_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.success_)
      + sizeof(DecodeResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(DecodeResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata DecodeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace codec
}  // namespace im
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_codec_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

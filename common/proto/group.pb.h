// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: group.proto
// Protobuf C++ Version: 5.29.3

#ifndef group_2eproto_2epb_2eh
#define group_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_group_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_group_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_group_2eproto;
namespace im {
namespace group {
class ApplyJoinGroupRequest;
struct ApplyJoinGroupRequestDefaultTypeInternal;
extern ApplyJoinGroupRequestDefaultTypeInternal _ApplyJoinGroupRequest_default_instance_;
class ApplyJoinGroupResponse;
struct ApplyJoinGroupResponseDefaultTypeInternal;
extern ApplyJoinGroupResponseDefaultTypeInternal _ApplyJoinGroupResponse_default_instance_;
class CreateGroupRequest;
struct CreateGroupRequestDefaultTypeInternal;
extern CreateGroupRequestDefaultTypeInternal _CreateGroupRequest_default_instance_;
class CreateGroupResponse;
struct CreateGroupResponseDefaultTypeInternal;
extern CreateGroupResponseDefaultTypeInternal _CreateGroupResponse_default_instance_;
class GetGroupInfoRequest;
struct GetGroupInfoRequestDefaultTypeInternal;
extern GetGroupInfoRequestDefaultTypeInternal _GetGroupInfoRequest_default_instance_;
class GetGroupInfoResponse;
struct GetGroupInfoResponseDefaultTypeInternal;
extern GetGroupInfoResponseDefaultTypeInternal _GetGroupInfoResponse_default_instance_;
class GetGroupListRequest;
struct GetGroupListRequestDefaultTypeInternal;
extern GetGroupListRequestDefaultTypeInternal _GetGroupListRequest_default_instance_;
class GetGroupListResponse;
struct GetGroupListResponseDefaultTypeInternal;
extern GetGroupListResponseDefaultTypeInternal _GetGroupListResponse_default_instance_;
class GetGroupMembersRequest;
struct GetGroupMembersRequestDefaultTypeInternal;
extern GetGroupMembersRequestDefaultTypeInternal _GetGroupMembersRequest_default_instance_;
class GetGroupMembersResponse;
struct GetGroupMembersResponseDefaultTypeInternal;
extern GetGroupMembersResponseDefaultTypeInternal _GetGroupMembersResponse_default_instance_;
class GetGroupMessagesRequest;
struct GetGroupMessagesRequestDefaultTypeInternal;
extern GetGroupMessagesRequestDefaultTypeInternal _GetGroupMessagesRequest_default_instance_;
class GetGroupMessagesResponse;
struct GetGroupMessagesResponseDefaultTypeInternal;
extern GetGroupMessagesResponseDefaultTypeInternal _GetGroupMessagesResponse_default_instance_;
class GroupInfo;
struct GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class GroupMember;
struct GroupMemberDefaultTypeInternal;
extern GroupMemberDefaultTypeInternal _GroupMember_default_instance_;
class InviteMemberRequest;
struct InviteMemberRequestDefaultTypeInternal;
extern InviteMemberRequestDefaultTypeInternal _InviteMemberRequest_default_instance_;
class InviteMemberResponse;
struct InviteMemberResponseDefaultTypeInternal;
extern InviteMemberResponseDefaultTypeInternal _InviteMemberResponse_default_instance_;
class KickMemberRequest;
struct KickMemberRequestDefaultTypeInternal;
extern KickMemberRequestDefaultTypeInternal _KickMemberRequest_default_instance_;
class KickMemberResponse;
struct KickMemberResponseDefaultTypeInternal;
extern KickMemberResponseDefaultTypeInternal _KickMemberResponse_default_instance_;
class ModifyGroupInfoRequest;
struct ModifyGroupInfoRequestDefaultTypeInternal;
extern ModifyGroupInfoRequestDefaultTypeInternal _ModifyGroupInfoRequest_default_instance_;
class ModifyGroupInfoResponse;
struct ModifyGroupInfoResponseDefaultTypeInternal;
extern ModifyGroupInfoResponseDefaultTypeInternal _ModifyGroupInfoResponse_default_instance_;
class QuitGroupRequest;
struct QuitGroupRequestDefaultTypeInternal;
extern QuitGroupRequestDefaultTypeInternal _QuitGroupRequest_default_instance_;
class QuitGroupResponse;
struct QuitGroupResponseDefaultTypeInternal;
extern QuitGroupResponseDefaultTypeInternal _QuitGroupResponse_default_instance_;
class SetGroupAdminRequest;
struct SetGroupAdminRequestDefaultTypeInternal;
extern SetGroupAdminRequestDefaultTypeInternal _SetGroupAdminRequest_default_instance_;
class SetGroupAdminResponse;
struct SetGroupAdminResponseDefaultTypeInternal;
extern SetGroupAdminResponseDefaultTypeInternal _SetGroupAdminResponse_default_instance_;
class TransferGroupOwnerRequest;
struct TransferGroupOwnerRequestDefaultTypeInternal;
extern TransferGroupOwnerRequestDefaultTypeInternal _TransferGroupOwnerRequest_default_instance_;
class TransferGroupOwnerResponse;
struct TransferGroupOwnerResponseDefaultTypeInternal;
extern TransferGroupOwnerResponseDefaultTypeInternal _TransferGroupOwnerResponse_default_instance_;
}  // namespace group
}  // namespace im
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace im {
namespace group {
enum GroupRole : int {
  MEMBER = 0,
  ADMIN = 1,
  OWNER = 2,
  GroupRole_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GroupRole_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GroupRole_IsValid(int value);
extern const uint32_t GroupRole_internal_data_[];
constexpr GroupRole GroupRole_MIN = static_cast<GroupRole>(0);
constexpr GroupRole GroupRole_MAX = static_cast<GroupRole>(2);
constexpr int GroupRole_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
GroupRole_descriptor();
template <typename T>
const std::string& GroupRole_Name(T value) {
  static_assert(std::is_same<T, GroupRole>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GroupRole_Name().");
  return GroupRole_Name(static_cast<GroupRole>(value));
}
template <>
inline const std::string& GroupRole_Name(GroupRole value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GroupRole_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool GroupRole_Parse(absl::string_view name, GroupRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupRole>(
      GroupRole_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GroupMember final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GroupMember) */ {
 public:
  inline GroupMember() : GroupMember(nullptr) {}
  ~GroupMember() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GroupMember* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GroupMember));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GroupMember(
      ::google::protobuf::internal::ConstantInitialized);

  inline GroupMember(const GroupMember& from) : GroupMember(nullptr, from) {}
  inline GroupMember(GroupMember&& from) noexcept
      : GroupMember(nullptr, std::move(from)) {}
  inline GroupMember& operator=(const GroupMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupMember& operator=(GroupMember&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const GroupMember* internal_default_instance() {
    return reinterpret_cast<const GroupMember*>(
        &_GroupMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GroupMember& a, GroupMember& b) { a.Swap(&b); }
  inline void Swap(GroupMember* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupMember* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupMember* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GroupMember>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GroupMember& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GroupMember& from) { GroupMember::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GroupMember* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GroupMember"; }

 protected:
  explicit GroupMember(::google::protobuf::Arena* arena);
  GroupMember(::google::protobuf::Arena* arena, const GroupMember& from);
  GroupMember(::google::protobuf::Arena* arena, GroupMember&& from) noexcept
      : GroupMember(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kNicknameFieldNumber = 3,
    kRoleFieldNumber = 2,
    kIsMutedFieldNumber = 4,
    kJoinTimeFieldNumber = 5,
  };
  // string uid = 1;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string nickname = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // .im.group.GroupRole role = 2;
  void clear_role() ;
  ::im::group::GroupRole role() const;
  void set_role(::im::group::GroupRole value);

  private:
  ::im::group::GroupRole _internal_role() const;
  void _internal_set_role(::im::group::GroupRole value);

  public:
  // int32 is_muted = 4;
  void clear_is_muted() ;
  ::int32_t is_muted() const;
  void set_is_muted(::int32_t value);

  private:
  ::int32_t _internal_is_muted() const;
  void _internal_set_is_muted(::int32_t value);

  public:
  // int64 join_time = 5;
  void clear_join_time() ;
  ::int64_t join_time() const;
  void set_join_time(::int64_t value);

  private:
  ::int64_t _internal_join_time() const;
  void _internal_set_join_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:im.group.GroupMember)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GroupMember& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    int role_;
    ::int32_t is_muted_;
    ::int64_t join_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GroupInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GroupInfo) */ {
 public:
  inline GroupInfo() : GroupInfo(nullptr) {}
  ~GroupInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GroupInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GroupInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GroupInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GroupInfo(const GroupInfo& from) : GroupInfo(nullptr, from) {}
  inline GroupInfo(GroupInfo&& from) noexcept
      : GroupInfo(nullptr, std::move(from)) {}
  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupInfo& operator=(GroupInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GroupInfo* internal_default_instance() {
    return reinterpret_cast<const GroupInfo*>(
        &_GroupInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GroupInfo& a, GroupInfo& b) { a.Swap(&b); }
  inline void Swap(GroupInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GroupInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GroupInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GroupInfo& from) { GroupInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GroupInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GroupInfo"; }

 protected:
  explicit GroupInfo(::google::protobuf::Arena* arena);
  GroupInfo(::google::protobuf::Arena* arena, const GroupInfo& from);
  GroupInfo(::google::protobuf::Arena* arena, GroupInfo&& from) noexcept
      : GroupInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kAvatarFieldNumber = 3,
    kNoticeFieldNumber = 4,
    kOwnerUidFieldNumber = 5,
    kCreateTimeFieldNumber = 7,
    kIsMutedFieldNumber = 6,
  };
  // string group_id = 1;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string avatar = 3;
  void clear_avatar() ;
  const std::string& avatar() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar(Arg_&& arg, Args_... args);
  std::string* mutable_avatar();
  PROTOBUF_NODISCARD std::string* release_avatar();
  void set_allocated_avatar(std::string* value);

  private:
  const std::string& _internal_avatar() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar(
      const std::string& value);
  std::string* _internal_mutable_avatar();

  public:
  // string notice = 4;
  void clear_notice() ;
  const std::string& notice() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notice(Arg_&& arg, Args_... args);
  std::string* mutable_notice();
  PROTOBUF_NODISCARD std::string* release_notice();
  void set_allocated_notice(std::string* value);

  private:
  const std::string& _internal_notice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notice(
      const std::string& value);
  std::string* _internal_mutable_notice();

  public:
  // string owner_uid = 5;
  void clear_owner_uid() ;
  const std::string& owner_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner_uid(Arg_&& arg, Args_... args);
  std::string* mutable_owner_uid();
  PROTOBUF_NODISCARD std::string* release_owner_uid();
  void set_allocated_owner_uid(std::string* value);

  private:
  const std::string& _internal_owner_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner_uid(
      const std::string& value);
  std::string* _internal_mutable_owner_uid();

  public:
  // int64 create_time = 7;
  void clear_create_time() ;
  ::int64_t create_time() const;
  void set_create_time(::int64_t value);

  private:
  ::int64_t _internal_create_time() const;
  void _internal_set_create_time(::int64_t value);

  public:
  // int32 is_muted = 6;
  void clear_is_muted() ;
  ::int32_t is_muted() const;
  void set_is_muted(::int32_t value);

  private:
  ::int32_t _internal_is_muted() const;
  void _internal_set_is_muted(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:im.group.GroupInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GroupInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr avatar_;
    ::google::protobuf::internal::ArenaStringPtr notice_;
    ::google::protobuf::internal::ArenaStringPtr owner_uid_;
    ::int64_t create_time_;
    ::int32_t is_muted_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class TransferGroupOwnerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.TransferGroupOwnerResponse) */ {
 public:
  inline TransferGroupOwnerResponse() : TransferGroupOwnerResponse(nullptr) {}
  ~TransferGroupOwnerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferGroupOwnerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferGroupOwnerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferGroupOwnerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferGroupOwnerResponse(const TransferGroupOwnerResponse& from) : TransferGroupOwnerResponse(nullptr, from) {}
  inline TransferGroupOwnerResponse(TransferGroupOwnerResponse&& from) noexcept
      : TransferGroupOwnerResponse(nullptr, std::move(from)) {}
  inline TransferGroupOwnerResponse& operator=(const TransferGroupOwnerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferGroupOwnerResponse& operator=(TransferGroupOwnerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferGroupOwnerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferGroupOwnerResponse* internal_default_instance() {
    return reinterpret_cast<const TransferGroupOwnerResponse*>(
        &_TransferGroupOwnerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(TransferGroupOwnerResponse& a, TransferGroupOwnerResponse& b) { a.Swap(&b); }
  inline void Swap(TransferGroupOwnerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferGroupOwnerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferGroupOwnerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferGroupOwnerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferGroupOwnerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferGroupOwnerResponse& from) { TransferGroupOwnerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferGroupOwnerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.TransferGroupOwnerResponse"; }

 protected:
  explicit TransferGroupOwnerResponse(::google::protobuf::Arena* arena);
  TransferGroupOwnerResponse(::google::protobuf::Arena* arena, const TransferGroupOwnerResponse& from);
  TransferGroupOwnerResponse(::google::protobuf::Arena* arena, TransferGroupOwnerResponse&& from) noexcept
      : TransferGroupOwnerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.TransferGroupOwnerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferGroupOwnerResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class TransferGroupOwnerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.TransferGroupOwnerRequest) */ {
 public:
  inline TransferGroupOwnerRequest() : TransferGroupOwnerRequest(nullptr) {}
  ~TransferGroupOwnerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransferGroupOwnerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransferGroupOwnerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransferGroupOwnerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransferGroupOwnerRequest(const TransferGroupOwnerRequest& from) : TransferGroupOwnerRequest(nullptr, from) {}
  inline TransferGroupOwnerRequest(TransferGroupOwnerRequest&& from) noexcept
      : TransferGroupOwnerRequest(nullptr, std::move(from)) {}
  inline TransferGroupOwnerRequest& operator=(const TransferGroupOwnerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransferGroupOwnerRequest& operator=(TransferGroupOwnerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransferGroupOwnerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransferGroupOwnerRequest* internal_default_instance() {
    return reinterpret_cast<const TransferGroupOwnerRequest*>(
        &_TransferGroupOwnerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(TransferGroupOwnerRequest& a, TransferGroupOwnerRequest& b) { a.Swap(&b); }
  inline void Swap(TransferGroupOwnerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransferGroupOwnerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransferGroupOwnerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransferGroupOwnerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransferGroupOwnerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransferGroupOwnerRequest& from) { TransferGroupOwnerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransferGroupOwnerRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.TransferGroupOwnerRequest"; }

 protected:
  explicit TransferGroupOwnerRequest(::google::protobuf::Arena* arena);
  TransferGroupOwnerRequest(::google::protobuf::Arena* arena, const TransferGroupOwnerRequest& from);
  TransferGroupOwnerRequest(::google::protobuf::Arena* arena, TransferGroupOwnerRequest&& from) noexcept
      : TransferGroupOwnerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kNewOwnerUidFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // string new_owner_uid = 3;
  void clear_new_owner_uid() ;
  const std::string& new_owner_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_owner_uid(Arg_&& arg, Args_... args);
  std::string* mutable_new_owner_uid();
  PROTOBUF_NODISCARD std::string* release_new_owner_uid();
  void set_allocated_new_owner_uid(std::string* value);

  private:
  const std::string& _internal_new_owner_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_owner_uid(
      const std::string& value);
  std::string* _internal_mutable_new_owner_uid();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.TransferGroupOwnerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransferGroupOwnerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::google::protobuf::internal::ArenaStringPtr new_owner_uid_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class SetGroupAdminResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.SetGroupAdminResponse) */ {
 public:
  inline SetGroupAdminResponse() : SetGroupAdminResponse(nullptr) {}
  ~SetGroupAdminResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetGroupAdminResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetGroupAdminResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetGroupAdminResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetGroupAdminResponse(const SetGroupAdminResponse& from) : SetGroupAdminResponse(nullptr, from) {}
  inline SetGroupAdminResponse(SetGroupAdminResponse&& from) noexcept
      : SetGroupAdminResponse(nullptr, std::move(from)) {}
  inline SetGroupAdminResponse& operator=(const SetGroupAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGroupAdminResponse& operator=(SetGroupAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGroupAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGroupAdminResponse* internal_default_instance() {
    return reinterpret_cast<const SetGroupAdminResponse*>(
        &_SetGroupAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SetGroupAdminResponse& a, SetGroupAdminResponse& b) { a.Swap(&b); }
  inline void Swap(SetGroupAdminResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGroupAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGroupAdminResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetGroupAdminResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGroupAdminResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetGroupAdminResponse& from) { SetGroupAdminResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetGroupAdminResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.SetGroupAdminResponse"; }

 protected:
  explicit SetGroupAdminResponse(::google::protobuf::Arena* arena);
  SetGroupAdminResponse(::google::protobuf::Arena* arena, const SetGroupAdminResponse& from);
  SetGroupAdminResponse(::google::protobuf::Arena* arena, SetGroupAdminResponse&& from) noexcept
      : SetGroupAdminResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.SetGroupAdminResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetGroupAdminResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class SetGroupAdminRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.SetGroupAdminRequest) */ {
 public:
  inline SetGroupAdminRequest() : SetGroupAdminRequest(nullptr) {}
  ~SetGroupAdminRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetGroupAdminRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetGroupAdminRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetGroupAdminRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetGroupAdminRequest(const SetGroupAdminRequest& from) : SetGroupAdminRequest(nullptr, from) {}
  inline SetGroupAdminRequest(SetGroupAdminRequest&& from) noexcept
      : SetGroupAdminRequest(nullptr, std::move(from)) {}
  inline SetGroupAdminRequest& operator=(const SetGroupAdminRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGroupAdminRequest& operator=(SetGroupAdminRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGroupAdminRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGroupAdminRequest* internal_default_instance() {
    return reinterpret_cast<const SetGroupAdminRequest*>(
        &_SetGroupAdminRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(SetGroupAdminRequest& a, SetGroupAdminRequest& b) { a.Swap(&b); }
  inline void Swap(SetGroupAdminRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGroupAdminRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGroupAdminRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetGroupAdminRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGroupAdminRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetGroupAdminRequest& from) { SetGroupAdminRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetGroupAdminRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.SetGroupAdminRequest"; }

 protected:
  explicit SetGroupAdminRequest(::google::protobuf::Arena* arena);
  SetGroupAdminRequest(::google::protobuf::Arena* arena, const SetGroupAdminRequest& from);
  SetGroupAdminRequest(::google::protobuf::Arena* arena, SetGroupAdminRequest&& from) noexcept
      : SetGroupAdminRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kUidFieldNumber = 3,
    kHeaderFieldNumber = 1,
    kSetAdminFieldNumber = 4,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // string uid = 3;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // bool set_admin = 4;
  void clear_set_admin() ;
  bool set_admin() const;
  void set_set_admin(bool value);

  private:
  bool _internal_set_admin() const;
  void _internal_set_set_admin(bool value);

  public:
  // @@protoc_insertion_point(class_scope:im.group.SetGroupAdminRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetGroupAdminRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::im::base::IMHeader* header_;
    bool set_admin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class QuitGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.QuitGroupResponse) */ {
 public:
  inline QuitGroupResponse() : QuitGroupResponse(nullptr) {}
  ~QuitGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QuitGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QuitGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuitGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuitGroupResponse(const QuitGroupResponse& from) : QuitGroupResponse(nullptr, from) {}
  inline QuitGroupResponse(QuitGroupResponse&& from) noexcept
      : QuitGroupResponse(nullptr, std::move(from)) {}
  inline QuitGroupResponse& operator=(const QuitGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuitGroupResponse& operator=(QuitGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuitGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuitGroupResponse* internal_default_instance() {
    return reinterpret_cast<const QuitGroupResponse*>(
        &_QuitGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QuitGroupResponse& a, QuitGroupResponse& b) { a.Swap(&b); }
  inline void Swap(QuitGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuitGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuitGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QuitGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuitGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuitGroupResponse& from) { QuitGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QuitGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.QuitGroupResponse"; }

 protected:
  explicit QuitGroupResponse(::google::protobuf::Arena* arena);
  QuitGroupResponse(::google::protobuf::Arena* arena, const QuitGroupResponse& from);
  QuitGroupResponse(::google::protobuf::Arena* arena, QuitGroupResponse&& from) noexcept
      : QuitGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.QuitGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuitGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class QuitGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.QuitGroupRequest) */ {
 public:
  inline QuitGroupRequest() : QuitGroupRequest(nullptr) {}
  ~QuitGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QuitGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QuitGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuitGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuitGroupRequest(const QuitGroupRequest& from) : QuitGroupRequest(nullptr, from) {}
  inline QuitGroupRequest(QuitGroupRequest&& from) noexcept
      : QuitGroupRequest(nullptr, std::move(from)) {}
  inline QuitGroupRequest& operator=(const QuitGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuitGroupRequest& operator=(QuitGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuitGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuitGroupRequest* internal_default_instance() {
    return reinterpret_cast<const QuitGroupRequest*>(
        &_QuitGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QuitGroupRequest& a, QuitGroupRequest& b) { a.Swap(&b); }
  inline void Swap(QuitGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuitGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuitGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QuitGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuitGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuitGroupRequest& from) { QuitGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QuitGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.QuitGroupRequest"; }

 protected:
  explicit QuitGroupRequest(::google::protobuf::Arena* arena);
  QuitGroupRequest(::google::protobuf::Arena* arena, const QuitGroupRequest& from);
  QuitGroupRequest(::google::protobuf::Arena* arena, QuitGroupRequest&& from) noexcept
      : QuitGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.QuitGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuitGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class ModifyGroupInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.ModifyGroupInfoResponse) */ {
 public:
  inline ModifyGroupInfoResponse() : ModifyGroupInfoResponse(nullptr) {}
  ~ModifyGroupInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModifyGroupInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModifyGroupInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModifyGroupInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModifyGroupInfoResponse(const ModifyGroupInfoResponse& from) : ModifyGroupInfoResponse(nullptr, from) {}
  inline ModifyGroupInfoResponse(ModifyGroupInfoResponse&& from) noexcept
      : ModifyGroupInfoResponse(nullptr, std::move(from)) {}
  inline ModifyGroupInfoResponse& operator=(const ModifyGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModifyGroupInfoResponse& operator=(ModifyGroupInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModifyGroupInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModifyGroupInfoResponse* internal_default_instance() {
    return reinterpret_cast<const ModifyGroupInfoResponse*>(
        &_ModifyGroupInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ModifyGroupInfoResponse& a, ModifyGroupInfoResponse& b) { a.Swap(&b); }
  inline void Swap(ModifyGroupInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModifyGroupInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModifyGroupInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModifyGroupInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModifyGroupInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModifyGroupInfoResponse& from) { ModifyGroupInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModifyGroupInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.ModifyGroupInfoResponse"; }

 protected:
  explicit ModifyGroupInfoResponse(::google::protobuf::Arena* arena);
  ModifyGroupInfoResponse(::google::protobuf::Arena* arena, const ModifyGroupInfoResponse& from);
  ModifyGroupInfoResponse(::google::protobuf::Arena* arena, ModifyGroupInfoResponse&& from) noexcept
      : ModifyGroupInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
    kGroupFieldNumber = 2,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // .im.group.GroupInfo group = 2;
  bool has_group() const;
  void clear_group() ;
  const ::im::group::GroupInfo& group() const;
  PROTOBUF_NODISCARD ::im::group::GroupInfo* release_group();
  ::im::group::GroupInfo* mutable_group();
  void set_allocated_group(::im::group::GroupInfo* value);
  void unsafe_arena_set_allocated_group(::im::group::GroupInfo* value);
  ::im::group::GroupInfo* unsafe_arena_release_group();

  private:
  const ::im::group::GroupInfo& _internal_group() const;
  ::im::group::GroupInfo* _internal_mutable_group();

  public:
  // @@protoc_insertion_point(class_scope:im.group.ModifyGroupInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModifyGroupInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    ::im::group::GroupInfo* group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class ModifyGroupInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.ModifyGroupInfoRequest) */ {
 public:
  inline ModifyGroupInfoRequest() : ModifyGroupInfoRequest(nullptr) {}
  ~ModifyGroupInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModifyGroupInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModifyGroupInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModifyGroupInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModifyGroupInfoRequest(const ModifyGroupInfoRequest& from) : ModifyGroupInfoRequest(nullptr, from) {}
  inline ModifyGroupInfoRequest(ModifyGroupInfoRequest&& from) noexcept
      : ModifyGroupInfoRequest(nullptr, std::move(from)) {}
  inline ModifyGroupInfoRequest& operator=(const ModifyGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModifyGroupInfoRequest& operator=(ModifyGroupInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModifyGroupInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModifyGroupInfoRequest* internal_default_instance() {
    return reinterpret_cast<const ModifyGroupInfoRequest*>(
        &_ModifyGroupInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ModifyGroupInfoRequest& a, ModifyGroupInfoRequest& b) { a.Swap(&b); }
  inline void Swap(ModifyGroupInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModifyGroupInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModifyGroupInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModifyGroupInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModifyGroupInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModifyGroupInfoRequest& from) { ModifyGroupInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModifyGroupInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.ModifyGroupInfoRequest"; }

 protected:
  explicit ModifyGroupInfoRequest(::google::protobuf::Arena* arena);
  ModifyGroupInfoRequest(::google::protobuf::Arena* arena, const ModifyGroupInfoRequest& from);
  ModifyGroupInfoRequest(::google::protobuf::Arena* arena, ModifyGroupInfoRequest&& from) noexcept
      : ModifyGroupInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kAvatarFieldNumber = 4,
    kNoticeFieldNumber = 5,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string avatar = 4;
  void clear_avatar() ;
  const std::string& avatar() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar(Arg_&& arg, Args_... args);
  std::string* mutable_avatar();
  PROTOBUF_NODISCARD std::string* release_avatar();
  void set_allocated_avatar(std::string* value);

  private:
  const std::string& _internal_avatar() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar(
      const std::string& value);
  std::string* _internal_mutable_avatar();

  public:
  // string notice = 5;
  void clear_notice() ;
  const std::string& notice() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notice(Arg_&& arg, Args_... args);
  std::string* mutable_notice();
  PROTOBUF_NODISCARD std::string* release_notice();
  void set_allocated_notice(std::string* value);

  private:
  const std::string& _internal_notice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notice(
      const std::string& value);
  std::string* _internal_mutable_notice();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.ModifyGroupInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModifyGroupInfoRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr avatar_;
    ::google::protobuf::internal::ArenaStringPtr notice_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class KickMemberResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.KickMemberResponse) */ {
 public:
  inline KickMemberResponse() : KickMemberResponse(nullptr) {}
  ~KickMemberResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(KickMemberResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(KickMemberResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KickMemberResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline KickMemberResponse(const KickMemberResponse& from) : KickMemberResponse(nullptr, from) {}
  inline KickMemberResponse(KickMemberResponse&& from) noexcept
      : KickMemberResponse(nullptr, std::move(from)) {}
  inline KickMemberResponse& operator=(const KickMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline KickMemberResponse& operator=(KickMemberResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KickMemberResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const KickMemberResponse* internal_default_instance() {
    return reinterpret_cast<const KickMemberResponse*>(
        &_KickMemberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(KickMemberResponse& a, KickMemberResponse& b) { a.Swap(&b); }
  inline void Swap(KickMemberResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KickMemberResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KickMemberResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<KickMemberResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KickMemberResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KickMemberResponse& from) { KickMemberResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(KickMemberResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.KickMemberResponse"; }

 protected:
  explicit KickMemberResponse(::google::protobuf::Arena* arena);
  KickMemberResponse(::google::protobuf::Arena* arena, const KickMemberResponse& from);
  KickMemberResponse(::google::protobuf::Arena* arena, KickMemberResponse&& from) noexcept
      : KickMemberResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.KickMemberResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KickMemberResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class KickMemberRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.KickMemberRequest) */ {
 public:
  inline KickMemberRequest() : KickMemberRequest(nullptr) {}
  ~KickMemberRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(KickMemberRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(KickMemberRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KickMemberRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline KickMemberRequest(const KickMemberRequest& from) : KickMemberRequest(nullptr, from) {}
  inline KickMemberRequest(KickMemberRequest&& from) noexcept
      : KickMemberRequest(nullptr, std::move(from)) {}
  inline KickMemberRequest& operator=(const KickMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline KickMemberRequest& operator=(KickMemberRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KickMemberRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const KickMemberRequest* internal_default_instance() {
    return reinterpret_cast<const KickMemberRequest*>(
        &_KickMemberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(KickMemberRequest& a, KickMemberRequest& b) { a.Swap(&b); }
  inline void Swap(KickMemberRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KickMemberRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KickMemberRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<KickMemberRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KickMemberRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KickMemberRequest& from) { KickMemberRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(KickMemberRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.KickMemberRequest"; }

 protected:
  explicit KickMemberRequest(::google::protobuf::Arena* arena);
  KickMemberRequest(::google::protobuf::Arena* arena, const KickMemberRequest& from);
  KickMemberRequest(::google::protobuf::Arena* arena, KickMemberRequest&& from) noexcept
      : KickMemberRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKickUidsFieldNumber = 3,
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated string kick_uids = 3;
  int kick_uids_size() const;
  private:
  int _internal_kick_uids_size() const;

  public:
  void clear_kick_uids() ;
  const std::string& kick_uids(int index) const;
  std::string* mutable_kick_uids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kick_uids(int index, Arg_&& value, Args_... args);
  std::string* add_kick_uids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_kick_uids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& kick_uids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_kick_uids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_kick_uids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_kick_uids();

  public:
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.KickMemberRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KickMemberRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> kick_uids_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class InviteMemberResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.InviteMemberResponse) */ {
 public:
  inline InviteMemberResponse() : InviteMemberResponse(nullptr) {}
  ~InviteMemberResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InviteMemberResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InviteMemberResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InviteMemberResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline InviteMemberResponse(const InviteMemberResponse& from) : InviteMemberResponse(nullptr, from) {}
  inline InviteMemberResponse(InviteMemberResponse&& from) noexcept
      : InviteMemberResponse(nullptr, std::move(from)) {}
  inline InviteMemberResponse& operator=(const InviteMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InviteMemberResponse& operator=(InviteMemberResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InviteMemberResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InviteMemberResponse* internal_default_instance() {
    return reinterpret_cast<const InviteMemberResponse*>(
        &_InviteMemberResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(InviteMemberResponse& a, InviteMemberResponse& b) { a.Swap(&b); }
  inline void Swap(InviteMemberResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InviteMemberResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InviteMemberResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InviteMemberResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InviteMemberResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InviteMemberResponse& from) { InviteMemberResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InviteMemberResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.InviteMemberResponse"; }

 protected:
  explicit InviteMemberResponse(::google::protobuf::Arena* arena);
  InviteMemberResponse(::google::protobuf::Arena* arena, const InviteMemberResponse& from);
  InviteMemberResponse(::google::protobuf::Arena* arena, InviteMemberResponse&& from) noexcept
      : InviteMemberResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.InviteMemberResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InviteMemberResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class InviteMemberRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.InviteMemberRequest) */ {
 public:
  inline InviteMemberRequest() : InviteMemberRequest(nullptr) {}
  ~InviteMemberRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InviteMemberRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InviteMemberRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InviteMemberRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline InviteMemberRequest(const InviteMemberRequest& from) : InviteMemberRequest(nullptr, from) {}
  inline InviteMemberRequest(InviteMemberRequest&& from) noexcept
      : InviteMemberRequest(nullptr, std::move(from)) {}
  inline InviteMemberRequest& operator=(const InviteMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InviteMemberRequest& operator=(InviteMemberRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InviteMemberRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InviteMemberRequest* internal_default_instance() {
    return reinterpret_cast<const InviteMemberRequest*>(
        &_InviteMemberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(InviteMemberRequest& a, InviteMemberRequest& b) { a.Swap(&b); }
  inline void Swap(InviteMemberRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InviteMemberRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InviteMemberRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InviteMemberRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InviteMemberRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InviteMemberRequest& from) { InviteMemberRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InviteMemberRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.InviteMemberRequest"; }

 protected:
  explicit InviteMemberRequest(::google::protobuf::Arena* arena);
  InviteMemberRequest(::google::protobuf::Arena* arena, const InviteMemberRequest& from);
  InviteMemberRequest(::google::protobuf::Arena* arena, InviteMemberRequest&& from) noexcept
      : InviteMemberRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInviteUidsFieldNumber = 3,
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated string invite_uids = 3;
  int invite_uids_size() const;
  private:
  int _internal_invite_uids_size() const;

  public:
  void clear_invite_uids() ;
  const std::string& invite_uids(int index) const;
  std::string* mutable_invite_uids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_invite_uids(int index, Arg_&& value, Args_... args);
  std::string* add_invite_uids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_invite_uids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& invite_uids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_invite_uids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_invite_uids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_invite_uids();

  public:
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.InviteMemberRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InviteMemberRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> invite_uids_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupMessagesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupMessagesResponse) */ {
 public:
  inline GetGroupMessagesResponse() : GetGroupMessagesResponse(nullptr) {}
  ~GetGroupMessagesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupMessagesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupMessagesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupMessagesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupMessagesResponse(const GetGroupMessagesResponse& from) : GetGroupMessagesResponse(nullptr, from) {}
  inline GetGroupMessagesResponse(GetGroupMessagesResponse&& from) noexcept
      : GetGroupMessagesResponse(nullptr, std::move(from)) {}
  inline GetGroupMessagesResponse& operator=(const GetGroupMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupMessagesResponse& operator=(GetGroupMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupMessagesResponse*>(
        &_GetGroupMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetGroupMessagesResponse& a, GetGroupMessagesResponse& b) { a.Swap(&b); }
  inline void Swap(GetGroupMessagesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupMessagesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupMessagesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupMessagesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupMessagesResponse& from) { GetGroupMessagesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupMessagesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupMessagesResponse"; }

 protected:
  explicit GetGroupMessagesResponse(::google::protobuf::Arena* arena);
  GetGroupMessagesResponse(::google::protobuf::Arena* arena, const GetGroupMessagesResponse& from);
  GetGroupMessagesResponse(::google::protobuf::Arena* arena, GetGroupMessagesResponse&& from) noexcept
      : GetGroupMessagesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 2,
    kBaseFieldNumber = 1,
  };
  // repeated bytes messages = 2;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  const std::string& messages(int index) const;
  std::string* mutable_messages(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_messages(int index, Arg_&& value, Args_... args);
  std::string* add_messages();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_messages(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_messages();

  public:
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupMessagesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupMessagesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> messages_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupMessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupMessagesRequest) */ {
 public:
  inline GetGroupMessagesRequest() : GetGroupMessagesRequest(nullptr) {}
  ~GetGroupMessagesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupMessagesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupMessagesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupMessagesRequest(const GetGroupMessagesRequest& from) : GetGroupMessagesRequest(nullptr, from) {}
  inline GetGroupMessagesRequest(GetGroupMessagesRequest&& from) noexcept
      : GetGroupMessagesRequest(nullptr, std::move(from)) {}
  inline GetGroupMessagesRequest& operator=(const GetGroupMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupMessagesRequest& operator=(GetGroupMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupMessagesRequest*>(
        &_GetGroupMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetGroupMessagesRequest& a, GetGroupMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(GetGroupMessagesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupMessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupMessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupMessagesRequest& from) { GetGroupMessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupMessagesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupMessagesRequest"; }

 protected:
  explicit GetGroupMessagesRequest(::google::protobuf::Arena* arena);
  GetGroupMessagesRequest(::google::protobuf::Arena* arena, const GetGroupMessagesRequest& from);
  GetGroupMessagesRequest(::google::protobuf::Arena* arena, GetGroupMessagesRequest&& from) noexcept
      : GetGroupMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
    kSinceFieldNumber = 3,
    kLimitFieldNumber = 4,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // int64 since = 3;
  void clear_since() ;
  ::int64_t since() const;
  void set_since(::int64_t value);

  private:
  ::int64_t _internal_since() const;
  void _internal_set_since(::int64_t value);

  public:
  // int32 limit = 4;
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupMessagesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    ::int64_t since_;
    ::int32_t limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupMembersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupMembersResponse) */ {
 public:
  inline GetGroupMembersResponse() : GetGroupMembersResponse(nullptr) {}
  ~GetGroupMembersResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupMembersResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupMembersResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupMembersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupMembersResponse(const GetGroupMembersResponse& from) : GetGroupMembersResponse(nullptr, from) {}
  inline GetGroupMembersResponse(GetGroupMembersResponse&& from) noexcept
      : GetGroupMembersResponse(nullptr, std::move(from)) {}
  inline GetGroupMembersResponse& operator=(const GetGroupMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupMembersResponse& operator=(GetGroupMembersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupMembersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupMembersResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupMembersResponse*>(
        &_GetGroupMembersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetGroupMembersResponse& a, GetGroupMembersResponse& b) { a.Swap(&b); }
  inline void Swap(GetGroupMembersResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupMembersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupMembersResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupMembersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupMembersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupMembersResponse& from) { GetGroupMembersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupMembersResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupMembersResponse"; }

 protected:
  explicit GetGroupMembersResponse(::google::protobuf::Arena* arena);
  GetGroupMembersResponse(::google::protobuf::Arena* arena, const GetGroupMembersResponse& from);
  GetGroupMembersResponse(::google::protobuf::Arena* arena, GetGroupMembersResponse&& from) noexcept
      : GetGroupMembersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMembersFieldNumber = 2,
    kBaseFieldNumber = 1,
  };
  // repeated .im.group.GroupMember members = 2;
  int members_size() const;
  private:
  int _internal_members_size() const;

  public:
  void clear_members() ;
  ::im::group::GroupMember* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* mutable_members();

  private:
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& _internal_members() const;
  ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* _internal_mutable_members();
  public:
  const ::im::group::GroupMember& members(int index) const;
  ::im::group::GroupMember* add_members();
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& members() const;
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupMembersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupMembersResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::im::group::GroupMember > members_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupMembersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupMembersRequest) */ {
 public:
  inline GetGroupMembersRequest() : GetGroupMembersRequest(nullptr) {}
  ~GetGroupMembersRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupMembersRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupMembersRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupMembersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupMembersRequest(const GetGroupMembersRequest& from) : GetGroupMembersRequest(nullptr, from) {}
  inline GetGroupMembersRequest(GetGroupMembersRequest&& from) noexcept
      : GetGroupMembersRequest(nullptr, std::move(from)) {}
  inline GetGroupMembersRequest& operator=(const GetGroupMembersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupMembersRequest& operator=(GetGroupMembersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupMembersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupMembersRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupMembersRequest*>(
        &_GetGroupMembersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetGroupMembersRequest& a, GetGroupMembersRequest& b) { a.Swap(&b); }
  inline void Swap(GetGroupMembersRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupMembersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupMembersRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupMembersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupMembersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupMembersRequest& from) { GetGroupMembersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupMembersRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupMembersRequest"; }

 protected:
  explicit GetGroupMembersRequest(::google::protobuf::Arena* arena);
  GetGroupMembersRequest(::google::protobuf::Arena* arena, const GetGroupMembersRequest& from);
  GetGroupMembersRequest(::google::protobuf::Arena* arena, GetGroupMembersRequest&& from) noexcept
      : GetGroupMembersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupMembersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupMembersRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupListResponse) */ {
 public:
  inline GetGroupListResponse() : GetGroupListResponse(nullptr) {}
  ~GetGroupListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupListResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupListResponse(const GetGroupListResponse& from) : GetGroupListResponse(nullptr, from) {}
  inline GetGroupListResponse(GetGroupListResponse&& from) noexcept
      : GetGroupListResponse(nullptr, std::move(from)) {}
  inline GetGroupListResponse& operator=(const GetGroupListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupListResponse& operator=(GetGroupListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupListResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupListResponse*>(
        &_GetGroupListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetGroupListResponse& a, GetGroupListResponse& b) { a.Swap(&b); }
  inline void Swap(GetGroupListResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupListResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupListResponse& from) { GetGroupListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupListResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupListResponse"; }

 protected:
  explicit GetGroupListResponse(::google::protobuf::Arena* arena);
  GetGroupListResponse(::google::protobuf::Arena* arena, const GetGroupListResponse& from);
  GetGroupListResponse(::google::protobuf::Arena* arena, GetGroupListResponse&& from) noexcept
      : GetGroupListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupsFieldNumber = 2,
    kBaseFieldNumber = 1,
  };
  // repeated .im.group.GroupInfo groups = 2;
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  ::im::group::GroupInfo* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>* mutable_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>& _internal_groups() const;
  ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>* _internal_mutable_groups();
  public:
  const ::im::group::GroupInfo& groups(int index) const;
  ::im::group::GroupInfo* add_groups();
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>& groups() const;
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::im::group::GroupInfo > groups_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupListRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupListRequest) */ {
 public:
  inline GetGroupListRequest() : GetGroupListRequest(nullptr) {}
  ~GetGroupListRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupListRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupListRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupListRequest(const GetGroupListRequest& from) : GetGroupListRequest(nullptr, from) {}
  inline GetGroupListRequest(GetGroupListRequest&& from) noexcept
      : GetGroupListRequest(nullptr, std::move(from)) {}
  inline GetGroupListRequest& operator=(const GetGroupListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupListRequest& operator=(GetGroupListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupListRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupListRequest*>(
        &_GetGroupListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetGroupListRequest& a, GetGroupListRequest& b) { a.Swap(&b); }
  inline void Swap(GetGroupListRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupListRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupListRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupListRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupListRequest& from) { GetGroupListRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupListRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupListRequest"; }

 protected:
  explicit GetGroupListRequest(::google::protobuf::Arena* arena);
  GetGroupListRequest(::google::protobuf::Arena* arena, const GetGroupListRequest& from);
  GetGroupListRequest(::google::protobuf::Arena* arena, GetGroupListRequest&& from) noexcept
      : GetGroupListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
  };
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupListRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupInfoResponse) */ {
 public:
  inline GetGroupInfoResponse() : GetGroupInfoResponse(nullptr) {}
  ~GetGroupInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupInfoResponse(const GetGroupInfoResponse& from) : GetGroupInfoResponse(nullptr, from) {}
  inline GetGroupInfoResponse(GetGroupInfoResponse&& from) noexcept
      : GetGroupInfoResponse(nullptr, std::move(from)) {}
  inline GetGroupInfoResponse& operator=(const GetGroupInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupInfoResponse& operator=(GetGroupInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetGroupInfoResponse*>(
        &_GetGroupInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetGroupInfoResponse& a, GetGroupInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetGroupInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupInfoResponse& from) { GetGroupInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupInfoResponse"; }

 protected:
  explicit GetGroupInfoResponse(::google::protobuf::Arena* arena);
  GetGroupInfoResponse(::google::protobuf::Arena* arena, const GetGroupInfoResponse& from);
  GetGroupInfoResponse(::google::protobuf::Arena* arena, GetGroupInfoResponse&& from) noexcept
      : GetGroupInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMembersFieldNumber = 3,
    kBaseFieldNumber = 1,
    kGroupFieldNumber = 2,
  };
  // repeated .im.group.GroupMember members = 3;
  int members_size() const;
  private:
  int _internal_members_size() const;

  public:
  void clear_members() ;
  ::im::group::GroupMember* mutable_members(int index);
  ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* mutable_members();

  private:
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& _internal_members() const;
  ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* _internal_mutable_members();
  public:
  const ::im::group::GroupMember& members(int index) const;
  ::im::group::GroupMember* add_members();
  const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& members() const;
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // .im.group.GroupInfo group = 2;
  bool has_group() const;
  void clear_group() ;
  const ::im::group::GroupInfo& group() const;
  PROTOBUF_NODISCARD ::im::group::GroupInfo* release_group();
  ::im::group::GroupInfo* mutable_group();
  void set_allocated_group(::im::group::GroupInfo* value);
  void unsafe_arena_set_allocated_group(::im::group::GroupInfo* value);
  ::im::group::GroupInfo* unsafe_arena_release_group();

  private:
  const ::im::group::GroupInfo& _internal_group() const;
  ::im::group::GroupInfo* _internal_mutable_group();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::im::group::GroupMember > members_;
    ::im::base::BaseResponse* base_;
    ::im::group::GroupInfo* group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class GetGroupInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.GetGroupInfoRequest) */ {
 public:
  inline GetGroupInfoRequest() : GetGroupInfoRequest(nullptr) {}
  ~GetGroupInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetGroupInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetGroupInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGroupInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGroupInfoRequest(const GetGroupInfoRequest& from) : GetGroupInfoRequest(nullptr, from) {}
  inline GetGroupInfoRequest(GetGroupInfoRequest&& from) noexcept
      : GetGroupInfoRequest(nullptr, std::move(from)) {}
  inline GetGroupInfoRequest& operator=(const GetGroupInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGroupInfoRequest& operator=(GetGroupInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGroupInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGroupInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetGroupInfoRequest*>(
        &_GetGroupInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetGroupInfoRequest& a, GetGroupInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetGroupInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGroupInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGroupInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetGroupInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGroupInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGroupInfoRequest& from) { GetGroupInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetGroupInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.GetGroupInfoRequest"; }

 protected:
  explicit GetGroupInfoRequest(::google::protobuf::Arena* arena);
  GetGroupInfoRequest(::google::protobuf::Arena* arena, const GetGroupInfoRequest& from);
  GetGroupInfoRequest(::google::protobuf::Arena* arena, GetGroupInfoRequest&& from) noexcept
      : GetGroupInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.GetGroupInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGroupInfoRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class CreateGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.CreateGroupResponse) */ {
 public:
  inline CreateGroupResponse() : CreateGroupResponse(nullptr) {}
  ~CreateGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateGroupResponse(const CreateGroupResponse& from) : CreateGroupResponse(nullptr, from) {}
  inline CreateGroupResponse(CreateGroupResponse&& from) noexcept
      : CreateGroupResponse(nullptr, std::move(from)) {}
  inline CreateGroupResponse& operator=(const CreateGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGroupResponse& operator=(CreateGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CreateGroupResponse*>(
        &_CreateGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CreateGroupResponse& a, CreateGroupResponse& b) { a.Swap(&b); }
  inline void Swap(CreateGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateGroupResponse& from) { CreateGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.CreateGroupResponse"; }

 protected:
  explicit CreateGroupResponse(::google::protobuf::Arena* arena);
  CreateGroupResponse(::google::protobuf::Arena* arena, const CreateGroupResponse& from);
  CreateGroupResponse(::google::protobuf::Arena* arena, CreateGroupResponse&& from) noexcept
      : CreateGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
    kGroupFieldNumber = 2,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // .im.group.GroupInfo group = 2;
  bool has_group() const;
  void clear_group() ;
  const ::im::group::GroupInfo& group() const;
  PROTOBUF_NODISCARD ::im::group::GroupInfo* release_group();
  ::im::group::GroupInfo* mutable_group();
  void set_allocated_group(::im::group::GroupInfo* value);
  void unsafe_arena_set_allocated_group(::im::group::GroupInfo* value);
  ::im::group::GroupInfo* unsafe_arena_release_group();

  private:
  const ::im::group::GroupInfo& _internal_group() const;
  ::im::group::GroupInfo* _internal_mutable_group();

  public:
  // @@protoc_insertion_point(class_scope:im.group.CreateGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    ::im::group::GroupInfo* group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class CreateGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.CreateGroupRequest) */ {
 public:
  inline CreateGroupRequest() : CreateGroupRequest(nullptr) {}
  ~CreateGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateGroupRequest(const CreateGroupRequest& from) : CreateGroupRequest(nullptr, from) {}
  inline CreateGroupRequest(CreateGroupRequest&& from) noexcept
      : CreateGroupRequest(nullptr, std::move(from)) {}
  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateGroupRequest& operator=(CreateGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupRequest*>(
        &_CreateGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CreateGroupRequest& a, CreateGroupRequest& b) { a.Swap(&b); }
  inline void Swap(CreateGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateGroupRequest& from) { CreateGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.CreateGroupRequest"; }

 protected:
  explicit CreateGroupRequest(::google::protobuf::Arena* arena);
  CreateGroupRequest(::google::protobuf::Arena* arena, const CreateGroupRequest& from);
  CreateGroupRequest(::google::protobuf::Arena* arena, CreateGroupRequest&& from) noexcept
      : CreateGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMembersFieldNumber = 4,
    kNameFieldNumber = 2,
    kAvatarFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // repeated string members = 4;
  int members_size() const;
  private:
  int _internal_members_size() const;

  public:
  void clear_members() ;
  const std::string& members(int index) const;
  std::string* mutable_members(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_members(int index, Arg_&& value, Args_... args);
  std::string* add_members();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_members(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& members() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_members();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_members() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_members();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string avatar = 3;
  void clear_avatar() ;
  const std::string& avatar() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar(Arg_&& arg, Args_... args);
  std::string* mutable_avatar();
  PROTOBUF_NODISCARD std::string* release_avatar();
  void set_allocated_avatar(std::string* value);

  private:
  const std::string& _internal_avatar() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar(
      const std::string& value);
  std::string* _internal_mutable_avatar();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.CreateGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> members_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr avatar_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class ApplyJoinGroupResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.ApplyJoinGroupResponse) */ {
 public:
  inline ApplyJoinGroupResponse() : ApplyJoinGroupResponse(nullptr) {}
  ~ApplyJoinGroupResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApplyJoinGroupResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApplyJoinGroupResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApplyJoinGroupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ApplyJoinGroupResponse(const ApplyJoinGroupResponse& from) : ApplyJoinGroupResponse(nullptr, from) {}
  inline ApplyJoinGroupResponse(ApplyJoinGroupResponse&& from) noexcept
      : ApplyJoinGroupResponse(nullptr, std::move(from)) {}
  inline ApplyJoinGroupResponse& operator=(const ApplyJoinGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyJoinGroupResponse& operator=(ApplyJoinGroupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyJoinGroupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ApplyJoinGroupResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyJoinGroupResponse*>(
        &_ApplyJoinGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ApplyJoinGroupResponse& a, ApplyJoinGroupResponse& b) { a.Swap(&b); }
  inline void Swap(ApplyJoinGroupResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyJoinGroupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyJoinGroupResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApplyJoinGroupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ApplyJoinGroupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ApplyJoinGroupResponse& from) { ApplyJoinGroupResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApplyJoinGroupResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.ApplyJoinGroupResponse"; }

 protected:
  explicit ApplyJoinGroupResponse(::google::protobuf::Arena* arena);
  ApplyJoinGroupResponse(::google::protobuf::Arena* arena, const ApplyJoinGroupResponse& from);
  ApplyJoinGroupResponse(::google::protobuf::Arena* arena, ApplyJoinGroupResponse&& from) noexcept
      : ApplyJoinGroupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
  };
  // .im.base.BaseResponse base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::im::base::BaseResponse& base() const;
  PROTOBUF_NODISCARD ::im::base::BaseResponse* release_base();
  ::im::base::BaseResponse* mutable_base();
  void set_allocated_base(::im::base::BaseResponse* value);
  void unsafe_arena_set_allocated_base(::im::base::BaseResponse* value);
  ::im::base::BaseResponse* unsafe_arena_release_base();

  private:
  const ::im::base::BaseResponse& _internal_base() const;
  ::im::base::BaseResponse* _internal_mutable_base();

  public:
  // @@protoc_insertion_point(class_scope:im.group.ApplyJoinGroupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ApplyJoinGroupResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::im::base::BaseResponse* base_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};
// -------------------------------------------------------------------

class ApplyJoinGroupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:im.group.ApplyJoinGroupRequest) */ {
 public:
  inline ApplyJoinGroupRequest() : ApplyJoinGroupRequest(nullptr) {}
  ~ApplyJoinGroupRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApplyJoinGroupRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApplyJoinGroupRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApplyJoinGroupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ApplyJoinGroupRequest(const ApplyJoinGroupRequest& from) : ApplyJoinGroupRequest(nullptr, from) {}
  inline ApplyJoinGroupRequest(ApplyJoinGroupRequest&& from) noexcept
      : ApplyJoinGroupRequest(nullptr, std::move(from)) {}
  inline ApplyJoinGroupRequest& operator=(const ApplyJoinGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyJoinGroupRequest& operator=(ApplyJoinGroupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyJoinGroupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ApplyJoinGroupRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyJoinGroupRequest*>(
        &_ApplyJoinGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ApplyJoinGroupRequest& a, ApplyJoinGroupRequest& b) { a.Swap(&b); }
  inline void Swap(ApplyJoinGroupRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyJoinGroupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyJoinGroupRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApplyJoinGroupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ApplyJoinGroupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ApplyJoinGroupRequest& from) { ApplyJoinGroupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApplyJoinGroupRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "im.group.ApplyJoinGroupRequest"; }

 protected:
  explicit ApplyJoinGroupRequest(::google::protobuf::Arena* arena);
  ApplyJoinGroupRequest(::google::protobuf::Arena* arena, const ApplyJoinGroupRequest& from);
  ApplyJoinGroupRequest(::google::protobuf::Arena* arena, ApplyJoinGroupRequest&& from) noexcept
      : ApplyJoinGroupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 2,
    kApplyMsgFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // string group_id = 2;
  void clear_group_id() ;
  const std::string& group_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group_id(Arg_&& arg, Args_... args);
  std::string* mutable_group_id();
  PROTOBUF_NODISCARD std::string* release_group_id();
  void set_allocated_group_id(std::string* value);

  private:
  const std::string& _internal_group_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group_id(
      const std::string& value);
  std::string* _internal_mutable_group_id();

  public:
  // string apply_msg = 3;
  void clear_apply_msg() ;
  const std::string& apply_msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_apply_msg(Arg_&& arg, Args_... args);
  std::string* mutable_apply_msg();
  PROTOBUF_NODISCARD std::string* release_apply_msg();
  void set_allocated_apply_msg(std::string* value);

  private:
  const std::string& _internal_apply_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_apply_msg(
      const std::string& value);
  std::string* _internal_mutable_apply_msg();

  public:
  // .im.base.IMHeader header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::im::base::IMHeader& header() const;
  PROTOBUF_NODISCARD ::im::base::IMHeader* release_header();
  ::im::base::IMHeader* mutable_header();
  void set_allocated_header(::im::base::IMHeader* value);
  void unsafe_arena_set_allocated_header(::im::base::IMHeader* value);
  ::im::base::IMHeader* unsafe_arena_release_header();

  private:
  const ::im::base::IMHeader& _internal_header() const;
  ::im::base::IMHeader* _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:im.group.ApplyJoinGroupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ApplyJoinGroupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_id_;
    ::google::protobuf::internal::ArenaStringPtr apply_msg_;
    ::im::base::IMHeader* header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_group_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GroupInfo

// string group_id = 1;
inline void GroupInfo::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& GroupInfo::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupInfo::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.group_id)
}
inline std::string* GroupInfo::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.GroupInfo.group_id)
  return _s;
}
inline const std::string& GroupInfo::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void GroupInfo::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* GroupInfo::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* GroupInfo::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupInfo.group_id)
  return _impl_.group_id_.Release();
}
inline void GroupInfo::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupInfo.group_id)
}

// string name = 2;
inline void GroupInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GroupInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.name)
}
inline std::string* GroupInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:im.group.GroupInfo.name)
  return _s;
}
inline const std::string& GroupInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GroupInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GroupInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GroupInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupInfo.name)
  return _impl_.name_.Release();
}
inline void GroupInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupInfo.name)
}

// string avatar = 3;
inline void GroupInfo::clear_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.ClearToEmpty();
}
inline const std::string& GroupInfo::avatar() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.avatar)
  return _internal_avatar();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupInfo::set_avatar(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.avatar)
}
inline std::string* GroupInfo::mutable_avatar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar();
  // @@protoc_insertion_point(field_mutable:im.group.GroupInfo.avatar)
  return _s;
}
inline const std::string& GroupInfo::_internal_avatar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_.Get();
}
inline void GroupInfo::_internal_set_avatar(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(value, GetArena());
}
inline std::string* GroupInfo::_internal_mutable_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.avatar_.Mutable( GetArena());
}
inline std::string* GroupInfo::release_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupInfo.avatar)
  return _impl_.avatar_.Release();
}
inline void GroupInfo::set_allocated_avatar(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.avatar_.IsDefault()) {
    _impl_.avatar_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupInfo.avatar)
}

// string notice = 4;
inline void GroupInfo::clear_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.ClearToEmpty();
}
inline const std::string& GroupInfo::notice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.notice)
  return _internal_notice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupInfo::set_notice(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.notice)
}
inline std::string* GroupInfo::mutable_notice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notice();
  // @@protoc_insertion_point(field_mutable:im.group.GroupInfo.notice)
  return _s;
}
inline const std::string& GroupInfo::_internal_notice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notice_.Get();
}
inline void GroupInfo::_internal_set_notice(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(value, GetArena());
}
inline std::string* GroupInfo::_internal_mutable_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.notice_.Mutable( GetArena());
}
inline std::string* GroupInfo::release_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupInfo.notice)
  return _impl_.notice_.Release();
}
inline void GroupInfo::set_allocated_notice(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.notice_.IsDefault()) {
    _impl_.notice_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupInfo.notice)
}

// string owner_uid = 5;
inline void GroupInfo::clear_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_uid_.ClearToEmpty();
}
inline const std::string& GroupInfo::owner_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.owner_uid)
  return _internal_owner_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupInfo::set_owner_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.owner_uid)
}
inline std::string* GroupInfo::mutable_owner_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner_uid();
  // @@protoc_insertion_point(field_mutable:im.group.GroupInfo.owner_uid)
  return _s;
}
inline const std::string& GroupInfo::_internal_owner_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_uid_.Get();
}
inline void GroupInfo::_internal_set_owner_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_uid_.Set(value, GetArena());
}
inline std::string* GroupInfo::_internal_mutable_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_uid_.Mutable( GetArena());
}
inline std::string* GroupInfo::release_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupInfo.owner_uid)
  return _impl_.owner_uid_.Release();
}
inline void GroupInfo::set_allocated_owner_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.owner_uid_.IsDefault()) {
    _impl_.owner_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupInfo.owner_uid)
}

// int32 is_muted = 6;
inline void GroupInfo::clear_is_muted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_muted_ = 0;
}
inline ::int32_t GroupInfo::is_muted() const {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.is_muted)
  return _internal_is_muted();
}
inline void GroupInfo::set_is_muted(::int32_t value) {
  _internal_set_is_muted(value);
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.is_muted)
}
inline ::int32_t GroupInfo::_internal_is_muted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_muted_;
}
inline void GroupInfo::_internal_set_is_muted(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_muted_ = value;
}

// int64 create_time = 7;
inline void GroupInfo::clear_create_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = ::int64_t{0};
}
inline ::int64_t GroupInfo::create_time() const {
  // @@protoc_insertion_point(field_get:im.group.GroupInfo.create_time)
  return _internal_create_time();
}
inline void GroupInfo::set_create_time(::int64_t value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:im.group.GroupInfo.create_time)
}
inline ::int64_t GroupInfo::_internal_create_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.create_time_;
}
inline void GroupInfo::_internal_set_create_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.create_time_ = value;
}

// -------------------------------------------------------------------

// GroupMember

// string uid = 1;
inline void GroupMember::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& GroupMember::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupMember.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupMember::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupMember.uid)
}
inline std::string* GroupMember::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:im.group.GroupMember.uid)
  return _s;
}
inline const std::string& GroupMember::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void GroupMember::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* GroupMember::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* GroupMember::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupMember.uid)
  return _impl_.uid_.Release();
}
inline void GroupMember::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupMember.uid)
}

// .im.group.GroupRole role = 2;
inline void GroupMember::clear_role() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = 0;
}
inline ::im::group::GroupRole GroupMember::role() const {
  // @@protoc_insertion_point(field_get:im.group.GroupMember.role)
  return _internal_role();
}
inline void GroupMember::set_role(::im::group::GroupRole value) {
  _internal_set_role(value);
  // @@protoc_insertion_point(field_set:im.group.GroupMember.role)
}
inline ::im::group::GroupRole GroupMember::_internal_role() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::im::group::GroupRole>(_impl_.role_);
}
inline void GroupMember::_internal_set_role(::im::group::GroupRole value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.role_ = value;
}

// string nickname = 3;
inline void GroupMember::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& GroupMember::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GroupMember.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GroupMember::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GroupMember.nickname)
}
inline std::string* GroupMember::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:im.group.GroupMember.nickname)
  return _s;
}
inline const std::string& GroupMember::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void GroupMember::_internal_set_nickname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* GroupMember::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* GroupMember::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GroupMember.nickname)
  return _impl_.nickname_.Release();
}
inline void GroupMember::set_allocated_nickname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GroupMember.nickname)
}

// int32 is_muted = 4;
inline void GroupMember::clear_is_muted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_muted_ = 0;
}
inline ::int32_t GroupMember::is_muted() const {
  // @@protoc_insertion_point(field_get:im.group.GroupMember.is_muted)
  return _internal_is_muted();
}
inline void GroupMember::set_is_muted(::int32_t value) {
  _internal_set_is_muted(value);
  // @@protoc_insertion_point(field_set:im.group.GroupMember.is_muted)
}
inline ::int32_t GroupMember::_internal_is_muted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_muted_;
}
inline void GroupMember::_internal_set_is_muted(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_muted_ = value;
}

// int64 join_time = 5;
inline void GroupMember::clear_join_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = ::int64_t{0};
}
inline ::int64_t GroupMember::join_time() const {
  // @@protoc_insertion_point(field_get:im.group.GroupMember.join_time)
  return _internal_join_time();
}
inline void GroupMember::set_join_time(::int64_t value) {
  _internal_set_join_time(value);
  // @@protoc_insertion_point(field_set:im.group.GroupMember.join_time)
}
inline ::int64_t GroupMember::_internal_join_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.join_time_;
}
inline void GroupMember::_internal_set_join_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.join_time_ = value;
}

// -------------------------------------------------------------------

// CreateGroupRequest

// .im.base.IMHeader header = 1;
inline bool CreateGroupRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& CreateGroupRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& CreateGroupRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupRequest.header)
  return _internal_header();
}
inline void CreateGroupRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.CreateGroupRequest.header)
}
inline ::im::base::IMHeader* CreateGroupRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* CreateGroupRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.CreateGroupRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* CreateGroupRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* CreateGroupRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupRequest.header)
  return _msg;
}
inline void CreateGroupRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.CreateGroupRequest.header)
}

// string name = 2;
inline void CreateGroupRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CreateGroupRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateGroupRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.CreateGroupRequest.name)
}
inline std::string* CreateGroupRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupRequest.name)
  return _s;
}
inline const std::string& CreateGroupRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CreateGroupRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CreateGroupRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CreateGroupRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.CreateGroupRequest.name)
  return _impl_.name_.Release();
}
inline void CreateGroupRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.CreateGroupRequest.name)
}

// string avatar = 3;
inline void CreateGroupRequest::clear_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.ClearToEmpty();
}
inline const std::string& CreateGroupRequest::avatar() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupRequest.avatar)
  return _internal_avatar();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateGroupRequest::set_avatar(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.CreateGroupRequest.avatar)
}
inline std::string* CreateGroupRequest::mutable_avatar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar();
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupRequest.avatar)
  return _s;
}
inline const std::string& CreateGroupRequest::_internal_avatar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_.Get();
}
inline void CreateGroupRequest::_internal_set_avatar(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(value, GetArena());
}
inline std::string* CreateGroupRequest::_internal_mutable_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.avatar_.Mutable( GetArena());
}
inline std::string* CreateGroupRequest::release_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.CreateGroupRequest.avatar)
  return _impl_.avatar_.Release();
}
inline void CreateGroupRequest::set_allocated_avatar(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.avatar_.IsDefault()) {
    _impl_.avatar_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.CreateGroupRequest.avatar)
}

// repeated string members = 4;
inline int CreateGroupRequest::_internal_members_size() const {
  return _internal_members().size();
}
inline int CreateGroupRequest::members_size() const {
  return _internal_members_size();
}
inline void CreateGroupRequest::clear_members() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.members_.Clear();
}
inline std::string* CreateGroupRequest::add_members() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_members()->Add();
  // @@protoc_insertion_point(field_add_mutable:im.group.CreateGroupRequest.members)
  return _s;
}
inline const std::string& CreateGroupRequest::members(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupRequest.members)
  return _internal_members().Get(index);
}
inline std::string* CreateGroupRequest::mutable_members(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupRequest.members)
  return _internal_mutable_members()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CreateGroupRequest::set_members(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_members()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:im.group.CreateGroupRequest.members)
}
template <typename Arg_, typename... Args_>
inline void CreateGroupRequest::add_members(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_members(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:im.group.CreateGroupRequest.members)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateGroupRequest::members() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.CreateGroupRequest.members)
  return _internal_members();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateGroupRequest::mutable_members() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.CreateGroupRequest.members)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_members();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateGroupRequest::_internal_members() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.members_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateGroupRequest::_internal_mutable_members() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.members_;
}

// -------------------------------------------------------------------

// CreateGroupResponse

// .im.base.BaseResponse base = 1;
inline bool CreateGroupResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& CreateGroupResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& CreateGroupResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupResponse.base)
  return _internal_base();
}
inline void CreateGroupResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.CreateGroupResponse.base)
}
inline ::im::base::BaseResponse* CreateGroupResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* CreateGroupResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.CreateGroupResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* CreateGroupResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* CreateGroupResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupResponse.base)
  return _msg;
}
inline void CreateGroupResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.CreateGroupResponse.base)
}

// .im.group.GroupInfo group = 2;
inline bool CreateGroupResponse::has_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.group_ != nullptr);
  return value;
}
inline void CreateGroupResponse::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ != nullptr) _impl_.group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::im::group::GroupInfo& CreateGroupResponse::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::group::GroupInfo* p = _impl_.group_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::group::GroupInfo&>(::im::group::_GroupInfo_default_instance_);
}
inline const ::im::group::GroupInfo& CreateGroupResponse::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.CreateGroupResponse.group)
  return _internal_group();
}
inline void CreateGroupResponse::unsafe_arena_set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.group_);
  }
  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.CreateGroupResponse.group)
}
inline ::im::group::GroupInfo* CreateGroupResponse::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* released = _impl_.group_;
  _impl_.group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::group::GroupInfo* CreateGroupResponse::unsafe_arena_release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.CreateGroupResponse.group)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* temp = _impl_.group_;
  _impl_.group_ = nullptr;
  return temp;
}
inline ::im::group::GroupInfo* CreateGroupResponse::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::group::GroupInfo>(GetArena());
    _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(p);
  }
  return _impl_.group_;
}
inline ::im::group::GroupInfo* CreateGroupResponse::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::im::group::GroupInfo* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:im.group.CreateGroupResponse.group)
  return _msg;
}
inline void CreateGroupResponse::set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.CreateGroupResponse.group)
}

// -------------------------------------------------------------------

// GetGroupInfoRequest

// .im.base.IMHeader header = 1;
inline bool GetGroupInfoRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& GetGroupInfoRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& GetGroupInfoRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupInfoRequest.header)
  return _internal_header();
}
inline void GetGroupInfoRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupInfoRequest.header)
}
inline ::im::base::IMHeader* GetGroupInfoRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* GetGroupInfoRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupInfoRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* GetGroupInfoRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* GetGroupInfoRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupInfoRequest.header)
  return _msg;
}
inline void GetGroupInfoRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupInfoRequest.header)
}

// string group_id = 2;
inline void GetGroupInfoRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& GetGroupInfoRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupInfoRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGroupInfoRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GetGroupInfoRequest.group_id)
}
inline std::string* GetGroupInfoRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupInfoRequest.group_id)
  return _s;
}
inline const std::string& GetGroupInfoRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void GetGroupInfoRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* GetGroupInfoRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* GetGroupInfoRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupInfoRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void GetGroupInfoRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupInfoRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupInfoResponse

// .im.base.BaseResponse base = 1;
inline bool GetGroupInfoResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& GetGroupInfoResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& GetGroupInfoResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupInfoResponse.base)
  return _internal_base();
}
inline void GetGroupInfoResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupInfoResponse.base)
}
inline ::im::base::BaseResponse* GetGroupInfoResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* GetGroupInfoResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupInfoResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* GetGroupInfoResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* GetGroupInfoResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupInfoResponse.base)
  return _msg;
}
inline void GetGroupInfoResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupInfoResponse.base)
}

// .im.group.GroupInfo group = 2;
inline bool GetGroupInfoResponse::has_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.group_ != nullptr);
  return value;
}
inline void GetGroupInfoResponse::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ != nullptr) _impl_.group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::im::group::GroupInfo& GetGroupInfoResponse::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::group::GroupInfo* p = _impl_.group_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::group::GroupInfo&>(::im::group::_GroupInfo_default_instance_);
}
inline const ::im::group::GroupInfo& GetGroupInfoResponse::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupInfoResponse.group)
  return _internal_group();
}
inline void GetGroupInfoResponse::unsafe_arena_set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.group_);
  }
  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupInfoResponse.group)
}
inline ::im::group::GroupInfo* GetGroupInfoResponse::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* released = _impl_.group_;
  _impl_.group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::group::GroupInfo* GetGroupInfoResponse::unsafe_arena_release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupInfoResponse.group)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* temp = _impl_.group_;
  _impl_.group_ = nullptr;
  return temp;
}
inline ::im::group::GroupInfo* GetGroupInfoResponse::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::group::GroupInfo>(GetArena());
    _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(p);
  }
  return _impl_.group_;
}
inline ::im::group::GroupInfo* GetGroupInfoResponse::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::im::group::GroupInfo* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupInfoResponse.group)
  return _msg;
}
inline void GetGroupInfoResponse::set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupInfoResponse.group)
}

// repeated .im.group.GroupMember members = 3;
inline int GetGroupInfoResponse::_internal_members_size() const {
  return _internal_members().size();
}
inline int GetGroupInfoResponse::members_size() const {
  return _internal_members_size();
}
inline void GetGroupInfoResponse::clear_members() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.members_.Clear();
}
inline ::im::group::GroupMember* GetGroupInfoResponse::mutable_members(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupInfoResponse.members)
  return _internal_mutable_members()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* GetGroupInfoResponse::mutable_members()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.GetGroupInfoResponse.members)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_members();
}
inline const ::im::group::GroupMember& GetGroupInfoResponse::members(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupInfoResponse.members)
  return _internal_members().Get(index);
}
inline ::im::group::GroupMember* GetGroupInfoResponse::add_members() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::im::group::GroupMember* _add = _internal_mutable_members()->Add();
  // @@protoc_insertion_point(field_add:im.group.GetGroupInfoResponse.members)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& GetGroupInfoResponse::members() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.GetGroupInfoResponse.members)
  return _internal_members();
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>&
GetGroupInfoResponse::_internal_members() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.members_;
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>*
GetGroupInfoResponse::_internal_mutable_members() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.members_;
}

// -------------------------------------------------------------------

// GetGroupListRequest

// .im.base.IMHeader header = 1;
inline bool GetGroupListRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& GetGroupListRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& GetGroupListRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupListRequest.header)
  return _internal_header();
}
inline void GetGroupListRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupListRequest.header)
}
inline ::im::base::IMHeader* GetGroupListRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* GetGroupListRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupListRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* GetGroupListRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* GetGroupListRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupListRequest.header)
  return _msg;
}
inline void GetGroupListRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupListRequest.header)
}

// -------------------------------------------------------------------

// GetGroupListResponse

// .im.base.BaseResponse base = 1;
inline bool GetGroupListResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& GetGroupListResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& GetGroupListResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupListResponse.base)
  return _internal_base();
}
inline void GetGroupListResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupListResponse.base)
}
inline ::im::base::BaseResponse* GetGroupListResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* GetGroupListResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupListResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* GetGroupListResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* GetGroupListResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupListResponse.base)
  return _msg;
}
inline void GetGroupListResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupListResponse.base)
}

// repeated .im.group.GroupInfo groups = 2;
inline int GetGroupListResponse::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int GetGroupListResponse::groups_size() const {
  return _internal_groups_size();
}
inline void GetGroupListResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
inline ::im::group::GroupInfo* GetGroupListResponse::mutable_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupListResponse.groups)
  return _internal_mutable_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>* GetGroupListResponse::mutable_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.GetGroupListResponse.groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_groups();
}
inline const ::im::group::GroupInfo& GetGroupListResponse::groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupListResponse.groups)
  return _internal_groups().Get(index);
}
inline ::im::group::GroupInfo* GetGroupListResponse::add_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::im::group::GroupInfo* _add = _internal_mutable_groups()->Add();
  // @@protoc_insertion_point(field_add:im.group.GetGroupListResponse.groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>& GetGroupListResponse::groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.GetGroupListResponse.groups)
  return _internal_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>&
GetGroupListResponse::_internal_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groups_;
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupInfo>*
GetGroupListResponse::_internal_mutable_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.groups_;
}

// -------------------------------------------------------------------

// ModifyGroupInfoRequest

// .im.base.IMHeader header = 1;
inline bool ModifyGroupInfoRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& ModifyGroupInfoRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& ModifyGroupInfoRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoRequest.header)
  return _internal_header();
}
inline void ModifyGroupInfoRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.ModifyGroupInfoRequest.header)
}
inline ::im::base::IMHeader* ModifyGroupInfoRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* ModifyGroupInfoRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* ModifyGroupInfoRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* ModifyGroupInfoRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoRequest.header)
  return _msg;
}
inline void ModifyGroupInfoRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoRequest.header)
}

// string group_id = 2;
inline void ModifyGroupInfoRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& ModifyGroupInfoRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModifyGroupInfoRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ModifyGroupInfoRequest.group_id)
}
inline std::string* ModifyGroupInfoRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoRequest.group_id)
  return _s;
}
inline const std::string& ModifyGroupInfoRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void ModifyGroupInfoRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* ModifyGroupInfoRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* ModifyGroupInfoRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void ModifyGroupInfoRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoRequest.group_id)
}

// string name = 3;
inline void ModifyGroupInfoRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ModifyGroupInfoRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModifyGroupInfoRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ModifyGroupInfoRequest.name)
}
inline std::string* ModifyGroupInfoRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoRequest.name)
  return _s;
}
inline const std::string& ModifyGroupInfoRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ModifyGroupInfoRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ModifyGroupInfoRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ModifyGroupInfoRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoRequest.name)
  return _impl_.name_.Release();
}
inline void ModifyGroupInfoRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoRequest.name)
}

// string avatar = 4;
inline void ModifyGroupInfoRequest::clear_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.ClearToEmpty();
}
inline const std::string& ModifyGroupInfoRequest::avatar() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoRequest.avatar)
  return _internal_avatar();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModifyGroupInfoRequest::set_avatar(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ModifyGroupInfoRequest.avatar)
}
inline std::string* ModifyGroupInfoRequest::mutable_avatar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoRequest.avatar)
  return _s;
}
inline const std::string& ModifyGroupInfoRequest::_internal_avatar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_.Get();
}
inline void ModifyGroupInfoRequest::_internal_set_avatar(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.Set(value, GetArena());
}
inline std::string* ModifyGroupInfoRequest::_internal_mutable_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.avatar_.Mutable( GetArena());
}
inline std::string* ModifyGroupInfoRequest::release_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoRequest.avatar)
  return _impl_.avatar_.Release();
}
inline void ModifyGroupInfoRequest::set_allocated_avatar(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.avatar_.IsDefault()) {
    _impl_.avatar_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoRequest.avatar)
}

// string notice = 5;
inline void ModifyGroupInfoRequest::clear_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.ClearToEmpty();
}
inline const std::string& ModifyGroupInfoRequest::notice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoRequest.notice)
  return _internal_notice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModifyGroupInfoRequest::set_notice(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ModifyGroupInfoRequest.notice)
}
inline std::string* ModifyGroupInfoRequest::mutable_notice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notice();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoRequest.notice)
  return _s;
}
inline const std::string& ModifyGroupInfoRequest::_internal_notice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notice_.Get();
}
inline void ModifyGroupInfoRequest::_internal_set_notice(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.Set(value, GetArena());
}
inline std::string* ModifyGroupInfoRequest::_internal_mutable_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.notice_.Mutable( GetArena());
}
inline std::string* ModifyGroupInfoRequest::release_notice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoRequest.notice)
  return _impl_.notice_.Release();
}
inline void ModifyGroupInfoRequest::set_allocated_notice(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notice_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.notice_.IsDefault()) {
    _impl_.notice_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoRequest.notice)
}

// -------------------------------------------------------------------

// ModifyGroupInfoResponse

// .im.base.BaseResponse base = 1;
inline bool ModifyGroupInfoResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& ModifyGroupInfoResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& ModifyGroupInfoResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoResponse.base)
  return _internal_base();
}
inline void ModifyGroupInfoResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.ModifyGroupInfoResponse.base)
}
inline ::im::base::BaseResponse* ModifyGroupInfoResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* ModifyGroupInfoResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* ModifyGroupInfoResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* ModifyGroupInfoResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoResponse.base)
  return _msg;
}
inline void ModifyGroupInfoResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoResponse.base)
}

// .im.group.GroupInfo group = 2;
inline bool ModifyGroupInfoResponse::has_group() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.group_ != nullptr);
  return value;
}
inline void ModifyGroupInfoResponse::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ != nullptr) _impl_.group_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::im::group::GroupInfo& ModifyGroupInfoResponse::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::group::GroupInfo* p = _impl_.group_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::group::GroupInfo&>(::im::group::_GroupInfo_default_instance_);
}
inline const ::im::group::GroupInfo& ModifyGroupInfoResponse::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ModifyGroupInfoResponse.group)
  return _internal_group();
}
inline void ModifyGroupInfoResponse::unsafe_arena_set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.group_);
  }
  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.ModifyGroupInfoResponse.group)
}
inline ::im::group::GroupInfo* ModifyGroupInfoResponse::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* released = _impl_.group_;
  _impl_.group_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::group::GroupInfo* ModifyGroupInfoResponse::unsafe_arena_release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ModifyGroupInfoResponse.group)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::im::group::GroupInfo* temp = _impl_.group_;
  _impl_.group_ = nullptr;
  return temp;
}
inline ::im::group::GroupInfo* ModifyGroupInfoResponse::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.group_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::group::GroupInfo>(GetArena());
    _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(p);
  }
  return _impl_.group_;
}
inline ::im::group::GroupInfo* ModifyGroupInfoResponse::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::im::group::GroupInfo* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:im.group.ModifyGroupInfoResponse.group)
  return _msg;
}
inline void ModifyGroupInfoResponse::set_allocated_group(::im::group::GroupInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.group_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.group_ = reinterpret_cast<::im::group::GroupInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.ModifyGroupInfoResponse.group)
}

// -------------------------------------------------------------------

// InviteMemberRequest

// .im.base.IMHeader header = 1;
inline bool InviteMemberRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& InviteMemberRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& InviteMemberRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.InviteMemberRequest.header)
  return _internal_header();
}
inline void InviteMemberRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.InviteMemberRequest.header)
}
inline ::im::base::IMHeader* InviteMemberRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* InviteMemberRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.InviteMemberRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* InviteMemberRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* InviteMemberRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.InviteMemberRequest.header)
  return _msg;
}
inline void InviteMemberRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.InviteMemberRequest.header)
}

// string group_id = 2;
inline void InviteMemberRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& InviteMemberRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.InviteMemberRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InviteMemberRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.InviteMemberRequest.group_id)
}
inline std::string* InviteMemberRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.InviteMemberRequest.group_id)
  return _s;
}
inline const std::string& InviteMemberRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void InviteMemberRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* InviteMemberRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* InviteMemberRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.InviteMemberRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void InviteMemberRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.InviteMemberRequest.group_id)
}

// repeated string invite_uids = 3;
inline int InviteMemberRequest::_internal_invite_uids_size() const {
  return _internal_invite_uids().size();
}
inline int InviteMemberRequest::invite_uids_size() const {
  return _internal_invite_uids_size();
}
inline void InviteMemberRequest::clear_invite_uids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invite_uids_.Clear();
}
inline std::string* InviteMemberRequest::add_invite_uids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_invite_uids()->Add();
  // @@protoc_insertion_point(field_add_mutable:im.group.InviteMemberRequest.invite_uids)
  return _s;
}
inline const std::string& InviteMemberRequest::invite_uids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.InviteMemberRequest.invite_uids)
  return _internal_invite_uids().Get(index);
}
inline std::string* InviteMemberRequest::mutable_invite_uids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.InviteMemberRequest.invite_uids)
  return _internal_mutable_invite_uids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InviteMemberRequest::set_invite_uids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_invite_uids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:im.group.InviteMemberRequest.invite_uids)
}
template <typename Arg_, typename... Args_>
inline void InviteMemberRequest::add_invite_uids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_invite_uids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:im.group.InviteMemberRequest.invite_uids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InviteMemberRequest::invite_uids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.InviteMemberRequest.invite_uids)
  return _internal_invite_uids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InviteMemberRequest::mutable_invite_uids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.InviteMemberRequest.invite_uids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_invite_uids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InviteMemberRequest::_internal_invite_uids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invite_uids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InviteMemberRequest::_internal_mutable_invite_uids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.invite_uids_;
}

// -------------------------------------------------------------------

// InviteMemberResponse

// .im.base.BaseResponse base = 1;
inline bool InviteMemberResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& InviteMemberResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& InviteMemberResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.InviteMemberResponse.base)
  return _internal_base();
}
inline void InviteMemberResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.InviteMemberResponse.base)
}
inline ::im::base::BaseResponse* InviteMemberResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* InviteMemberResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.InviteMemberResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* InviteMemberResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* InviteMemberResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.InviteMemberResponse.base)
  return _msg;
}
inline void InviteMemberResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.InviteMemberResponse.base)
}

// -------------------------------------------------------------------

// KickMemberRequest

// .im.base.IMHeader header = 1;
inline bool KickMemberRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& KickMemberRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& KickMemberRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.KickMemberRequest.header)
  return _internal_header();
}
inline void KickMemberRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.KickMemberRequest.header)
}
inline ::im::base::IMHeader* KickMemberRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* KickMemberRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.KickMemberRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* KickMemberRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* KickMemberRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.KickMemberRequest.header)
  return _msg;
}
inline void KickMemberRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.KickMemberRequest.header)
}

// string group_id = 2;
inline void KickMemberRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& KickMemberRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.KickMemberRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KickMemberRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.KickMemberRequest.group_id)
}
inline std::string* KickMemberRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.KickMemberRequest.group_id)
  return _s;
}
inline const std::string& KickMemberRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void KickMemberRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* KickMemberRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* KickMemberRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.KickMemberRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void KickMemberRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.KickMemberRequest.group_id)
}

// repeated string kick_uids = 3;
inline int KickMemberRequest::_internal_kick_uids_size() const {
  return _internal_kick_uids().size();
}
inline int KickMemberRequest::kick_uids_size() const {
  return _internal_kick_uids_size();
}
inline void KickMemberRequest::clear_kick_uids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kick_uids_.Clear();
}
inline std::string* KickMemberRequest::add_kick_uids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_kick_uids()->Add();
  // @@protoc_insertion_point(field_add_mutable:im.group.KickMemberRequest.kick_uids)
  return _s;
}
inline const std::string& KickMemberRequest::kick_uids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.KickMemberRequest.kick_uids)
  return _internal_kick_uids().Get(index);
}
inline std::string* KickMemberRequest::mutable_kick_uids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.KickMemberRequest.kick_uids)
  return _internal_mutable_kick_uids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void KickMemberRequest::set_kick_uids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_kick_uids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:im.group.KickMemberRequest.kick_uids)
}
template <typename Arg_, typename... Args_>
inline void KickMemberRequest::add_kick_uids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_kick_uids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:im.group.KickMemberRequest.kick_uids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KickMemberRequest::kick_uids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.KickMemberRequest.kick_uids)
  return _internal_kick_uids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KickMemberRequest::mutable_kick_uids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.KickMemberRequest.kick_uids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kick_uids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KickMemberRequest::_internal_kick_uids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kick_uids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KickMemberRequest::_internal_mutable_kick_uids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kick_uids_;
}

// -------------------------------------------------------------------

// KickMemberResponse

// .im.base.BaseResponse base = 1;
inline bool KickMemberResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& KickMemberResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& KickMemberResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.KickMemberResponse.base)
  return _internal_base();
}
inline void KickMemberResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.KickMemberResponse.base)
}
inline ::im::base::BaseResponse* KickMemberResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* KickMemberResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.KickMemberResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* KickMemberResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* KickMemberResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.KickMemberResponse.base)
  return _msg;
}
inline void KickMemberResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.KickMemberResponse.base)
}

// -------------------------------------------------------------------

// ApplyJoinGroupRequest

// .im.base.IMHeader header = 1;
inline bool ApplyJoinGroupRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& ApplyJoinGroupRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& ApplyJoinGroupRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ApplyJoinGroupRequest.header)
  return _internal_header();
}
inline void ApplyJoinGroupRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.ApplyJoinGroupRequest.header)
}
inline ::im::base::IMHeader* ApplyJoinGroupRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* ApplyJoinGroupRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ApplyJoinGroupRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* ApplyJoinGroupRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* ApplyJoinGroupRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.ApplyJoinGroupRequest.header)
  return _msg;
}
inline void ApplyJoinGroupRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.ApplyJoinGroupRequest.header)
}

// string group_id = 2;
inline void ApplyJoinGroupRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& ApplyJoinGroupRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ApplyJoinGroupRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ApplyJoinGroupRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ApplyJoinGroupRequest.group_id)
}
inline std::string* ApplyJoinGroupRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.ApplyJoinGroupRequest.group_id)
  return _s;
}
inline const std::string& ApplyJoinGroupRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void ApplyJoinGroupRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* ApplyJoinGroupRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* ApplyJoinGroupRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ApplyJoinGroupRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void ApplyJoinGroupRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ApplyJoinGroupRequest.group_id)
}

// string apply_msg = 3;
inline void ApplyJoinGroupRequest::clear_apply_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_msg_.ClearToEmpty();
}
inline const std::string& ApplyJoinGroupRequest::apply_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ApplyJoinGroupRequest.apply_msg)
  return _internal_apply_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ApplyJoinGroupRequest::set_apply_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.ApplyJoinGroupRequest.apply_msg)
}
inline std::string* ApplyJoinGroupRequest::mutable_apply_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_apply_msg();
  // @@protoc_insertion_point(field_mutable:im.group.ApplyJoinGroupRequest.apply_msg)
  return _s;
}
inline const std::string& ApplyJoinGroupRequest::_internal_apply_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apply_msg_.Get();
}
inline void ApplyJoinGroupRequest::_internal_set_apply_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_msg_.Set(value, GetArena());
}
inline std::string* ApplyJoinGroupRequest::_internal_mutable_apply_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.apply_msg_.Mutable( GetArena());
}
inline std::string* ApplyJoinGroupRequest::release_apply_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ApplyJoinGroupRequest.apply_msg)
  return _impl_.apply_msg_.Release();
}
inline void ApplyJoinGroupRequest::set_allocated_apply_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.apply_msg_.IsDefault()) {
    _impl_.apply_msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.ApplyJoinGroupRequest.apply_msg)
}

// -------------------------------------------------------------------

// ApplyJoinGroupResponse

// .im.base.BaseResponse base = 1;
inline bool ApplyJoinGroupResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& ApplyJoinGroupResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& ApplyJoinGroupResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.ApplyJoinGroupResponse.base)
  return _internal_base();
}
inline void ApplyJoinGroupResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.ApplyJoinGroupResponse.base)
}
inline ::im::base::BaseResponse* ApplyJoinGroupResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* ApplyJoinGroupResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.ApplyJoinGroupResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* ApplyJoinGroupResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* ApplyJoinGroupResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.ApplyJoinGroupResponse.base)
  return _msg;
}
inline void ApplyJoinGroupResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.ApplyJoinGroupResponse.base)
}

// -------------------------------------------------------------------

// QuitGroupRequest

// .im.base.IMHeader header = 1;
inline bool QuitGroupRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& QuitGroupRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& QuitGroupRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.QuitGroupRequest.header)
  return _internal_header();
}
inline void QuitGroupRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.QuitGroupRequest.header)
}
inline ::im::base::IMHeader* QuitGroupRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* QuitGroupRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.QuitGroupRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* QuitGroupRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* QuitGroupRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.QuitGroupRequest.header)
  return _msg;
}
inline void QuitGroupRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.QuitGroupRequest.header)
}

// string group_id = 2;
inline void QuitGroupRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& QuitGroupRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.QuitGroupRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuitGroupRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.QuitGroupRequest.group_id)
}
inline std::string* QuitGroupRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.QuitGroupRequest.group_id)
  return _s;
}
inline const std::string& QuitGroupRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void QuitGroupRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* QuitGroupRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* QuitGroupRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.QuitGroupRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void QuitGroupRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.QuitGroupRequest.group_id)
}

// -------------------------------------------------------------------

// QuitGroupResponse

// .im.base.BaseResponse base = 1;
inline bool QuitGroupResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& QuitGroupResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& QuitGroupResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.QuitGroupResponse.base)
  return _internal_base();
}
inline void QuitGroupResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.QuitGroupResponse.base)
}
inline ::im::base::BaseResponse* QuitGroupResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* QuitGroupResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.QuitGroupResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* QuitGroupResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* QuitGroupResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.QuitGroupResponse.base)
  return _msg;
}
inline void QuitGroupResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.QuitGroupResponse.base)
}

// -------------------------------------------------------------------

// GetGroupMembersRequest

// .im.base.IMHeader header = 1;
inline bool GetGroupMembersRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& GetGroupMembersRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& GetGroupMembersRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMembersRequest.header)
  return _internal_header();
}
inline void GetGroupMembersRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupMembersRequest.header)
}
inline ::im::base::IMHeader* GetGroupMembersRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* GetGroupMembersRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMembersRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* GetGroupMembersRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* GetGroupMembersRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMembersRequest.header)
  return _msg;
}
inline void GetGroupMembersRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMembersRequest.header)
}

// string group_id = 2;
inline void GetGroupMembersRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& GetGroupMembersRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMembersRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGroupMembersRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GetGroupMembersRequest.group_id)
}
inline std::string* GetGroupMembersRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMembersRequest.group_id)
  return _s;
}
inline const std::string& GetGroupMembersRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void GetGroupMembersRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* GetGroupMembersRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* GetGroupMembersRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMembersRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void GetGroupMembersRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMembersRequest.group_id)
}

// -------------------------------------------------------------------

// GetGroupMembersResponse

// .im.base.BaseResponse base = 1;
inline bool GetGroupMembersResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& GetGroupMembersResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& GetGroupMembersResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMembersResponse.base)
  return _internal_base();
}
inline void GetGroupMembersResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupMembersResponse.base)
}
inline ::im::base::BaseResponse* GetGroupMembersResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* GetGroupMembersResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMembersResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* GetGroupMembersResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* GetGroupMembersResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMembersResponse.base)
  return _msg;
}
inline void GetGroupMembersResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMembersResponse.base)
}

// repeated .im.group.GroupMember members = 2;
inline int GetGroupMembersResponse::_internal_members_size() const {
  return _internal_members().size();
}
inline int GetGroupMembersResponse::members_size() const {
  return _internal_members_size();
}
inline void GetGroupMembersResponse::clear_members() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.members_.Clear();
}
inline ::im::group::GroupMember* GetGroupMembersResponse::mutable_members(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMembersResponse.members)
  return _internal_mutable_members()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>* GetGroupMembersResponse::mutable_members()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.GetGroupMembersResponse.members)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_members();
}
inline const ::im::group::GroupMember& GetGroupMembersResponse::members(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMembersResponse.members)
  return _internal_members().Get(index);
}
inline ::im::group::GroupMember* GetGroupMembersResponse::add_members() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::im::group::GroupMember* _add = _internal_mutable_members()->Add();
  // @@protoc_insertion_point(field_add:im.group.GetGroupMembersResponse.members)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>& GetGroupMembersResponse::members() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.GetGroupMembersResponse.members)
  return _internal_members();
}
inline const ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>&
GetGroupMembersResponse::_internal_members() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.members_;
}
inline ::google::protobuf::RepeatedPtrField<::im::group::GroupMember>*
GetGroupMembersResponse::_internal_mutable_members() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.members_;
}

// -------------------------------------------------------------------

// GetGroupMessagesRequest

// .im.base.IMHeader header = 1;
inline bool GetGroupMessagesRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& GetGroupMessagesRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& GetGroupMessagesRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesRequest.header)
  return _internal_header();
}
inline void GetGroupMessagesRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupMessagesRequest.header)
}
inline ::im::base::IMHeader* GetGroupMessagesRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* GetGroupMessagesRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMessagesRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* GetGroupMessagesRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* GetGroupMessagesRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMessagesRequest.header)
  return _msg;
}
inline void GetGroupMessagesRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMessagesRequest.header)
}

// string group_id = 2;
inline void GetGroupMessagesRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& GetGroupMessagesRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGroupMessagesRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.GetGroupMessagesRequest.group_id)
}
inline std::string* GetGroupMessagesRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMessagesRequest.group_id)
  return _s;
}
inline const std::string& GetGroupMessagesRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void GetGroupMessagesRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* GetGroupMessagesRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* GetGroupMessagesRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMessagesRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void GetGroupMessagesRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMessagesRequest.group_id)
}

// int64 since = 3;
inline void GetGroupMessagesRequest::clear_since() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_ = ::int64_t{0};
}
inline ::int64_t GetGroupMessagesRequest::since() const {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesRequest.since)
  return _internal_since();
}
inline void GetGroupMessagesRequest::set_since(::int64_t value) {
  _internal_set_since(value);
  // @@protoc_insertion_point(field_set:im.group.GetGroupMessagesRequest.since)
}
inline ::int64_t GetGroupMessagesRequest::_internal_since() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.since_;
}
inline void GetGroupMessagesRequest::_internal_set_since(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_ = value;
}

// int32 limit = 4;
inline void GetGroupMessagesRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t GetGroupMessagesRequest::limit() const {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesRequest.limit)
  return _internal_limit();
}
inline void GetGroupMessagesRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:im.group.GetGroupMessagesRequest.limit)
}
inline ::int32_t GetGroupMessagesRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetGroupMessagesRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// -------------------------------------------------------------------

// GetGroupMessagesResponse

// .im.base.BaseResponse base = 1;
inline bool GetGroupMessagesResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& GetGroupMessagesResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& GetGroupMessagesResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesResponse.base)
  return _internal_base();
}
inline void GetGroupMessagesResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.GetGroupMessagesResponse.base)
}
inline ::im::base::BaseResponse* GetGroupMessagesResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* GetGroupMessagesResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.GetGroupMessagesResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* GetGroupMessagesResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* GetGroupMessagesResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMessagesResponse.base)
  return _msg;
}
inline void GetGroupMessagesResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.GetGroupMessagesResponse.base)
}

// repeated bytes messages = 2;
inline int GetGroupMessagesResponse::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int GetGroupMessagesResponse::messages_size() const {
  return _internal_messages_size();
}
inline void GetGroupMessagesResponse::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline std::string* GetGroupMessagesResponse::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add_mutable:im.group.GetGroupMessagesResponse.messages)
  return _s;
}
inline const std::string& GetGroupMessagesResponse::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.GetGroupMessagesResponse.messages)
  return _internal_messages().Get(index);
}
inline std::string* GetGroupMessagesResponse::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:im.group.GetGroupMessagesResponse.messages)
  return _internal_mutable_messages()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetGroupMessagesResponse::set_messages(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_messages()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:im.group.GetGroupMessagesResponse.messages)
}
template <typename Arg_, typename... Args_>
inline void GetGroupMessagesResponse::add_messages(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_messages(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:im.group.GetGroupMessagesResponse.messages)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetGroupMessagesResponse::messages() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:im.group.GetGroupMessagesResponse.messages)
  return _internal_messages();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetGroupMessagesResponse::mutable_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:im.group.GetGroupMessagesResponse.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetGroupMessagesResponse::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetGroupMessagesResponse::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// -------------------------------------------------------------------

// TransferGroupOwnerRequest

// .im.base.IMHeader header = 1;
inline bool TransferGroupOwnerRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& TransferGroupOwnerRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& TransferGroupOwnerRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.TransferGroupOwnerRequest.header)
  return _internal_header();
}
inline void TransferGroupOwnerRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.TransferGroupOwnerRequest.header)
}
inline ::im::base::IMHeader* TransferGroupOwnerRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* TransferGroupOwnerRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.TransferGroupOwnerRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* TransferGroupOwnerRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* TransferGroupOwnerRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.TransferGroupOwnerRequest.header)
  return _msg;
}
inline void TransferGroupOwnerRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.TransferGroupOwnerRequest.header)
}

// string group_id = 2;
inline void TransferGroupOwnerRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& TransferGroupOwnerRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.TransferGroupOwnerRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferGroupOwnerRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.TransferGroupOwnerRequest.group_id)
}
inline std::string* TransferGroupOwnerRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.TransferGroupOwnerRequest.group_id)
  return _s;
}
inline const std::string& TransferGroupOwnerRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void TransferGroupOwnerRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* TransferGroupOwnerRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* TransferGroupOwnerRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.TransferGroupOwnerRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void TransferGroupOwnerRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.TransferGroupOwnerRequest.group_id)
}

// string new_owner_uid = 3;
inline void TransferGroupOwnerRequest::clear_new_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_owner_uid_.ClearToEmpty();
}
inline const std::string& TransferGroupOwnerRequest::new_owner_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.TransferGroupOwnerRequest.new_owner_uid)
  return _internal_new_owner_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransferGroupOwnerRequest::set_new_owner_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_owner_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.TransferGroupOwnerRequest.new_owner_uid)
}
inline std::string* TransferGroupOwnerRequest::mutable_new_owner_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_owner_uid();
  // @@protoc_insertion_point(field_mutable:im.group.TransferGroupOwnerRequest.new_owner_uid)
  return _s;
}
inline const std::string& TransferGroupOwnerRequest::_internal_new_owner_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_owner_uid_.Get();
}
inline void TransferGroupOwnerRequest::_internal_set_new_owner_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_owner_uid_.Set(value, GetArena());
}
inline std::string* TransferGroupOwnerRequest::_internal_mutable_new_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_owner_uid_.Mutable( GetArena());
}
inline std::string* TransferGroupOwnerRequest::release_new_owner_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.TransferGroupOwnerRequest.new_owner_uid)
  return _impl_.new_owner_uid_.Release();
}
inline void TransferGroupOwnerRequest::set_allocated_new_owner_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_owner_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_owner_uid_.IsDefault()) {
    _impl_.new_owner_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.TransferGroupOwnerRequest.new_owner_uid)
}

// -------------------------------------------------------------------

// TransferGroupOwnerResponse

// .im.base.BaseResponse base = 1;
inline bool TransferGroupOwnerResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& TransferGroupOwnerResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& TransferGroupOwnerResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.TransferGroupOwnerResponse.base)
  return _internal_base();
}
inline void TransferGroupOwnerResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.TransferGroupOwnerResponse.base)
}
inline ::im::base::BaseResponse* TransferGroupOwnerResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* TransferGroupOwnerResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.TransferGroupOwnerResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* TransferGroupOwnerResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* TransferGroupOwnerResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.TransferGroupOwnerResponse.base)
  return _msg;
}
inline void TransferGroupOwnerResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.TransferGroupOwnerResponse.base)
}

// -------------------------------------------------------------------

// SetGroupAdminRequest

// .im.base.IMHeader header = 1;
inline bool SetGroupAdminRequest::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::im::base::IMHeader& SetGroupAdminRequest::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::IMHeader* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::IMHeader&>(::im::base::_IMHeader_default_instance_);
}
inline const ::im::base::IMHeader& SetGroupAdminRequest::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.SetGroupAdminRequest.header)
  return _internal_header();
}
inline void SetGroupAdminRequest::unsafe_arena_set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.SetGroupAdminRequest.header)
}
inline ::im::base::IMHeader* SetGroupAdminRequest::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::IMHeader* SetGroupAdminRequest::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.SetGroupAdminRequest.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::IMHeader* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::im::base::IMHeader* SetGroupAdminRequest::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::IMHeader>(GetArena());
    _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(p);
  }
  return _impl_.header_;
}
inline ::im::base::IMHeader* SetGroupAdminRequest::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::IMHeader* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:im.group.SetGroupAdminRequest.header)
  return _msg;
}
inline void SetGroupAdminRequest::set_allocated_header(::im::base::IMHeader* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::im::base::IMHeader*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.SetGroupAdminRequest.header)
}

// string group_id = 2;
inline void SetGroupAdminRequest::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.ClearToEmpty();
}
inline const std::string& SetGroupAdminRequest::group_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.SetGroupAdminRequest.group_id)
  return _internal_group_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetGroupAdminRequest::set_group_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.SetGroupAdminRequest.group_id)
}
inline std::string* SetGroupAdminRequest::mutable_group_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_group_id();
  // @@protoc_insertion_point(field_mutable:im.group.SetGroupAdminRequest.group_id)
  return _s;
}
inline const std::string& SetGroupAdminRequest::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_.Get();
}
inline void SetGroupAdminRequest::_internal_set_group_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.Set(value, GetArena());
}
inline std::string* SetGroupAdminRequest::_internal_mutable_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.group_id_.Mutable( GetArena());
}
inline std::string* SetGroupAdminRequest::release_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.SetGroupAdminRequest.group_id)
  return _impl_.group_id_.Release();
}
inline void SetGroupAdminRequest::set_allocated_group_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_id_.IsDefault()) {
    _impl_.group_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.SetGroupAdminRequest.group_id)
}

// string uid = 3;
inline void SetGroupAdminRequest::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& SetGroupAdminRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.SetGroupAdminRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetGroupAdminRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:im.group.SetGroupAdminRequest.uid)
}
inline std::string* SetGroupAdminRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:im.group.SetGroupAdminRequest.uid)
  return _s;
}
inline const std::string& SetGroupAdminRequest::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void SetGroupAdminRequest::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* SetGroupAdminRequest::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* SetGroupAdminRequest::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.SetGroupAdminRequest.uid)
  return _impl_.uid_.Release();
}
inline void SetGroupAdminRequest::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:im.group.SetGroupAdminRequest.uid)
}

// bool set_admin = 4;
inline void SetGroupAdminRequest::clear_set_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_admin_ = false;
}
inline bool SetGroupAdminRequest::set_admin() const {
  // @@protoc_insertion_point(field_get:im.group.SetGroupAdminRequest.set_admin)
  return _internal_set_admin();
}
inline void SetGroupAdminRequest::set_set_admin(bool value) {
  _internal_set_set_admin(value);
  // @@protoc_insertion_point(field_set:im.group.SetGroupAdminRequest.set_admin)
}
inline bool SetGroupAdminRequest::_internal_set_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_admin_;
}
inline void SetGroupAdminRequest::_internal_set_set_admin(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_admin_ = value;
}

// -------------------------------------------------------------------

// SetGroupAdminResponse

// .im.base.BaseResponse base = 1;
inline bool SetGroupAdminResponse::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::im::base::BaseResponse& SetGroupAdminResponse::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::im::base::BaseResponse* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::im::base::BaseResponse&>(::im::base::_BaseResponse_default_instance_);
}
inline const ::im::base::BaseResponse& SetGroupAdminResponse::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:im.group.SetGroupAdminResponse.base)
  return _internal_base();
}
inline void SetGroupAdminResponse::unsafe_arena_set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:im.group.SetGroupAdminResponse.base)
}
inline ::im::base::BaseResponse* SetGroupAdminResponse::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* released = _impl_.base_;
  _impl_.base_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::im::base::BaseResponse* SetGroupAdminResponse::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:im.group.SetGroupAdminResponse.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::im::base::BaseResponse* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::im::base::BaseResponse* SetGroupAdminResponse::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::im::base::BaseResponse>(GetArena());
    _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(p);
  }
  return _impl_.base_;
}
inline ::im::base::BaseResponse* SetGroupAdminResponse::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::im::base::BaseResponse* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:im.group.SetGroupAdminResponse.base)
  return _msg;
}
inline void SetGroupAdminResponse::set_allocated_base(::im::base::BaseResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::im::base::BaseResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:im.group.SetGroupAdminResponse.base)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace group
}  // namespace im


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::im::group::GroupRole> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::im::group::GroupRole>() {
  return ::im::group::GroupRole_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // group_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: command.proto
// Protobuf C++ Version: 5.29.3

#ifndef command_2eproto_2epb_2eh
#define command_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_command_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_command_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_command_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace im {
namespace command {
enum CommandID : int {
  CMD_UNKNOWN = 0,
  CMD_LOGIN = 1001,
  CMD_LOGOUT = 1002,
  CMD_REGISTER = 1003,
  CMD_GET_USER_INFO = 1004,
  CMD_UPDATE_USER_INFO = 1005,
  CMD_USER_ONLINE = 1006,
  CMD_USER_OFFLINE = 1007,
  CMD_SEND_MESSAGE = 2001,
  CMD_PULL_MESSAGE = 2002,
  CMD_DELETE_MESSAGE = 2003,
  CMD_RECALL_MESSAGE = 2004,
  CMD_MESSAGE_ACK = 2005,
  CMD_MESSAGE_DELIVERED = 2006,
  CMD_MESSAGE_HISTORY = 2007,
  CMD_ADD_FRIEND = 3001,
  CMD_REMOVE_FRIEND = 3002,
  CMD_GET_FRIEND_LIST = 3003,
  CMD_GET_FRIEND_REQUESTS = 3004,
  CMD_HANDLE_FRIEND_REQUEST = 3005,
  CMD_SEARCH_USER = 3006,
  CMD_CREATE_GROUP = 4001,
  CMD_GET_GROUP_INFO = 4002,
  CMD_GET_GROUP_LIST = 4003,
  CMD_MODIFY_GROUP_INFO = 4004,
  CMD_INVITE_MEMBER = 4005,
  CMD_KICK_MEMBER = 4006,
  CMD_APPLY_JOIN_GROUP = 4007,
  CMD_QUIT_GROUP = 4008,
  CMD_GET_GROUP_MEMBERS = 4009,
  CMD_GET_GROUP_MESSAGES = 4010,
  CMD_TRANSFER_GROUP_OWNER = 4011,
  CMD_SET_GROUP_ADMIN = 4012,
  CMD_PUSH_MESSAGE = 5001,
  CMD_PUSH_BATCH_MESSAGE = 5002,
  CMD_PUSH_NOTIFICATION = 5003,
  CMD_PUSH_SYSTEM = 5004,
  CMD_PUSH_OFFLINE = 5005,
  CMD_HEARTBEAT = 9001,
  CMD_SERVER_NOTIFY = 9002,
  CMD_CLIENT_ERROR = 9003,
  CommandID_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommandID_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommandID_IsValid(int value);
extern const uint32_t CommandID_internal_data_[];
constexpr CommandID CommandID_MIN = static_cast<CommandID>(0);
constexpr CommandID CommandID_MAX = static_cast<CommandID>(9003);
constexpr int CommandID_ARRAYSIZE = 9003 + 1;
const ::google::protobuf::EnumDescriptor*
CommandID_descriptor();
template <typename T>
const std::string& CommandID_Name(T value) {
  static_assert(std::is_same<T, CommandID>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommandID_Name().");
  return ::google::protobuf::internal::NameOfEnum(CommandID_descriptor(), value);
}
inline bool CommandID_Parse(absl::string_view name, CommandID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandID>(
      CommandID_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace im


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::im::command::CommandID> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::im::command::CommandID>() {
  return ::im::command::CommandID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // command_2eproto_2epb_2eh

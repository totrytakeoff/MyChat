// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message.proto
// Protobuf C++ Version: 5.29.3

#include "message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace im {
namespace message {

inline constexpr MessageBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        at_uids_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::im::message::MessageType >(0)},
        is_recalled_{false},
        is_read_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessageBody::MessageBody(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageBodyDefaultTypeInternal() {}
  union {
    MessageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageBodyDefaultTypeInternal _MessageBody_default_instance_;

inline constexpr SendMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        message_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageResponse::SendMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageResponseDefaultTypeInternal() {}
  union {
    SendMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageResponseDefaultTypeInternal _SendMessageResponse_default_instance_;

inline constexpr SendMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        body_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageRequest::SendMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageRequestDefaultTypeInternal() {}
  union {
    SendMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;

inline constexpr PullMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        messages_{},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PullMessageResponse::PullMessageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PullMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PullMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PullMessageResponseDefaultTypeInternal() {}
  union {
    PullMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PullMessageResponseDefaultTypeInternal _PullMessageResponse_default_instance_;

inline constexpr PullMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        since_{::int64_t{0}},
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PullMessageRequest::PullMessageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PullMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PullMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PullMessageRequestDefaultTypeInternal() {}
  union {
    PullMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PullMessageRequestDefaultTypeInternal _PullMessageRequest_default_instance_;
}  // namespace message
}  // namespace im
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_message_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t
    TableStruct_message_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.is_recalled_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.is_read_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.at_uids_),
        PROTOBUF_FIELD_OFFSET(::im::message::MessageBody, _impl_.ext_),
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageRequest, _impl_.body_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::message::SendMessageResponse, _impl_.message_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _impl_.since_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageRequest, _impl_.limit_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::message::PullMessageResponse, _impl_.messages_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::im::message::MessageBody)},
        {15, 25, -1, sizeof(::im::message::SendMessageRequest)},
        {27, 37, -1, sizeof(::im::message::SendMessageResponse)},
        {39, 51, -1, sizeof(::im::message::PullMessageRequest)},
        {55, 65, -1, sizeof(::im::message::PullMessageResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::im::message::_MessageBody_default_instance_._instance,
    &::im::message::_SendMessageRequest_default_instance_._instance,
    &::im::message::_SendMessageResponse_default_instance_._instance,
    &::im::message::_PullMessageRequest_default_instance_._instance,
    &::im::message::_PullMessageResponse_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rmessage.proto\022\nim.message\032\nbase.proto\""
    "\235\001\n\013MessageBody\022\022\n\nmessage_id\030\001 \001(\t\022%\n\004t"
    "ype\030\002 \001(\0162\027.im.message.MessageType\022\017\n\007co"
    "ntent\030\003 \001(\t\022\023\n\013is_recalled\030\004 \001(\010\022\017\n\007is_r"
    "ead\030\005 \001(\010\022\017\n\007at_uids\030\006 \001(\t\022\013\n\003ext\030\007 \001(\t\""
    "^\n\022SendMessageRequest\022!\n\006header\030\001 \001(\0132\021."
    "im.base.IMHeader\022%\n\004body\030\002 \001(\0132\027.im.mess"
    "age.MessageBody\"d\n\023SendMessageResponse\022#"
    "\n\004base\030\001 \001(\0132\025.im.base.BaseResponse\022(\n\007m"
    "essage\030\002 \001(\0132\027.im.message.MessageBody\"i\n"
    "\022PullMessageRequest\022!\n\006header\030\001 \001(\0132\021.im"
    ".base.IMHeader\022\022\n\nsession_id\030\002 \001(\t\022\r\n\005si"
    "nce\030\003 \001(\003\022\r\n\005limit\030\004 \001(\005\"e\n\023PullMessageR"
    "esponse\022#\n\004base\030\001 \001(\0132\025.im.base.BaseResp"
    "onse\022)\n\010messages\030\002 \003(\0132\027.im.message.Mess"
    "ageBody*\213\001\n\013MessageType\022\010\n\004TEXT\020\000\022\t\n\005IMA"
    "GE\020\001\022\010\n\004FILE\020\002\022\t\n\005AUDIO\020\003\022\t\n\005VIDEO\020\004\022\n\n\006"
    "SYSTEM\020\005\022\n\n\006RECALL\020\006\022\010\n\004CARD\020\007\022\014\n\010LOCATI"
    "ON\020\010\022\013\n\007FORWARD\020\t\022\n\n\006CUSTOM\020\nb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_message_2eproto_deps[1] =
    {
        &::descriptor_table_base_2eproto,
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    757,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    descriptor_table_message_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};
namespace im {
namespace message {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_message_2eproto);
  return file_level_enum_descriptors_message_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    720896u, 0u, };
bool MessageType_IsValid(int value) {
  return 0 <= value && value <= 10;
}
// ===================================================================

class MessageBody::_Internal {
 public:
};

MessageBody::MessageBody(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.message.MessageBody)
}
inline PROTOBUF_NDEBUG_INLINE MessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::message::MessageBody& from_msg)
      : message_id_(arena, from.message_id_),
        content_(arena, from.content_),
        at_uids_(arena, from.at_uids_),
        ext_(arena, from.ext_),
        _cached_size_{0} {}

MessageBody::MessageBody(
    ::google::protobuf::Arena* arena,
    const MessageBody& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, is_read_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_read_));

  // @@protoc_insertion_point(copy_constructor:im.message.MessageBody)
}
inline PROTOBUF_NDEBUG_INLINE MessageBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_id_(arena),
        content_(arena),
        at_uids_(arena),
        ext_(arena),
        _cached_size_{0} {}

inline void MessageBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, is_read_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::is_read_));
}
MessageBody::~MessageBody() {
  // @@protoc_insertion_point(destructor:im.message.MessageBody)
  SharedDtor(*this);
}
inline void MessageBody::SharedDtor(MessageLite& self) {
  MessageBody& this_ = static_cast<MessageBody&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.at_uids_.Destroy();
  this_._impl_.ext_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MessageBody::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageBody(arena);
}
constexpr auto MessageBody::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MessageBody),
                                            alignof(MessageBody));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageBody::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageBody_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageBody::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageBody>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageBody::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageBody>(), &MessageBody::ByteSizeLong,
            &MessageBody::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageBody, _impl_._cached_size_),
        false,
    },
    &MessageBody::kDescriptorMethods,
    &descriptor_table_message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageBody::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 58, 2> MessageBody::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::message::MessageBody>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.message_id_)}},
    // .im.message.MessageType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MessageBody, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.type_)}},
    // string content = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.content_)}},
    // bool is_recalled = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MessageBody, _impl_.is_recalled_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.is_recalled_)}},
    // bool is_read = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MessageBody, _impl_.is_read_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.is_read_)}},
    // string at_uids = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.at_uids_)}},
    // string ext = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.ext_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .im.message.MessageType type = 2;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string content = 3;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_recalled = 4;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.is_recalled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_read = 5;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.is_read_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string at_uids = 6;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.at_uids_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ext = 7;
    {PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.ext_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\12\0\7\0\0\7\3"
    "im.message.MessageBody"
    "message_id"
    "content"
    "at_uids"
    "ext"
  }},
};

PROTOBUF_NOINLINE void MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:im.message.MessageBody)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.at_uids_.ClearToEmpty();
  _impl_.ext_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_read_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.is_read_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageBody::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageBody& this_ = static_cast<const MessageBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageBody::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.message.MessageBody)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message_id = 1;
          if (!this_._internal_message_id().empty()) {
            const std::string& _s = this_._internal_message_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.message.MessageBody.message_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .im.message.MessageType type = 2;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // string content = 3;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.message.MessageBody.content");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool is_recalled = 4;
          if (this_._internal_is_recalled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_recalled(), target);
          }

          // bool is_read = 5;
          if (this_._internal_is_read() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_read(), target);
          }

          // string at_uids = 6;
          if (!this_._internal_at_uids().empty()) {
            const std::string& _s = this_._internal_at_uids();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.message.MessageBody.at_uids");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string ext = 7;
          if (!this_._internal_ext().empty()) {
            const std::string& _s = this_._internal_ext();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.message.MessageBody.ext");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.message.MessageBody)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageBody::ByteSizeLong(const MessageLite& base) {
          const MessageBody& this_ = static_cast<const MessageBody&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageBody::ByteSizeLong() const {
          const MessageBody& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.message.MessageBody)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message_id = 1;
            if (!this_._internal_message_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message_id());
            }
            // string content = 3;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // string at_uids = 6;
            if (!this_._internal_at_uids().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_at_uids());
            }
            // string ext = 7;
            if (!this_._internal_ext().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ext());
            }
            // .im.message.MessageType type = 2;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // bool is_recalled = 4;
            if (this_._internal_is_recalled() != 0) {
              total_size += 2;
            }
            // bool is_read = 5;
            if (this_._internal_is_read() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageBody::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageBody*>(&to_msg);
  auto& from = static_cast<const MessageBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.message.MessageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message_id().empty()) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_at_uids().empty()) {
    _this->_internal_set_at_uids(from._internal_at_uids());
  }
  if (!from._internal_ext().empty()) {
    _this->_internal_set_ext(from._internal_ext());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_is_recalled() != 0) {
    _this->_impl_.is_recalled_ = from._impl_.is_recalled_;
  }
  if (from._internal_is_read() != 0) {
    _this->_impl_.is_read_ = from._impl_.is_read_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageBody::CopyFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.message.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageBody::InternalSwap(MessageBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.at_uids_, &other->_impl_.at_uids_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ext_, &other->_impl_.ext_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.is_read_)
      + sizeof(MessageBody::_impl_.is_read_)
      - PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata MessageBody::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._has_bits_);
};

void SendMessageRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SendMessageRequest::SendMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.message.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::message::SendMessageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageRequest::SendMessageRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;
  _impl_.body_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::im::message::MessageBody>(
                              arena, *from._impl_.body_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.message.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, body_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::body_));
}
SendMessageRequest::~SendMessageRequest() {
  // @@protoc_insertion_point(destructor:im.message.SendMessageRequest)
  SharedDtor(*this);
}
inline void SendMessageRequest::SharedDtor(MessageLite& self) {
  SendMessageRequest& this_ = static_cast<SendMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.body_;
  this_._impl_.~Impl_();
}

inline void* SendMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendMessageRequest(arena);
}
constexpr auto SendMessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SendMessageRequest),
                                            alignof(SendMessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendMessageRequest>(), &SendMessageRequest::ByteSizeLong,
            &SendMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._cached_size_),
        false,
    },
    &SendMessageRequest::kDescriptorMethods,
    &descriptor_table_message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SendMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::message::SendMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.message.MessageBody body = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.body_)}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .im.message.MessageBody body = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.body_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
    {::_pbi::TcParser::GetTable<::im::message::MessageBody>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.message.SendMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.body_ != nullptr);
      _impl_.body_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendMessageRequest& this_ = static_cast<const SendMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.message.SendMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // .im.message.MessageBody body = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.body_, this_._impl_.body_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.message.SendMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendMessageRequest::ByteSizeLong(const MessageLite& base) {
          const SendMessageRequest& this_ = static_cast<const SendMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendMessageRequest::ByteSizeLong() const {
          const SendMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.message.SendMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .im.base.IMHeader header = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
            // .im.message.MessageBody body = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.body_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.message.SendMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.body_ != nullptr);
      if (_this->_impl_.body_ == nullptr) {
        _this->_impl_.body_ =
            ::google::protobuf::Message::CopyConstruct<::im::message::MessageBody>(arena, *from._impl_.body_);
      } else {
        _this->_impl_.body_->MergeFrom(*from._impl_.body_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageRequest::CopyFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.message.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageRequest::InternalSwap(SendMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.body_)
      + sizeof(SendMessageRequest::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata SendMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._has_bits_);
};

void SendMessageResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SendMessageResponse::SendMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.message.SendMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::message::SendMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageResponse::SendMessageResponse(
    ::google::protobuf::Arena* arena,
    const SendMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.message_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::im::message::MessageBody>(
                              arena, *from._impl_.message_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.message.SendMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, message_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::message_));
}
SendMessageResponse::~SendMessageResponse() {
  // @@protoc_insertion_point(destructor:im.message.SendMessageResponse)
  SharedDtor(*this);
}
inline void SendMessageResponse::SharedDtor(MessageLite& self) {
  SendMessageResponse& this_ = static_cast<SendMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  delete this_._impl_.message_;
  this_._impl_.~Impl_();
}

inline void* SendMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendMessageResponse(arena);
}
constexpr auto SendMessageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SendMessageResponse),
                                            alignof(SendMessageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendMessageResponse>(), &SendMessageResponse::ByteSizeLong,
            &SendMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._cached_size_),
        false,
    },
    &SendMessageResponse::kDescriptorMethods,
    &descriptor_table_message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SendMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::message::SendMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.message.MessageBody message = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.message_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .im.message.MessageBody message = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.message_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
    {::_pbi::TcParser::GetTable<::im::message::MessageBody>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.message.SendMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.message_ != nullptr);
      _impl_.message_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendMessageResponse& this_ = static_cast<const SendMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.message.SendMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // .im.message.MessageBody message = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.message.SendMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendMessageResponse::ByteSizeLong(const MessageLite& base) {
          const SendMessageResponse& this_ = static_cast<const SendMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendMessageResponse::ByteSizeLong() const {
          const SendMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.message.SendMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .im.base.BaseResponse base = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
            // .im.message.MessageBody message = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageResponse*>(&to_msg);
  auto& from = static_cast<const SendMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.message.SendMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ =
            ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.message_ != nullptr);
      if (_this->_impl_.message_ == nullptr) {
        _this->_impl_.message_ =
            ::google::protobuf::Message::CopyConstruct<::im::message::MessageBody>(arena, *from._impl_.message_);
      } else {
        _this->_impl_.message_->MergeFrom(*from._impl_.message_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageResponse::CopyFrom(const SendMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.message.SendMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageResponse::InternalSwap(SendMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.message_)
      + sizeof(SendMessageResponse::_impl_.message_)
      - PROTOBUF_FIELD_OFFSET(SendMessageResponse, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata SendMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PullMessageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PullMessageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_._has_bits_);
};

void PullMessageRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PullMessageRequest::PullMessageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.message.PullMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE PullMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::message::PullMessageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        session_id_(arena, from.session_id_) {}

PullMessageRequest::PullMessageRequest(
    ::google::protobuf::Arena* arena,
    const PullMessageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PullMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, since_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, since_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:im.message.PullMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE PullMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        session_id_(arena) {}

inline void PullMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::limit_));
}
PullMessageRequest::~PullMessageRequest() {
  // @@protoc_insertion_point(destructor:im.message.PullMessageRequest)
  SharedDtor(*this);
}
inline void PullMessageRequest::SharedDtor(MessageLite& self) {
  PullMessageRequest& this_ = static_cast<PullMessageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* PullMessageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PullMessageRequest(arena);
}
constexpr auto PullMessageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PullMessageRequest),
                                            alignof(PullMessageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PullMessageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PullMessageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PullMessageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PullMessageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PullMessageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PullMessageRequest>(), &PullMessageRequest::ByteSizeLong,
            &PullMessageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_._cached_size_),
        false,
    },
    &PullMessageRequest::kDescriptorMethods,
    &descriptor_table_message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PullMessageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 48, 2> PullMessageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::message::PullMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PullMessageRequest, _impl_.limit_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.limit_)}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.header_)}},
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.session_id_)}},
    // int64 since = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PullMessageRequest, _impl_.since_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.since_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 since = 3;
    {PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.since_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 limit = 4;
    {PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.limit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\35\0\12\0\0\0\0\0"
    "im.message.PullMessageRequest"
    "session_id"
  }},
};

PROTOBUF_NOINLINE void PullMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.message.PullMessageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  ::memset(&_impl_.since_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.since_)) + sizeof(_impl_.limit_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PullMessageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PullMessageRequest& this_ = static_cast<const PullMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PullMessageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PullMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.message.PullMessageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // string session_id = 2;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.message.PullMessageRequest.session_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 since = 3;
          if (this_._internal_since() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_since(), target);
          }

          // int32 limit = 4;
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.message.PullMessageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PullMessageRequest::ByteSizeLong(const MessageLite& base) {
          const PullMessageRequest& this_ = static_cast<const PullMessageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PullMessageRequest::ByteSizeLong() const {
          const PullMessageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.message.PullMessageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_id = 2;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_id());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
           {
            // int64 since = 3;
            if (this_._internal_since() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_since());
            }
            // int32 limit = 4;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PullMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PullMessageRequest*>(&to_msg);
  auto& from = static_cast<const PullMessageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.message.PullMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  if (from._internal_since() != 0) {
    _this->_impl_.since_ = from._impl_.since_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PullMessageRequest::CopyFrom(const PullMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.message.PullMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PullMessageRequest::InternalSwap(PullMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.limit_)
      + sizeof(PullMessageRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(PullMessageRequest, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata PullMessageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PullMessageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PullMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_._has_bits_);
};

void PullMessageResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PullMessageResponse::PullMessageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.message.PullMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PullMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::message::PullMessageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        messages_{visibility, arena, from.messages_} {}

PullMessageResponse::PullMessageResponse(
    ::google::protobuf::Arena* arena,
    const PullMessageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PullMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.message.PullMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE PullMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        messages_{visibility, arena} {}

inline void PullMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
PullMessageResponse::~PullMessageResponse() {
  // @@protoc_insertion_point(destructor:im.message.PullMessageResponse)
  SharedDtor(*this);
}
inline void PullMessageResponse::SharedDtor(MessageLite& self) {
  PullMessageResponse& this_ = static_cast<PullMessageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* PullMessageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PullMessageResponse(arena);
}
constexpr auto PullMessageResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_.messages_) +
          decltype(PullMessageResponse::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PullMessageResponse), alignof(PullMessageResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PullMessageResponse::PlacementNew_,
                                 sizeof(PullMessageResponse),
                                 alignof(PullMessageResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PullMessageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PullMessageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PullMessageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PullMessageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PullMessageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PullMessageResponse>(), &PullMessageResponse::ByteSizeLong,
            &PullMessageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_._cached_size_),
        false,
    },
    &PullMessageResponse::kDescriptorMethods,
    &descriptor_table_message_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PullMessageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PullMessageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::message::PullMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .im.message.MessageBody messages = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_.messages_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .im.message.MessageBody messages = 2;
    {PROTOBUF_FIELD_OFFSET(PullMessageResponse, _impl_.messages_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
    {::_pbi::TcParser::GetTable<::im::message::MessageBody>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PullMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.message.PullMessageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PullMessageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PullMessageResponse& this_ = static_cast<const PullMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PullMessageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PullMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.message.PullMessageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // repeated .im.message.MessageBody messages = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.message.PullMessageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PullMessageResponse::ByteSizeLong(const MessageLite& base) {
          const PullMessageResponse& this_ = static_cast<const PullMessageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PullMessageResponse::ByteSizeLong() const {
          const PullMessageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.message.PullMessageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .im.message.MessageBody messages = 2;
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PullMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PullMessageResponse*>(&to_msg);
  auto& from = static_cast<const PullMessageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.message.PullMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PullMessageResponse::CopyFrom(const PullMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.message.PullMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PullMessageResponse::InternalSwap(PullMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata PullMessageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace im
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_message_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

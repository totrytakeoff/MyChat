// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: friend.proto
// Protobuf C++ Version: 5.29.3

#include "friend.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace im {
namespace friend_ {

inline constexpr FriendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_time_{::int64_t{0}},
        status_{static_cast< ::im::friend_::FriendRequestStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FriendRequest::FriendRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FriendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendRequestDefaultTypeInternal() {}
  union {
    FriendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendRequestDefaultTypeInternal _FriendRequest_default_instance_;

inline constexpr FriendInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : permissions_{},
        _permissions_cached_byte_size_{0},
        uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remark_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        add_time_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FriendInfo::FriendInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FriendInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FriendInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FriendInfoDefaultTypeInternal() {}
  union {
    FriendInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FriendInfoDefaultTypeInternal _FriendInfo_default_instance_;

inline constexpr RemoveFromBlacklistResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFromBlacklistResponse::RemoveFromBlacklistResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveFromBlacklistResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFromBlacklistResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFromBlacklistResponseDefaultTypeInternal() {}
  union {
    RemoveFromBlacklistResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFromBlacklistResponseDefaultTypeInternal _RemoveFromBlacklistResponse_default_instance_;

inline constexpr RemoveFromBlacklistRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFromBlacklistRequest::RemoveFromBlacklistRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveFromBlacklistRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFromBlacklistRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFromBlacklistRequestDefaultTypeInternal() {}
  union {
    RemoveFromBlacklistRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFromBlacklistRequestDefaultTypeInternal _RemoveFromBlacklistRequest_default_instance_;

inline constexpr HandleFriendResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HandleFriendResponse::HandleFriendResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandleFriendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandleFriendResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandleFriendResponseDefaultTypeInternal() {}
  union {
    HandleFriendResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandleFriendResponseDefaultTypeInternal _HandleFriendResponse_default_instance_;

inline constexpr HandleFriendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr},
        accept_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HandleFriendRequest::HandleFriendRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HandleFriendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandleFriendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandleFriendRequestDefaultTypeInternal() {}
  union {
    HandleFriendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandleFriendRequestDefaultTypeInternal _HandleFriendRequest_default_instance_;

inline constexpr GetFriendRequestsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requests_{},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFriendRequestsResponse::GetFriendRequestsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFriendRequestsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendRequestsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendRequestsResponseDefaultTypeInternal() {}
  union {
    GetFriendRequestsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendRequestsResponseDefaultTypeInternal _GetFriendRequestsResponse_default_instance_;

inline constexpr GetFriendRequestsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFriendRequestsRequest::GetFriendRequestsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFriendRequestsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendRequestsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendRequestsRequestDefaultTypeInternal() {}
  union {
    GetFriendRequestsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendRequestsRequestDefaultTypeInternal _GetFriendRequestsRequest_default_instance_;

inline constexpr GetFriendListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        friends_{},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFriendListResponse::GetFriendListResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFriendListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendListResponseDefaultTypeInternal() {}
  union {
    GetFriendListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendListResponseDefaultTypeInternal _GetFriendListResponse_default_instance_;

inline constexpr GetFriendListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFriendListRequest::GetFriendListRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFriendListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFriendListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFriendListRequestDefaultTypeInternal() {}
  union {
    GetFriendListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFriendListRequestDefaultTypeInternal _GetFriendListRequest_default_instance_;

inline constexpr GetBlacklistResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        black_uids_{},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlacklistResponse::GetBlacklistResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlacklistResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlacklistResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlacklistResponseDefaultTypeInternal() {}
  union {
    GetBlacklistResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlacklistResponseDefaultTypeInternal _GetBlacklistResponse_default_instance_;

inline constexpr GetBlacklistRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetBlacklistRequest::GetBlacklistRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBlacklistRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlacklistRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlacklistRequestDefaultTypeInternal() {}
  union {
    GetBlacklistRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlacklistRequestDefaultTypeInternal _GetBlacklistRequest_default_instance_;

inline constexpr AddToBlacklistResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddToBlacklistResponse::AddToBlacklistResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddToBlacklistResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddToBlacklistResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddToBlacklistResponseDefaultTypeInternal() {}
  union {
    AddToBlacklistResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddToBlacklistResponseDefaultTypeInternal _AddToBlacklistResponse_default_instance_;

inline constexpr AddToBlacklistRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddToBlacklistRequest::AddToBlacklistRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddToBlacklistRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddToBlacklistRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddToBlacklistRequestDefaultTypeInternal() {}
  union {
    AddToBlacklistRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddToBlacklistRequestDefaultTypeInternal _AddToBlacklistRequest_default_instance_;

inline constexpr AddFriendResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        request_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendResponse::AddFriendResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendResponseDefaultTypeInternal() {}
  union {
    AddFriendResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendResponseDefaultTypeInternal _AddFriendResponse_default_instance_;

inline constexpr AddFriendRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        to_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddFriendRequest::AddFriendRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddFriendRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddFriendRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddFriendRequestDefaultTypeInternal() {}
  union {
    AddFriendRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddFriendRequestDefaultTypeInternal _AddFriendRequest_default_instance_;
}  // namespace friend_
}  // namespace im
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_friend_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_friend_2eproto = nullptr;
const ::uint32_t
    TableStruct_friend_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendInfo, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendInfo, _impl_.remark_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendInfo, _impl_.add_time_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendInfo, _impl_.permissions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.from_uid_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.to_uid_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::FriendRequest, _impl_.create_time_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendRequest, _impl_.to_uid_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendRequest, _impl_.message_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddFriendResponse, _impl_.request_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendRequest, _impl_.accept_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::HandleFriendResponse, _impl_.base_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListRequest, _impl_.header_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendListResponse, _impl_.friends_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsRequest, _impl_.header_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetFriendRequestsResponse, _impl_.requests_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistRequest, _impl_.target_uid_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::AddToBlacklistResponse, _impl_.base_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistRequest, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistRequest, _impl_.target_uid_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::RemoveFromBlacklistResponse, _impl_.base_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistRequest, _impl_.header_),
        0,
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistResponse, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::im::friend_::GetBlacklistResponse, _impl_.black_uids_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::im::friend_::FriendInfo)},
        {12, -1, -1, sizeof(::im::friend_::FriendRequest)},
        {26, 37, -1, sizeof(::im::friend_::AddFriendRequest)},
        {40, 50, -1, sizeof(::im::friend_::AddFriendResponse)},
        {52, 63, -1, sizeof(::im::friend_::HandleFriendRequest)},
        {66, 75, -1, sizeof(::im::friend_::HandleFriendResponse)},
        {76, 85, -1, sizeof(::im::friend_::GetFriendListRequest)},
        {86, 96, -1, sizeof(::im::friend_::GetFriendListResponse)},
        {98, 107, -1, sizeof(::im::friend_::GetFriendRequestsRequest)},
        {108, 118, -1, sizeof(::im::friend_::GetFriendRequestsResponse)},
        {120, 130, -1, sizeof(::im::friend_::AddToBlacklistRequest)},
        {132, 141, -1, sizeof(::im::friend_::AddToBlacklistResponse)},
        {142, 152, -1, sizeof(::im::friend_::RemoveFromBlacklistRequest)},
        {154, 163, -1, sizeof(::im::friend_::RemoveFromBlacklistResponse)},
        {164, 173, -1, sizeof(::im::friend_::GetBlacklistRequest)},
        {174, 184, -1, sizeof(::im::friend_::GetBlacklistResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::im::friend_::_FriendInfo_default_instance_._instance,
    &::im::friend_::_FriendRequest_default_instance_._instance,
    &::im::friend_::_AddFriendRequest_default_instance_._instance,
    &::im::friend_::_AddFriendResponse_default_instance_._instance,
    &::im::friend_::_HandleFriendRequest_default_instance_._instance,
    &::im::friend_::_HandleFriendResponse_default_instance_._instance,
    &::im::friend_::_GetFriendListRequest_default_instance_._instance,
    &::im::friend_::_GetFriendListResponse_default_instance_._instance,
    &::im::friend_::_GetFriendRequestsRequest_default_instance_._instance,
    &::im::friend_::_GetFriendRequestsResponse_default_instance_._instance,
    &::im::friend_::_AddToBlacklistRequest_default_instance_._instance,
    &::im::friend_::_AddToBlacklistResponse_default_instance_._instance,
    &::im::friend_::_RemoveFromBlacklistRequest_default_instance_._instance,
    &::im::friend_::_RemoveFromBlacklistResponse_default_instance_._instance,
    &::im::friend_::_GetBlacklistRequest_default_instance_._instance,
    &::im::friend_::_GetBlacklistResponse_default_instance_._instance,
};
const char descriptor_table_protodef_friend_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014friend.proto\022\tim.friend\032\nbase.proto\"m\n"
    "\nFriendInfo\022\013\n\003uid\030\001 \001(\t\022\016\n\006remark\030\002 \001(\t"
    "\022\020\n\010add_time\030\003 \001(\003\0220\n\013permissions\030\004 \003(\0162"
    "\033.im.friend.FriendPermission\"\233\001\n\rFriendR"
    "equest\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010from_uid\030\002"
    " \001(\t\022\016\n\006to_uid\030\003 \001(\t\022\017\n\007message\030\004 \001(\t\022.\n"
    "\006status\030\005 \001(\0162\036.im.friend.FriendRequestS"
    "tatus\022\023\n\013create_time\030\006 \001(\003\"V\n\020AddFriendR"
    "equest\022!\n\006header\030\001 \001(\0132\021.im.base.IMHeade"
    "r\022\016\n\006to_uid\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\"c\n\021Ad"
    "dFriendResponse\022#\n\004base\030\001 \001(\0132\025.im.base."
    "BaseResponse\022)\n\007request\030\002 \001(\0132\030.im.frien"
    "d.FriendRequest\"\\\n\023HandleFriendRequest\022!"
    "\n\006header\030\001 \001(\0132\021.im.base.IMHeader\022\022\n\nreq"
    "uest_id\030\002 \001(\t\022\016\n\006accept\030\003 \001(\010\";\n\024HandleF"
    "riendResponse\022#\n\004base\030\001 \001(\0132\025.im.base.Ba"
    "seResponse\"9\n\024GetFriendListRequest\022!\n\006he"
    "ader\030\001 \001(\0132\021.im.base.IMHeader\"d\n\025GetFrie"
    "ndListResponse\022#\n\004base\030\001 \001(\0132\025.im.base.B"
    "aseResponse\022&\n\007friends\030\002 \003(\0132\025.im.friend"
    ".FriendInfo\"=\n\030GetFriendRequestsRequest\022"
    "!\n\006header\030\001 \001(\0132\021.im.base.IMHeader\"l\n\031Ge"
    "tFriendRequestsResponse\022#\n\004base\030\001 \001(\0132\025."
    "im.base.BaseResponse\022*\n\010requests\030\002 \003(\0132\030"
    ".im.friend.FriendRequest\"N\n\025AddToBlackli"
    "stRequest\022!\n\006header\030\001 \001(\0132\021.im.base.IMHe"
    "ader\022\022\n\ntarget_uid\030\002 \001(\t\"=\n\026AddToBlackli"
    "stResponse\022#\n\004base\030\001 \001(\0132\025.im.base.BaseR"
    "esponse\"S\n\032RemoveFromBlacklistRequest\022!\n"
    "\006header\030\001 \001(\0132\021.im.base.IMHeader\022\022\n\ntarg"
    "et_uid\030\002 \001(\t\"B\n\033RemoveFromBlacklistRespo"
    "nse\022#\n\004base\030\001 \001(\0132\025.im.base.BaseResponse"
    "\"8\n\023GetBlacklistRequest\022!\n\006header\030\001 \001(\0132"
    "\021.im.base.IMHeader\"O\n\024GetBlacklistRespon"
    "se\022#\n\004base\030\001 \001(\0132\025.im.base.BaseResponse\022"
    "\022\n\nblack_uids\030\002 \003(\t*>\n\023FriendRequestStat"
    "us\022\013\n\007PENDING\020\000\022\014\n\010ACCEPTED\020\001\022\014\n\010REJECTE"
    "D\020\002*D\n\020FriendPermission\022\n\n\006NORMAL\020\000\022\013\n\007N"
    "O_CHAT\020\001\022\r\n\tNO_MOMENT\020\002\022\010\n\004STAR\020\003b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_friend_2eproto_deps[1] =
    {
        &::descriptor_table_base_2eproto,
};
static ::absl::once_flag descriptor_table_friend_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_friend_2eproto = {
    false,
    false,
    1561,
    descriptor_table_protodef_friend_2eproto,
    "friend.proto",
    &descriptor_table_friend_2eproto_once,
    descriptor_table_friend_2eproto_deps,
    1,
    16,
    schemas,
    file_default_instances,
    TableStruct_friend_2eproto::offsets,
    file_level_enum_descriptors_friend_2eproto,
    file_level_service_descriptors_friend_2eproto,
};
namespace im {
namespace friend_ {
const ::google::protobuf::EnumDescriptor* FriendRequestStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_friend_2eproto);
  return file_level_enum_descriptors_friend_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FriendRequestStatus_internal_data_[] = {
    196608u, 0u, };
bool FriendRequestStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* FriendPermission_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_friend_2eproto);
  return file_level_enum_descriptors_friend_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t FriendPermission_internal_data_[] = {
    262144u, 0u, };
bool FriendPermission_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class FriendInfo::_Internal {
 public:
};

FriendInfo::FriendInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.FriendInfo)
}
inline PROTOBUF_NDEBUG_INLINE FriendInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::FriendInfo& from_msg)
      : permissions_{visibility, arena, from.permissions_},
        _permissions_cached_byte_size_{0},
        uid_(arena, from.uid_),
        remark_(arena, from.remark_),
        _cached_size_{0} {}

FriendInfo::FriendInfo(
    ::google::protobuf::Arena* arena,
    const FriendInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FriendInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.add_time_ = from._impl_.add_time_;

  // @@protoc_insertion_point(copy_constructor:im.friend.FriendInfo)
}
inline PROTOBUF_NDEBUG_INLINE FriendInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : permissions_{visibility, arena},
        _permissions_cached_byte_size_{0},
        uid_(arena),
        remark_(arena),
        _cached_size_{0} {}

inline void FriendInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.add_time_ = {};
}
FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:im.friend.FriendInfo)
  SharedDtor(*this);
}
inline void FriendInfo::SharedDtor(MessageLite& self) {
  FriendInfo& this_ = static_cast<FriendInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.uid_.Destroy();
  this_._impl_.remark_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FriendInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FriendInfo(arena);
}
constexpr auto FriendInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.permissions_) +
          decltype(FriendInfo::_impl_.permissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FriendInfo), alignof(FriendInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FriendInfo::PlacementNew_,
                                 sizeof(FriendInfo),
                                 alignof(FriendInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FriendInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FriendInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FriendInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FriendInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FriendInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FriendInfo>(), &FriendInfo::ByteSizeLong,
            &FriendInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_._cached_size_),
        false,
    },
    &FriendInfo::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FriendInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> FriendInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::FriendInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .im.friend.FriendPermission permissions = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.permissions_)}},
    // string uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.uid_)}},
    // string remark = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.remark_)}},
    // int64 add_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FriendInfo, _impl_.add_time_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.add_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string uid = 1;
    {PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remark = 2;
    {PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.remark_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 add_time = 3;
    {PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.add_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .im.friend.FriendPermission permissions = 4;
    {PROTOBUF_FIELD_OFFSET(FriendInfo, _impl_.permissions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\24\3\6\0\0\0\0\0"
    "im.friend.FriendInfo"
    "uid"
    "remark"
  }},
};

PROTOBUF_NOINLINE void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.FriendInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  _impl_.uid_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _impl_.add_time_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FriendInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FriendInfo& this_ = static_cast<const FriendInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FriendInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FriendInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.FriendInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string uid = 1;
          if (!this_._internal_uid().empty()) {
            const std::string& _s = this_._internal_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendInfo.uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string remark = 2;
          if (!this_._internal_remark().empty()) {
            const std::string& _s = this_._internal_remark();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendInfo.remark");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 add_time = 3;
          if (this_._internal_add_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_add_time(), target);
          }

          // repeated .im.friend.FriendPermission permissions = 4;
          {
            std::size_t byte_size =
                                              this_._impl_._permissions_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  4, this_._internal_permissions(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.FriendInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FriendInfo::ByteSizeLong(const MessageLite& base) {
          const FriendInfo& this_ = static_cast<const FriendInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FriendInfo::ByteSizeLong() const {
          const FriendInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.FriendInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .im.friend.FriendPermission permissions = 4;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_permissions(), 1, this_._impl_._permissions_cached_byte_size_);
            }
          }
           {
            // string uid = 1;
            if (!this_._internal_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uid());
            }
            // string remark = 2;
            if (!this_._internal_remark().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_remark());
            }
            // int64 add_time = 3;
            if (this_._internal_add_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_add_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FriendInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FriendInfo*>(&to_msg);
  auto& from = static_cast<const FriendInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.FriendInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(from._internal_permissions());
  if (!from._internal_uid().empty()) {
    _this->_internal_set_uid(from._internal_uid());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if (from._internal_add_time() != 0) {
    _this->_impl_.add_time_ = from._impl_.add_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FriendInfo::InternalSwap(FriendInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uid_, &other->_impl_.uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remark_, &other->_impl_.remark_, arena);
        swap(_impl_.add_time_, other->_impl_.add_time_);
}

::google::protobuf::Metadata FriendInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FriendRequest::_Internal {
 public:
};

FriendRequest::FriendRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.FriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE FriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::FriendRequest& from_msg)
      : request_id_(arena, from.request_id_),
        from_uid_(arena, from.from_uid_),
        to_uid_(arena, from.to_uid_),
        message_(arena, from.message_),
        _cached_size_{0} {}

FriendRequest::FriendRequest(
    ::google::protobuf::Arena* arena,
    const FriendRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FriendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, create_time_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, create_time_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:im.friend.FriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE FriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_id_(arena),
        from_uid_(arena),
        to_uid_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void FriendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_time_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, create_time_) +
               sizeof(Impl_::status_));
}
FriendRequest::~FriendRequest() {
  // @@protoc_insertion_point(destructor:im.friend.FriendRequest)
  SharedDtor(*this);
}
inline void FriendRequest::SharedDtor(MessageLite& self) {
  FriendRequest& this_ = static_cast<FriendRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.from_uid_.Destroy();
  this_._impl_.to_uid_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FriendRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FriendRequest(arena);
}
constexpr auto FriendRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FriendRequest),
                                            alignof(FriendRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FriendRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FriendRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FriendRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FriendRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FriendRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FriendRequest>(), &FriendRequest::ByteSizeLong,
            &FriendRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_._cached_size_),
        false,
    },
    &FriendRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FriendRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 63, 2> FriendRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::FriendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.request_id_)}},
    // string from_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.from_uid_)}},
    // string to_uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.to_uid_)}},
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.message_)}},
    // .im.friend.FriendRequestStatus status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FriendRequest, _impl_.status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.status_)}},
    // int64 create_time = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FriendRequest, _impl_.create_time_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.create_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string from_uid = 2;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.from_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_uid = 3;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.to_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .im.friend.FriendRequestStatus status = 5;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 create_time = 6;
    {PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.create_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\27\12\10\6\7\0\0\0"
    "im.friend.FriendRequest"
    "request_id"
    "from_uid"
    "to_uid"
    "message"
  }},
};

PROTOBUF_NOINLINE void FriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.FriendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  _impl_.from_uid_.ClearToEmpty();
  _impl_.to_uid_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.create_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.create_time_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FriendRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FriendRequest& this_ = static_cast<const FriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FriendRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.FriendRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string request_id = 1;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendRequest.request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string from_uid = 2;
          if (!this_._internal_from_uid().empty()) {
            const std::string& _s = this_._internal_from_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendRequest.from_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string to_uid = 3;
          if (!this_._internal_to_uid().empty()) {
            const std::string& _s = this_._internal_to_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendRequest.to_uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string message = 4;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.FriendRequest.message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // .im.friend.FriendRequestStatus status = 5;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_status(), target);
          }

          // int64 create_time = 6;
          if (this_._internal_create_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_create_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.FriendRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FriendRequest::ByteSizeLong(const MessageLite& base) {
          const FriendRequest& this_ = static_cast<const FriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FriendRequest::ByteSizeLong() const {
          const FriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.FriendRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string request_id = 1;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string from_uid = 2;
            if (!this_._internal_from_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_uid());
            }
            // string to_uid = 3;
            if (!this_._internal_to_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_uid());
            }
            // string message = 4;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // int64 create_time = 6;
            if (this_._internal_create_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_create_time());
            }
            // .im.friend.FriendRequestStatus status = 5;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FriendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FriendRequest*>(&to_msg);
  auto& from = static_cast<const FriendRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.FriendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_from_uid().empty()) {
    _this->_internal_set_from_uid(from._internal_from_uid());
  }
  if (!from._internal_to_uid().empty()) {
    _this->_internal_set_to_uid(from._internal_to_uid());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_create_time() != 0) {
    _this->_impl_.create_time_ = from._impl_.create_time_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FriendRequest::CopyFrom(const FriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.FriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FriendRequest::InternalSwap(FriendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_uid_, &other->_impl_.from_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_uid_, &other->_impl_.to_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.status_)
      + sizeof(FriendRequest::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(FriendRequest, _impl_.create_time_)>(
          reinterpret_cast<char*>(&_impl_.create_time_),
          reinterpret_cast<char*>(&other->_impl_.create_time_));
}

::google::protobuf::Metadata FriendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddFriendRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AddFriendRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_._has_bits_);
};

void AddFriendRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AddFriendRequest::AddFriendRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.AddFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::AddFriendRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        to_uid_(arena, from.to_uid_),
        message_(arena, from.message_) {}

AddFriendRequest::AddFriendRequest(
    ::google::protobuf::Arena* arena,
    const AddFriendRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddFriendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.AddFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        to_uid_(arena),
        message_(arena) {}

inline void AddFriendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
AddFriendRequest::~AddFriendRequest() {
  // @@protoc_insertion_point(destructor:im.friend.AddFriendRequest)
  SharedDtor(*this);
}
inline void AddFriendRequest::SharedDtor(MessageLite& self) {
  AddFriendRequest& this_ = static_cast<AddFriendRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.to_uid_.Destroy();
  this_._impl_.message_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* AddFriendRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendRequest(arena);
}
constexpr auto AddFriendRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddFriendRequest),
                                            alignof(AddFriendRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendRequest>(), &AddFriendRequest::ByteSizeLong,
            &AddFriendRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_._cached_size_),
        false,
    },
    &AddFriendRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 48, 2> AddFriendRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::AddFriendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.header_)}},
    // string to_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.to_uid_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string to_uid = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.to_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(AddFriendRequest, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\32\0\6\7\0\0\0\0"
    "im.friend.AddFriendRequest"
    "to_uid"
    "message"
  }},
};

PROTOBUF_NOINLINE void AddFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.AddFriendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.to_uid_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendRequest& this_ = static_cast<const AddFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.AddFriendRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // string to_uid = 2;
          if (!this_._internal_to_uid().empty()) {
            const std::string& _s = this_._internal_to_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.AddFriendRequest.to_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string message = 3;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.AddFriendRequest.message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.AddFriendRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendRequest::ByteSizeLong(const MessageLite& base) {
          const AddFriendRequest& this_ = static_cast<const AddFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendRequest::ByteSizeLong() const {
          const AddFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.AddFriendRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string to_uid = 2;
            if (!this_._internal_to_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_uid());
            }
            // string message = 3;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendRequest*>(&to_msg);
  auto& from = static_cast<const AddFriendRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.AddFriendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_to_uid().empty()) {
    _this->_internal_set_to_uid(from._internal_to_uid());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendRequest::CopyFrom(const AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.AddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendRequest::InternalSwap(AddFriendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_uid_, &other->_impl_.to_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata AddFriendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddFriendResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AddFriendResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._has_bits_);
};

void AddFriendResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AddFriendResponse::AddFriendResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.AddFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::AddFriendResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AddFriendResponse::AddFriendResponse(
    ::google::protobuf::Arena* arena,
    const AddFriendResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddFriendResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.request_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::im::friend_::FriendRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.AddFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AddFriendResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, request_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::request_));
}
AddFriendResponse::~AddFriendResponse() {
  // @@protoc_insertion_point(destructor:im.friend.AddFriendResponse)
  SharedDtor(*this);
}
inline void AddFriendResponse::SharedDtor(MessageLite& self) {
  AddFriendResponse& this_ = static_cast<AddFriendResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  delete this_._impl_.request_;
  this_._impl_.~Impl_();
}

inline void* AddFriendResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddFriendResponse(arena);
}
constexpr auto AddFriendResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AddFriendResponse),
                                            alignof(AddFriendResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddFriendResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddFriendResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddFriendResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddFriendResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddFriendResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddFriendResponse>(), &AddFriendResponse::ByteSizeLong,
            &AddFriendResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._cached_size_),
        false,
    },
    &AddFriendResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddFriendResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AddFriendResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::AddFriendResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.friend.FriendRequest request = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.request_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .im.friend.FriendRequest request = 2;
    {PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.request_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
    {::_pbi::TcParser::GetTable<::im::friend_::FriendRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AddFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.AddFriendResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddFriendResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddFriendResponse& this_ = static_cast<const AddFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddFriendResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.AddFriendResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // .im.friend.FriendRequest request = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.AddFriendResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddFriendResponse::ByteSizeLong(const MessageLite& base) {
          const AddFriendResponse& this_ = static_cast<const AddFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddFriendResponse::ByteSizeLong() const {
          const AddFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.AddFriendResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .im.base.BaseResponse base = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
            // .im.friend.FriendRequest request = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddFriendResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddFriendResponse*>(&to_msg);
  auto& from = static_cast<const AddFriendResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.AddFriendResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ =
            ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::im::friend_::FriendRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddFriendResponse::CopyFrom(const AddFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.AddFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddFriendResponse::InternalSwap(AddFriendResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.request_)
      + sizeof(AddFriendResponse::_impl_.request_)
      - PROTOBUF_FIELD_OFFSET(AddFriendResponse, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata AddFriendResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandleFriendRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HandleFriendRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_._has_bits_);
};

void HandleFriendRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HandleFriendRequest::HandleFriendRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.HandleFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE HandleFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::HandleFriendRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_id_(arena, from.request_id_) {}

HandleFriendRequest::HandleFriendRequest(
    ::google::protobuf::Arena* arena,
    const HandleFriendRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandleFriendRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;
  _impl_.accept_ = from._impl_.accept_;

  // @@protoc_insertion_point(copy_constructor:im.friend.HandleFriendRequest)
}
inline PROTOBUF_NDEBUG_INLINE HandleFriendRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        request_id_(arena) {}

inline void HandleFriendRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, accept_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::accept_));
}
HandleFriendRequest::~HandleFriendRequest() {
  // @@protoc_insertion_point(destructor:im.friend.HandleFriendRequest)
  SharedDtor(*this);
}
inline void HandleFriendRequest::SharedDtor(MessageLite& self) {
  HandleFriendRequest& this_ = static_cast<HandleFriendRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* HandleFriendRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HandleFriendRequest(arena);
}
constexpr auto HandleFriendRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HandleFriendRequest),
                                            alignof(HandleFriendRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HandleFriendRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HandleFriendRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HandleFriendRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HandleFriendRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HandleFriendRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HandleFriendRequest>(), &HandleFriendRequest::ByteSizeLong,
            &HandleFriendRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_._cached_size_),
        false,
    },
    &HandleFriendRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HandleFriendRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 48, 2> HandleFriendRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::HandleFriendRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.header_)}},
    // string request_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.request_id_)}},
    // bool accept = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HandleFriendRequest, _impl_.accept_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.accept_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string request_id = 2;
    {PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool accept = 3;
    {PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.accept_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\35\0\12\0\0\0\0\0"
    "im.friend.HandleFriendRequest"
    "request_id"
  }},
};

PROTOBUF_NOINLINE void HandleFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.HandleFriendRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_.accept_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandleFriendRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandleFriendRequest& this_ = static_cast<const HandleFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandleFriendRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandleFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.HandleFriendRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // string request_id = 2;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.HandleFriendRequest.request_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool accept = 3;
          if (this_._internal_accept() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_accept(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.HandleFriendRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandleFriendRequest::ByteSizeLong(const MessageLite& base) {
          const HandleFriendRequest& this_ = static_cast<const HandleFriendRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandleFriendRequest::ByteSizeLong() const {
          const HandleFriendRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.HandleFriendRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string request_id = 2;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
           {
            // bool accept = 3;
            if (this_._internal_accept() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandleFriendRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandleFriendRequest*>(&to_msg);
  auto& from = static_cast<const HandleFriendRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.HandleFriendRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  if (from._internal_accept() != 0) {
    _this->_impl_.accept_ = from._impl_.accept_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandleFriendRequest::CopyFrom(const HandleFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.HandleFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandleFriendRequest::InternalSwap(HandleFriendRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.accept_)
      + sizeof(HandleFriendRequest::_impl_.accept_)
      - PROTOBUF_FIELD_OFFSET(HandleFriendRequest, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata HandleFriendRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandleFriendResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HandleFriendResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HandleFriendResponse, _impl_._has_bits_);
};

void HandleFriendResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HandleFriendResponse::HandleFriendResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.HandleFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandleFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::HandleFriendResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HandleFriendResponse::HandleFriendResponse(
    ::google::protobuf::Arena* arena,
    const HandleFriendResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HandleFriendResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.HandleFriendResponse)
}
inline PROTOBUF_NDEBUG_INLINE HandleFriendResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HandleFriendResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
HandleFriendResponse::~HandleFriendResponse() {
  // @@protoc_insertion_point(destructor:im.friend.HandleFriendResponse)
  SharedDtor(*this);
}
inline void HandleFriendResponse::SharedDtor(MessageLite& self) {
  HandleFriendResponse& this_ = static_cast<HandleFriendResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* HandleFriendResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HandleFriendResponse(arena);
}
constexpr auto HandleFriendResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HandleFriendResponse),
                                            alignof(HandleFriendResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HandleFriendResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HandleFriendResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HandleFriendResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HandleFriendResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HandleFriendResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HandleFriendResponse>(), &HandleFriendResponse::ByteSizeLong,
            &HandleFriendResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HandleFriendResponse, _impl_._cached_size_),
        false,
    },
    &HandleFriendResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HandleFriendResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HandleFriendResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HandleFriendResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::HandleFriendResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HandleFriendResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(HandleFriendResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HandleFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.HandleFriendResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HandleFriendResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HandleFriendResponse& this_ = static_cast<const HandleFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HandleFriendResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HandleFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.HandleFriendResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.HandleFriendResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HandleFriendResponse::ByteSizeLong(const MessageLite& base) {
          const HandleFriendResponse& this_ = static_cast<const HandleFriendResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HandleFriendResponse::ByteSizeLong() const {
          const HandleFriendResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.HandleFriendResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HandleFriendResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandleFriendResponse*>(&to_msg);
  auto& from = static_cast<const HandleFriendResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.HandleFriendResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandleFriendResponse::CopyFrom(const HandleFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.HandleFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandleFriendResponse::InternalSwap(HandleFriendResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata HandleFriendResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFriendListRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetFriendListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFriendListRequest, _impl_._has_bits_);
};

void GetFriendListRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetFriendListRequest::GetFriendListRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetFriendListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetFriendListRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetFriendListRequest::GetFriendListRequest(
    ::google::protobuf::Arena* arena,
    const GetFriendListRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFriendListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetFriendListRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetFriendListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
GetFriendListRequest::~GetFriendListRequest() {
  // @@protoc_insertion_point(destructor:im.friend.GetFriendListRequest)
  SharedDtor(*this);
}
inline void GetFriendListRequest::SharedDtor(MessageLite& self) {
  GetFriendListRequest& this_ = static_cast<GetFriendListRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* GetFriendListRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFriendListRequest(arena);
}
constexpr auto GetFriendListRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetFriendListRequest),
                                            alignof(GetFriendListRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFriendListRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFriendListRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFriendListRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFriendListRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFriendListRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFriendListRequest>(), &GetFriendListRequest::ByteSizeLong,
            &GetFriendListRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFriendListRequest, _impl_._cached_size_),
        false,
    },
    &GetFriendListRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFriendListRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetFriendListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFriendListRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetFriendListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFriendListRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(GetFriendListRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetFriendListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetFriendListRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFriendListRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFriendListRequest& this_ = static_cast<const GetFriendListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFriendListRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFriendListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetFriendListRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetFriendListRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFriendListRequest::ByteSizeLong(const MessageLite& base) {
          const GetFriendListRequest& this_ = static_cast<const GetFriendListRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFriendListRequest::ByteSizeLong() const {
          const GetFriendListRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetFriendListRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFriendListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFriendListRequest*>(&to_msg);
  auto& from = static_cast<const GetFriendListRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetFriendListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendListRequest::CopyFrom(const GetFriendListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetFriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFriendListRequest::InternalSwap(GetFriendListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata GetFriendListRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFriendListResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetFriendListResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_._has_bits_);
};

void GetFriendListResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetFriendListResponse::GetFriendListResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetFriendListResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetFriendListResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        friends_{visibility, arena, from.friends_} {}

GetFriendListResponse::GetFriendListResponse(
    ::google::protobuf::Arena* arena,
    const GetFriendListResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFriendListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetFriendListResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        friends_{visibility, arena} {}

inline void GetFriendListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
GetFriendListResponse::~GetFriendListResponse() {
  // @@protoc_insertion_point(destructor:im.friend.GetFriendListResponse)
  SharedDtor(*this);
}
inline void GetFriendListResponse::SharedDtor(MessageLite& self) {
  GetFriendListResponse& this_ = static_cast<GetFriendListResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* GetFriendListResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFriendListResponse(arena);
}
constexpr auto GetFriendListResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_.friends_) +
          decltype(GetFriendListResponse::_impl_.friends_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetFriendListResponse), alignof(GetFriendListResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetFriendListResponse::PlacementNew_,
                                 sizeof(GetFriendListResponse),
                                 alignof(GetFriendListResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFriendListResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFriendListResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFriendListResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFriendListResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFriendListResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFriendListResponse>(), &GetFriendListResponse::ByteSizeLong,
            &GetFriendListResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_._cached_size_),
        false,
    },
    &GetFriendListResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFriendListResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetFriendListResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetFriendListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .im.friend.FriendInfo friends = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_.friends_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .im.friend.FriendInfo friends = 2;
    {PROTOBUF_FIELD_OFFSET(GetFriendListResponse, _impl_.friends_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
    {::_pbi::TcParser::GetTable<::im::friend_::FriendInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetFriendListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetFriendListResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friends_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFriendListResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFriendListResponse& this_ = static_cast<const GetFriendListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFriendListResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFriendListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetFriendListResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // repeated .im.friend.FriendInfo friends = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_friends_size());
               i < n; i++) {
            const auto& repfield = this_._internal_friends().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetFriendListResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFriendListResponse::ByteSizeLong(const MessageLite& base) {
          const GetFriendListResponse& this_ = static_cast<const GetFriendListResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFriendListResponse::ByteSizeLong() const {
          const GetFriendListResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetFriendListResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .im.friend.FriendInfo friends = 2;
            {
              total_size += 1UL * this_._internal_friends_size();
              for (const auto& msg : this_._internal_friends()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFriendListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFriendListResponse*>(&to_msg);
  auto& from = static_cast<const GetFriendListResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetFriendListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_friends()->MergeFrom(
      from._internal_friends());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendListResponse::CopyFrom(const GetFriendListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetFriendListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFriendListResponse::InternalSwap(GetFriendListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.friends_.InternalSwap(&other->_impl_.friends_);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata GetFriendListResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFriendRequestsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetFriendRequestsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFriendRequestsRequest, _impl_._has_bits_);
};

void GetFriendRequestsRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetFriendRequestsRequest::GetFriendRequestsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetFriendRequestsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendRequestsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetFriendRequestsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetFriendRequestsRequest::GetFriendRequestsRequest(
    ::google::protobuf::Arena* arena,
    const GetFriendRequestsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFriendRequestsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetFriendRequestsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendRequestsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetFriendRequestsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
GetFriendRequestsRequest::~GetFriendRequestsRequest() {
  // @@protoc_insertion_point(destructor:im.friend.GetFriendRequestsRequest)
  SharedDtor(*this);
}
inline void GetFriendRequestsRequest::SharedDtor(MessageLite& self) {
  GetFriendRequestsRequest& this_ = static_cast<GetFriendRequestsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* GetFriendRequestsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFriendRequestsRequest(arena);
}
constexpr auto GetFriendRequestsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetFriendRequestsRequest),
                                            alignof(GetFriendRequestsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFriendRequestsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFriendRequestsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFriendRequestsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFriendRequestsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFriendRequestsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFriendRequestsRequest>(), &GetFriendRequestsRequest::ByteSizeLong,
            &GetFriendRequestsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFriendRequestsRequest, _impl_._cached_size_),
        false,
    },
    &GetFriendRequestsRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFriendRequestsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetFriendRequestsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFriendRequestsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetFriendRequestsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFriendRequestsRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(GetFriendRequestsRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetFriendRequestsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetFriendRequestsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFriendRequestsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFriendRequestsRequest& this_ = static_cast<const GetFriendRequestsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFriendRequestsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFriendRequestsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetFriendRequestsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetFriendRequestsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFriendRequestsRequest::ByteSizeLong(const MessageLite& base) {
          const GetFriendRequestsRequest& this_ = static_cast<const GetFriendRequestsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFriendRequestsRequest::ByteSizeLong() const {
          const GetFriendRequestsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetFriendRequestsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFriendRequestsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFriendRequestsRequest*>(&to_msg);
  auto& from = static_cast<const GetFriendRequestsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetFriendRequestsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendRequestsRequest::CopyFrom(const GetFriendRequestsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetFriendRequestsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFriendRequestsRequest::InternalSwap(GetFriendRequestsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata GetFriendRequestsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFriendRequestsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetFriendRequestsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_._has_bits_);
};

void GetFriendRequestsResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetFriendRequestsResponse::GetFriendRequestsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetFriendRequestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendRequestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetFriendRequestsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        requests_{visibility, arena, from.requests_} {}

GetFriendRequestsResponse::GetFriendRequestsResponse(
    ::google::protobuf::Arena* arena,
    const GetFriendRequestsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFriendRequestsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetFriendRequestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFriendRequestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        requests_{visibility, arena} {}

inline void GetFriendRequestsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
GetFriendRequestsResponse::~GetFriendRequestsResponse() {
  // @@protoc_insertion_point(destructor:im.friend.GetFriendRequestsResponse)
  SharedDtor(*this);
}
inline void GetFriendRequestsResponse::SharedDtor(MessageLite& self) {
  GetFriendRequestsResponse& this_ = static_cast<GetFriendRequestsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* GetFriendRequestsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFriendRequestsResponse(arena);
}
constexpr auto GetFriendRequestsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_.requests_) +
          decltype(GetFriendRequestsResponse::_impl_.requests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetFriendRequestsResponse), alignof(GetFriendRequestsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetFriendRequestsResponse::PlacementNew_,
                                 sizeof(GetFriendRequestsResponse),
                                 alignof(GetFriendRequestsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFriendRequestsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFriendRequestsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFriendRequestsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFriendRequestsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFriendRequestsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFriendRequestsResponse>(), &GetFriendRequestsResponse::ByteSizeLong,
            &GetFriendRequestsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_._cached_size_),
        false,
    },
    &GetFriendRequestsResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFriendRequestsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetFriendRequestsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetFriendRequestsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .im.friend.FriendRequest requests = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_.requests_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .im.friend.FriendRequest requests = 2;
    {PROTOBUF_FIELD_OFFSET(GetFriendRequestsResponse, _impl_.requests_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
    {::_pbi::TcParser::GetTable<::im::friend_::FriendRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetFriendRequestsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetFriendRequestsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requests_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFriendRequestsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFriendRequestsResponse& this_ = static_cast<const GetFriendRequestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFriendRequestsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFriendRequestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetFriendRequestsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // repeated .im.friend.FriendRequest requests = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_requests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_requests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetFriendRequestsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFriendRequestsResponse::ByteSizeLong(const MessageLite& base) {
          const GetFriendRequestsResponse& this_ = static_cast<const GetFriendRequestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFriendRequestsResponse::ByteSizeLong() const {
          const GetFriendRequestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetFriendRequestsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .im.friend.FriendRequest requests = 2;
            {
              total_size += 1UL * this_._internal_requests_size();
              for (const auto& msg : this_._internal_requests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFriendRequestsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFriendRequestsResponse*>(&to_msg);
  auto& from = static_cast<const GetFriendRequestsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetFriendRequestsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requests()->MergeFrom(
      from._internal_requests());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFriendRequestsResponse::CopyFrom(const GetFriendRequestsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetFriendRequestsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFriendRequestsResponse::InternalSwap(GetFriendRequestsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.requests_.InternalSwap(&other->_impl_.requests_);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata GetFriendRequestsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddToBlacklistRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AddToBlacklistRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_._has_bits_);
};

void AddToBlacklistRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AddToBlacklistRequest::AddToBlacklistRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.AddToBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddToBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::AddToBlacklistRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_uid_(arena, from.target_uid_) {}

AddToBlacklistRequest::AddToBlacklistRequest(
    ::google::protobuf::Arena* arena,
    const AddToBlacklistRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddToBlacklistRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.AddToBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddToBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_uid_(arena) {}

inline void AddToBlacklistRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
AddToBlacklistRequest::~AddToBlacklistRequest() {
  // @@protoc_insertion_point(destructor:im.friend.AddToBlacklistRequest)
  SharedDtor(*this);
}
inline void AddToBlacklistRequest::SharedDtor(MessageLite& self) {
  AddToBlacklistRequest& this_ = static_cast<AddToBlacklistRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_uid_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* AddToBlacklistRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddToBlacklistRequest(arena);
}
constexpr auto AddToBlacklistRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddToBlacklistRequest),
                                            alignof(AddToBlacklistRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddToBlacklistRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddToBlacklistRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddToBlacklistRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddToBlacklistRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddToBlacklistRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddToBlacklistRequest>(), &AddToBlacklistRequest::ByteSizeLong,
            &AddToBlacklistRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_._cached_size_),
        false,
    },
    &AddToBlacklistRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddToBlacklistRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2> AddToBlacklistRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::AddToBlacklistRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string target_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_.target_uid_)}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string target_uid = 2;
    {PROTOBUF_FIELD_OFFSET(AddToBlacklistRequest, _impl_.target_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\37\0\12\0\0\0\0\0"
    "im.friend.AddToBlacklistRequest"
    "target_uid"
  }},
};

PROTOBUF_NOINLINE void AddToBlacklistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.AddToBlacklistRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddToBlacklistRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddToBlacklistRequest& this_ = static_cast<const AddToBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddToBlacklistRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddToBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.AddToBlacklistRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // string target_uid = 2;
          if (!this_._internal_target_uid().empty()) {
            const std::string& _s = this_._internal_target_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.AddToBlacklistRequest.target_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.AddToBlacklistRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddToBlacklistRequest::ByteSizeLong(const MessageLite& base) {
          const AddToBlacklistRequest& this_ = static_cast<const AddToBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddToBlacklistRequest::ByteSizeLong() const {
          const AddToBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.AddToBlacklistRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target_uid = 2;
            if (!this_._internal_target_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_uid());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddToBlacklistRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddToBlacklistRequest*>(&to_msg);
  auto& from = static_cast<const AddToBlacklistRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.AddToBlacklistRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target_uid().empty()) {
    _this->_internal_set_target_uid(from._internal_target_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddToBlacklistRequest::CopyFrom(const AddToBlacklistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.AddToBlacklistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddToBlacklistRequest::InternalSwap(AddToBlacklistRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_uid_, &other->_impl_.target_uid_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata AddToBlacklistRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddToBlacklistResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AddToBlacklistResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddToBlacklistResponse, _impl_._has_bits_);
};

void AddToBlacklistResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AddToBlacklistResponse::AddToBlacklistResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.AddToBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddToBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::AddToBlacklistResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AddToBlacklistResponse::AddToBlacklistResponse(
    ::google::protobuf::Arena* arena,
    const AddToBlacklistResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddToBlacklistResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.AddToBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE AddToBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AddToBlacklistResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
AddToBlacklistResponse::~AddToBlacklistResponse() {
  // @@protoc_insertion_point(destructor:im.friend.AddToBlacklistResponse)
  SharedDtor(*this);
}
inline void AddToBlacklistResponse::SharedDtor(MessageLite& self) {
  AddToBlacklistResponse& this_ = static_cast<AddToBlacklistResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* AddToBlacklistResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddToBlacklistResponse(arena);
}
constexpr auto AddToBlacklistResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AddToBlacklistResponse),
                                            alignof(AddToBlacklistResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddToBlacklistResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddToBlacklistResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddToBlacklistResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddToBlacklistResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddToBlacklistResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddToBlacklistResponse>(), &AddToBlacklistResponse::ByteSizeLong,
            &AddToBlacklistResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddToBlacklistResponse, _impl_._cached_size_),
        false,
    },
    &AddToBlacklistResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddToBlacklistResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AddToBlacklistResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddToBlacklistResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::AddToBlacklistResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddToBlacklistResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(AddToBlacklistResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AddToBlacklistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.AddToBlacklistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddToBlacklistResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddToBlacklistResponse& this_ = static_cast<const AddToBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddToBlacklistResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddToBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.AddToBlacklistResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.AddToBlacklistResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddToBlacklistResponse::ByteSizeLong(const MessageLite& base) {
          const AddToBlacklistResponse& this_ = static_cast<const AddToBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddToBlacklistResponse::ByteSizeLong() const {
          const AddToBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.AddToBlacklistResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddToBlacklistResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddToBlacklistResponse*>(&to_msg);
  auto& from = static_cast<const AddToBlacklistResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.AddToBlacklistResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddToBlacklistResponse::CopyFrom(const AddToBlacklistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.AddToBlacklistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddToBlacklistResponse::InternalSwap(AddToBlacklistResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata AddToBlacklistResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveFromBlacklistRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RemoveFromBlacklistRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_._has_bits_);
};

void RemoveFromBlacklistRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RemoveFromBlacklistRequest::RemoveFromBlacklistRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.RemoveFromBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFromBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::RemoveFromBlacklistRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_uid_(arena, from.target_uid_) {}

RemoveFromBlacklistRequest::RemoveFromBlacklistRequest(
    ::google::protobuf::Arena* arena,
    const RemoveFromBlacklistRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveFromBlacklistRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.RemoveFromBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFromBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_uid_(arena) {}

inline void RemoveFromBlacklistRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
RemoveFromBlacklistRequest::~RemoveFromBlacklistRequest() {
  // @@protoc_insertion_point(destructor:im.friend.RemoveFromBlacklistRequest)
  SharedDtor(*this);
}
inline void RemoveFromBlacklistRequest::SharedDtor(MessageLite& self) {
  RemoveFromBlacklistRequest& this_ = static_cast<RemoveFromBlacklistRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_uid_.Destroy();
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* RemoveFromBlacklistRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoveFromBlacklistRequest(arena);
}
constexpr auto RemoveFromBlacklistRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoveFromBlacklistRequest),
                                            alignof(RemoveFromBlacklistRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoveFromBlacklistRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoveFromBlacklistRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoveFromBlacklistRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoveFromBlacklistRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoveFromBlacklistRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoveFromBlacklistRequest>(), &RemoveFromBlacklistRequest::ByteSizeLong,
            &RemoveFromBlacklistRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_._cached_size_),
        false,
    },
    &RemoveFromBlacklistRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoveFromBlacklistRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 55, 2> RemoveFromBlacklistRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::RemoveFromBlacklistRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string target_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_.target_uid_)}},
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string target_uid = 2;
    {PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistRequest, _impl_.target_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
    "\44\0\12\0\0\0\0\0"
    "im.friend.RemoveFromBlacklistRequest"
    "target_uid"
  }},
};

PROTOBUF_NOINLINE void RemoveFromBlacklistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.RemoveFromBlacklistRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoveFromBlacklistRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoveFromBlacklistRequest& this_ = static_cast<const RemoveFromBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoveFromBlacklistRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoveFromBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.RemoveFromBlacklistRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // string target_uid = 2;
          if (!this_._internal_target_uid().empty()) {
            const std::string& _s = this_._internal_target_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.RemoveFromBlacklistRequest.target_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.RemoveFromBlacklistRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoveFromBlacklistRequest::ByteSizeLong(const MessageLite& base) {
          const RemoveFromBlacklistRequest& this_ = static_cast<const RemoveFromBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoveFromBlacklistRequest::ByteSizeLong() const {
          const RemoveFromBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.RemoveFromBlacklistRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target_uid = 2;
            if (!this_._internal_target_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_uid());
            }
          }
           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoveFromBlacklistRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveFromBlacklistRequest*>(&to_msg);
  auto& from = static_cast<const RemoveFromBlacklistRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.RemoveFromBlacklistRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target_uid().empty()) {
    _this->_internal_set_target_uid(from._internal_target_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFromBlacklistRequest::CopyFrom(const RemoveFromBlacklistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.RemoveFromBlacklistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveFromBlacklistRequest::InternalSwap(RemoveFromBlacklistRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_uid_, &other->_impl_.target_uid_, arena);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata RemoveFromBlacklistRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveFromBlacklistResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RemoveFromBlacklistResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistResponse, _impl_._has_bits_);
};

void RemoveFromBlacklistResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RemoveFromBlacklistResponse::RemoveFromBlacklistResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.RemoveFromBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFromBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::RemoveFromBlacklistResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveFromBlacklistResponse::RemoveFromBlacklistResponse(
    ::google::protobuf::Arena* arena,
    const RemoveFromBlacklistResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveFromBlacklistResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.RemoveFromBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE RemoveFromBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RemoveFromBlacklistResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
RemoveFromBlacklistResponse::~RemoveFromBlacklistResponse() {
  // @@protoc_insertion_point(destructor:im.friend.RemoveFromBlacklistResponse)
  SharedDtor(*this);
}
inline void RemoveFromBlacklistResponse::SharedDtor(MessageLite& self) {
  RemoveFromBlacklistResponse& this_ = static_cast<RemoveFromBlacklistResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* RemoveFromBlacklistResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoveFromBlacklistResponse(arena);
}
constexpr auto RemoveFromBlacklistResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RemoveFromBlacklistResponse),
                                            alignof(RemoveFromBlacklistResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoveFromBlacklistResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoveFromBlacklistResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoveFromBlacklistResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoveFromBlacklistResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoveFromBlacklistResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoveFromBlacklistResponse>(), &RemoveFromBlacklistResponse::ByteSizeLong,
            &RemoveFromBlacklistResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistResponse, _impl_._cached_size_),
        false,
    },
    &RemoveFromBlacklistResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoveFromBlacklistResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RemoveFromBlacklistResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::RemoveFromBlacklistResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(RemoveFromBlacklistResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RemoveFromBlacklistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.RemoveFromBlacklistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoveFromBlacklistResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoveFromBlacklistResponse& this_ = static_cast<const RemoveFromBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoveFromBlacklistResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoveFromBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.RemoveFromBlacklistResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.RemoveFromBlacklistResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoveFromBlacklistResponse::ByteSizeLong(const MessageLite& base) {
          const RemoveFromBlacklistResponse& this_ = static_cast<const RemoveFromBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoveFromBlacklistResponse::ByteSizeLong() const {
          const RemoveFromBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.RemoveFromBlacklistResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoveFromBlacklistResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveFromBlacklistResponse*>(&to_msg);
  auto& from = static_cast<const RemoveFromBlacklistResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.RemoveFromBlacklistResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFromBlacklistResponse::CopyFrom(const RemoveFromBlacklistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.RemoveFromBlacklistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveFromBlacklistResponse::InternalSwap(RemoveFromBlacklistResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata RemoveFromBlacklistResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlacklistRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetBlacklistRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBlacklistRequest, _impl_._has_bits_);
};

void GetBlacklistRequest::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetBlacklistRequest::GetBlacklistRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetBlacklistRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetBlacklistRequest::GetBlacklistRequest(
    ::google::protobuf::Arena* arena,
    const GetBlacklistRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBlacklistRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetBlacklistRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBlacklistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetBlacklistRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
GetBlacklistRequest::~GetBlacklistRequest() {
  // @@protoc_insertion_point(destructor:im.friend.GetBlacklistRequest)
  SharedDtor(*this);
}
inline void GetBlacklistRequest::SharedDtor(MessageLite& self) {
  GetBlacklistRequest& this_ = static_cast<GetBlacklistRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* GetBlacklistRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetBlacklistRequest(arena);
}
constexpr auto GetBlacklistRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetBlacklistRequest),
                                            alignof(GetBlacklistRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetBlacklistRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetBlacklistRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetBlacklistRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetBlacklistRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetBlacklistRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetBlacklistRequest>(), &GetBlacklistRequest::ByteSizeLong,
            &GetBlacklistRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetBlacklistRequest, _impl_._cached_size_),
        false,
    },
    &GetBlacklistRequest::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetBlacklistRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetBlacklistRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBlacklistRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetBlacklistRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .im.base.IMHeader header = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBlacklistRequest, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.IMHeader header = 1;
    {PROTOBUF_FIELD_OFFSET(GetBlacklistRequest, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::IMHeader>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetBlacklistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetBlacklistRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBlacklistRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBlacklistRequest& this_ = static_cast<const GetBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBlacklistRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetBlacklistRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.IMHeader header = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetBlacklistRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBlacklistRequest::ByteSizeLong(const MessageLite& base) {
          const GetBlacklistRequest& this_ = static_cast<const GetBlacklistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBlacklistRequest::ByteSizeLong() const {
          const GetBlacklistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetBlacklistRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .im.base.IMHeader header = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBlacklistRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlacklistRequest*>(&to_msg);
  auto& from = static_cast<const GetBlacklistRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetBlacklistRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::IMHeader>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlacklistRequest::CopyFrom(const GetBlacklistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetBlacklistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlacklistRequest::InternalSwap(GetBlacklistRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata GetBlacklistRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBlacklistResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetBlacklistResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_._has_bits_);
};

void GetBlacklistResponse::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetBlacklistResponse::GetBlacklistResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.friend.GetBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::friend_::GetBlacklistResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        black_uids_{visibility, arena, from.black_uids_} {}

GetBlacklistResponse::GetBlacklistResponse(
    ::google::protobuf::Arena* arena,
    const GetBlacklistResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBlacklistResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(
                              arena, *from._impl_.base_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:im.friend.GetBlacklistResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBlacklistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        black_uids_{visibility, arena} {}

inline void GetBlacklistResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_ = {};
}
GetBlacklistResponse::~GetBlacklistResponse() {
  // @@protoc_insertion_point(destructor:im.friend.GetBlacklistResponse)
  SharedDtor(*this);
}
inline void GetBlacklistResponse::SharedDtor(MessageLite& self) {
  GetBlacklistResponse& this_ = static_cast<GetBlacklistResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.base_;
  this_._impl_.~Impl_();
}

inline void* GetBlacklistResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetBlacklistResponse(arena);
}
constexpr auto GetBlacklistResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_.black_uids_) +
          decltype(GetBlacklistResponse::_impl_.black_uids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetBlacklistResponse), alignof(GetBlacklistResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetBlacklistResponse::PlacementNew_,
                                 sizeof(GetBlacklistResponse),
                                 alignof(GetBlacklistResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetBlacklistResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetBlacklistResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetBlacklistResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetBlacklistResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetBlacklistResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetBlacklistResponse>(), &GetBlacklistResponse::ByteSizeLong,
            &GetBlacklistResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_._cached_size_),
        false,
    },
    &GetBlacklistResponse::kDescriptorMethods,
    &descriptor_table_friend_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetBlacklistResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> GetBlacklistResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::friend_::GetBlacklistResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string black_uids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_.black_uids_)}},
    // .im.base.BaseResponse base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_.base_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.BaseResponse base = 1;
    {PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string black_uids = 2;
    {PROTOBUF_FIELD_OFFSET(GetBlacklistResponse, _impl_.black_uids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::im::base::BaseResponse>()},
  }}, {{
    "\36\0\12\0\0\0\0\0"
    "im.friend.GetBlacklistResponse"
    "black_uids"
  }},
};

PROTOBUF_NOINLINE void GetBlacklistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.friend.GetBlacklistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.black_uids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBlacklistResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBlacklistResponse& this_ = static_cast<const GetBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBlacklistResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.friend.GetBlacklistResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .im.base.BaseResponse base = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_, this_._impl_.base_->GetCachedSize(), target,
                stream);
          }

          // repeated string black_uids = 2;
          for (int i = 0, n = this_._internal_black_uids_size(); i < n; ++i) {
            const auto& s = this_._internal_black_uids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.friend.GetBlacklistResponse.black_uids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.friend.GetBlacklistResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBlacklistResponse::ByteSizeLong(const MessageLite& base) {
          const GetBlacklistResponse& this_ = static_cast<const GetBlacklistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBlacklistResponse::ByteSizeLong() const {
          const GetBlacklistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.friend.GetBlacklistResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string black_uids = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_black_uids().size());
              for (int i = 0, n = this_._internal_black_uids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_black_uids().Get(i));
              }
            }
          }
           {
            // .im.base.BaseResponse base = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBlacklistResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBlacklistResponse*>(&to_msg);
  auto& from = static_cast<const GetBlacklistResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:im.friend.GetBlacklistResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_black_uids()->MergeFrom(from._internal_black_uids());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_ != nullptr);
    if (_this->_impl_.base_ == nullptr) {
      _this->_impl_.base_ =
          ::google::protobuf::Message::CopyConstruct<::im::base::BaseResponse>(arena, *from._impl_.base_);
    } else {
      _this->_impl_.base_->MergeFrom(*from._impl_.base_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlacklistResponse::CopyFrom(const GetBlacklistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.friend.GetBlacklistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBlacklistResponse::InternalSwap(GetBlacklistResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.black_uids_.InternalSwap(&other->_impl_.black_uids_);
  swap(_impl_.base_, other->_impl_.base_);
}

::google::protobuf::Metadata GetBlacklistResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace friend_
}  // namespace im
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_friend_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

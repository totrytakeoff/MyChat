// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: base.proto
// Protobuf C++ Version: 5.29.3

#include "base.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace im {
namespace base {

inline constexpr IMHeader::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seq_{0u},
        cmd_id_{0u},
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IMHeader::IMHeader(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IMHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IMHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IMHeaderDefaultTypeInternal() {}
  union {
    IMHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IMHeaderDefaultTypeInternal _IMHeader_default_instance_;

inline constexpr BaseResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_code_{static_cast< ::im::base::ErrorCode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BaseResponse::BaseResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseResponseDefaultTypeInternal() {}
  union {
    BaseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
}  // namespace base
}  // namespace im
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_base_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_base_2eproto = nullptr;
const ::uint32_t
    TableStruct_base_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.seq_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.cmd_id_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.from_uid_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.to_uid_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.token_),
        PROTOBUF_FIELD_OFFSET(::im::base::IMHeader, _impl_.device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::im::base::BaseResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::im::base::BaseResponse, _impl_.error_code_),
        PROTOBUF_FIELD_OFFSET(::im::base::BaseResponse, _impl_.error_message_),
        PROTOBUF_FIELD_OFFSET(::im::base::BaseResponse, _impl_.payload_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::im::base::IMHeader)},
        {16, -1, -1, sizeof(::im::base::BaseResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::im::base::_IMHeader_default_instance_._instance,
    &::im::base::_BaseResponse_default_instance_._instance,
};
const char descriptor_table_protodef_base_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nbase.proto\022\007im.base\"\217\001\n\010IMHeader\022\017\n\007ve"
    "rsion\030\001 \001(\t\022\013\n\003seq\030\002 \001(\r\022\016\n\006cmd_id\030\003 \001(\r"
    "\022\020\n\010from_uid\030\004 \001(\t\022\016\n\006to_uid\030\005 \001(\t\022\021\n\tti"
    "mestamp\030\006 \001(\004\022\r\n\005token\030\007 \001(\t\022\021\n\tdevice_i"
    "d\030\010 \001(\t\"^\n\014BaseResponse\022&\n\nerror_code\030\001 "
    "\001(\0162\022.im.base.ErrorCode\022\025\n\rerror_message"
    "\030\002 \001(\t\022\017\n\007payload\030\003 \001(\014*\275\001\n\tErrorCode\022\013\n"
    "\007SUCCESS\020\000\022\023\n\017INVALID_REQUEST\020\001\022\017\n\013AUTH_"
    "FAILED\020\002\022\r\n\tNOT_FOUND\020\003\022\025\n\021PERMISSION_DE"
    "NIED\020\004\022\022\n\016ALREADY_EXISTS\020\005\022\017\n\013PARAM_ERRO"
    "R\020\006\022\013\n\007TIMEOUT\020\007\022\021\n\014SERVER_ERROR\020\364\003\022\022\n\rU"
    "NKNOWN_ERROR\020\350\007b\006proto3"
};
static ::absl::once_flag descriptor_table_base_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_base_2eproto = {
    false,
    false,
    463,
    descriptor_table_protodef_base_2eproto,
    "base.proto",
    &descriptor_table_base_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_base_2eproto::offsets,
    file_level_enum_descriptors_base_2eproto,
    file_level_service_descriptors_base_2eproto,
};
namespace im {
namespace base {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_base_2eproto);
  return file_level_enum_descriptors_base_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ErrorCode_internal_data_[] = {
    524288u, 131072u, 1000u, 500u, };
bool ErrorCode_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, ErrorCode_internal_data_);
}
// ===================================================================

class IMHeader::_Internal {
 public:
};

IMHeader::IMHeader(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.base.IMHeader)
}
inline PROTOBUF_NDEBUG_INLINE IMHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::base::IMHeader& from_msg)
      : version_(arena, from.version_),
        from_uid_(arena, from.from_uid_),
        to_uid_(arena, from.to_uid_),
        token_(arena, from.token_),
        device_id_(arena, from.device_id_),
        _cached_size_{0} {}

IMHeader::IMHeader(
    ::google::protobuf::Arena* arena,
    const IMHeader& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IMHeader* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seq_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, seq_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:im.base.IMHeader)
}
inline PROTOBUF_NDEBUG_INLINE IMHeader::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : version_(arena),
        from_uid_(arena),
        to_uid_(arena),
        token_(arena),
        device_id_(arena),
        _cached_size_{0} {}

inline void IMHeader::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, seq_) +
               sizeof(Impl_::timestamp_));
}
IMHeader::~IMHeader() {
  // @@protoc_insertion_point(destructor:im.base.IMHeader)
  SharedDtor(*this);
}
inline void IMHeader::SharedDtor(MessageLite& self) {
  IMHeader& this_ = static_cast<IMHeader&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.from_uid_.Destroy();
  this_._impl_.to_uid_.Destroy();
  this_._impl_.token_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* IMHeader::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) IMHeader(arena);
}
constexpr auto IMHeader::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(IMHeader),
                                            alignof(IMHeader));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull IMHeader::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_IMHeader_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &IMHeader::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<IMHeader>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &IMHeader::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<IMHeader>(), &IMHeader::ByteSizeLong,
            &IMHeader::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(IMHeader, _impl_._cached_size_),
        false,
    },
    &IMHeader::kDescriptorMethods,
    &descriptor_table_base_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* IMHeader::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 68, 2> IMHeader::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::base::IMHeader>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.device_id_)}},
    // string version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.version_)}},
    // uint32 seq = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IMHeader, _impl_.seq_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.seq_)}},
    // uint32 cmd_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IMHeader, _impl_.cmd_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.cmd_id_)}},
    // string from_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.from_uid_)}},
    // string to_uid = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.to_uid_)}},
    // uint64 timestamp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IMHeader, _impl_.timestamp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.timestamp_)}},
    // string token = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 seq = 2;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cmd_id = 3;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.cmd_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string from_uid = 4;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.from_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_uid = 5;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.to_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string token = 7;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 8;
    {PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\7\0\0\10\6\0\5\11\0\0\0\0\0\0\0"
    "im.base.IMHeader"
    "version"
    "from_uid"
    "to_uid"
    "token"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void IMHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:im.base.IMHeader)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_.ClearToEmpty();
  _impl_.from_uid_.ClearToEmpty();
  _impl_.to_uid_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _impl_.device_id_.ClearToEmpty();
  ::memset(&_impl_.seq_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.seq_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IMHeader::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IMHeader& this_ = static_cast<const IMHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IMHeader::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IMHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.base.IMHeader)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string version = 1;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.IMHeader.version");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 seq = 2;
          if (this_._internal_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_seq(), target);
          }

          // uint32 cmd_id = 3;
          if (this_._internal_cmd_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_cmd_id(), target);
          }

          // string from_uid = 4;
          if (!this_._internal_from_uid().empty()) {
            const std::string& _s = this_._internal_from_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.IMHeader.from_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string to_uid = 5;
          if (!this_._internal_to_uid().empty()) {
            const std::string& _s = this_._internal_to_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.IMHeader.to_uid");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint64 timestamp = 6;
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_timestamp(), target);
          }

          // string token = 7;
          if (!this_._internal_token().empty()) {
            const std::string& _s = this_._internal_token();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.IMHeader.token");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string device_id = 8;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.IMHeader.device_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.base.IMHeader)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IMHeader::ByteSizeLong(const MessageLite& base) {
          const IMHeader& this_ = static_cast<const IMHeader&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IMHeader::ByteSizeLong() const {
          const IMHeader& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.base.IMHeader)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string version = 1;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string from_uid = 4;
            if (!this_._internal_from_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_from_uid());
            }
            // string to_uid = 5;
            if (!this_._internal_to_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_to_uid());
            }
            // string token = 7;
            if (!this_._internal_token().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_token());
            }
            // string device_id = 8;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // uint32 seq = 2;
            if (this_._internal_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_seq());
            }
            // uint32 cmd_id = 3;
            if (this_._internal_cmd_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_cmd_id());
            }
            // uint64 timestamp = 6;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IMHeader::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IMHeader*>(&to_msg);
  auto& from = static_cast<const IMHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.base.IMHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_from_uid().empty()) {
    _this->_internal_set_from_uid(from._internal_from_uid());
  }
  if (!from._internal_to_uid().empty()) {
    _this->_internal_set_to_uid(from._internal_to_uid());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (from._internal_seq() != 0) {
    _this->_impl_.seq_ = from._impl_.seq_;
  }
  if (from._internal_cmd_id() != 0) {
    _this->_impl_.cmd_id_ = from._impl_.cmd_id_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IMHeader::CopyFrom(const IMHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.base.IMHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IMHeader::InternalSwap(IMHeader* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_uid_, &other->_impl_.from_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_uid_, &other->_impl_.to_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.timestamp_)
      + sizeof(IMHeader::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(IMHeader, _impl_.seq_)>(
          reinterpret_cast<char*>(&_impl_.seq_),
          reinterpret_cast<char*>(&other->_impl_.seq_));
}

::google::protobuf::Metadata IMHeader::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BaseResponse::_Internal {
 public:
};

BaseResponse::BaseResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:im.base.BaseResponse)
}
inline PROTOBUF_NDEBUG_INLINE BaseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::im::base::BaseResponse& from_msg)
      : error_message_(arena, from.error_message_),
        payload_(arena, from.payload_),
        _cached_size_{0} {}

BaseResponse::BaseResponse(
    ::google::protobuf::Arena* arena,
    const BaseResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BaseResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.error_code_ = from._impl_.error_code_;

  // @@protoc_insertion_point(copy_constructor:im.base.BaseResponse)
}
inline PROTOBUF_NDEBUG_INLINE BaseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        payload_(arena),
        _cached_size_{0} {}

inline void BaseResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.error_code_ = {};
}
BaseResponse::~BaseResponse() {
  // @@protoc_insertion_point(destructor:im.base.BaseResponse)
  SharedDtor(*this);
}
inline void BaseResponse::SharedDtor(MessageLite& self) {
  BaseResponse& this_ = static_cast<BaseResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BaseResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BaseResponse(arena);
}
constexpr auto BaseResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BaseResponse),
                                            alignof(BaseResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BaseResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BaseResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BaseResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BaseResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BaseResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BaseResponse>(), &BaseResponse::ByteSizeLong,
            &BaseResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_._cached_size_),
        false,
    },
    &BaseResponse::kDescriptorMethods,
    &descriptor_table_base_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BaseResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> BaseResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::im::base::BaseResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .im.base.ErrorCode error_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseResponse, _impl_.error_code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.error_code_)}},
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.error_message_)}},
    // bytes payload = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .im.base.ErrorCode error_code = 1;
    {PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.error_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes payload = 3;
    {PROTOBUF_FIELD_OFFSET(BaseResponse, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\15\0\0\0\0\0"
    "im.base.BaseResponse"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void BaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:im.base.BaseResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _impl_.error_code_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BaseResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BaseResponse& this_ = static_cast<const BaseResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BaseResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BaseResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:im.base.BaseResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .im.base.ErrorCode error_code = 1;
          if (this_._internal_error_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_error_code(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "im.base.BaseResponse.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bytes payload = 3;
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:im.base.BaseResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BaseResponse::ByteSizeLong(const MessageLite& base) {
          const BaseResponse& this_ = static_cast<const BaseResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BaseResponse::ByteSizeLong() const {
          const BaseResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:im.base.BaseResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bytes payload = 3;
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_payload());
            }
            // .im.base.ErrorCode error_code = 1;
            if (this_._internal_error_code() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_error_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BaseResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BaseResponse*>(&to_msg);
  auto& from = static_cast<const BaseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:im.base.BaseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_error_code() != 0) {
    _this->_impl_.error_code_ = from._impl_.error_code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BaseResponse::CopyFrom(const BaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:im.base.BaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BaseResponse::InternalSwap(BaseResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  swap(_impl_.error_code_, other->_impl_.error_code_);
}

::google::protobuf::Metadata BaseResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace base
}  // namespace im
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_base_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test_message.proto
// Protobuf C++ Version: 5.29.3

#include "test_message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace test {

inline constexpr TestMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{0},
        id_{0},
        is_valid_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestMessage::TestMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestMessageDefaultTypeInternal() {}
  union {
    TestMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestMessageDefaultTypeInternal _TestMessage_default_instance_;

inline constexpr AnotherTestMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnotherTestMessage::AnotherTestMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnotherTestMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnotherTestMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnotherTestMessageDefaultTypeInternal() {}
  union {
    AnotherTestMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnotherTestMessageDefaultTypeInternal _AnotherTestMessage_default_instance_;
}  // namespace test
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_test_5fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_test_5fmessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_test_5fmessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::test::TestMessage, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::test::AnotherTestMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test::AnotherTestMessage, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::test::AnotherTestMessage, _impl_.description_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::test::TestMessage)},
        {14, -1, -1, sizeof(::test::AnotherTestMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::test::_TestMessage_default_instance_._instance,
    &::test::_AnotherTestMessage_default_instance_._instance,
};
const char descriptor_table_protodef_test_5fmessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022test_message.proto\022\004test\"d\n\013TestMessag"
    "e\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 \001"
    "(\001\022\014\n\004tags\030\004 \003(\t\022\020\n\010is_valid\030\005 \001(\010\022\014\n\004da"
    "ta\030\006 \001(\t\"<\n\022AnotherTestMessage\022\021\n\ttimest"
    "amp\030\001 \001(\003\022\023\n\013description\030\002 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_test_5fmessage_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_test_5fmessage_2eproto = {
    false,
    false,
    198,
    descriptor_table_protodef_test_5fmessage_2eproto,
    "test_message.proto",
    &descriptor_table_test_5fmessage_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_test_5fmessage_2eproto::offsets,
    file_level_enum_descriptors_test_5fmessage_2eproto,
    file_level_service_descriptors_test_5fmessage_2eproto,
};
namespace test {
// ===================================================================

class TestMessage::_Internal {
 public:
};

TestMessage::TestMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.TestMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::test::TestMessage& from_msg)
      : tags_{visibility, arena, from.tags_},
        name_(arena, from.name_),
        data_(arena, from.data_),
        _cached_size_{0} {}

TestMessage::TestMessage(
    ::google::protobuf::Arena* arena,
    const TestMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_),
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::is_valid_));

  // @@protoc_insertion_point(copy_constructor:test.TestMessage)
}
inline PROTOBUF_NDEBUG_INLINE TestMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        name_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void TestMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::is_valid_));
}
TestMessage::~TestMessage() {
  // @@protoc_insertion_point(destructor:test.TestMessage)
  SharedDtor(*this);
}
inline void TestMessage::SharedDtor(MessageLite& self) {
  TestMessage& this_ = static_cast<TestMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TestMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestMessage(arena);
}
constexpr auto TestMessage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.tags_) +
          decltype(TestMessage::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TestMessage), alignof(TestMessage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestMessage::PlacementNew_,
                                 sizeof(TestMessage),
                                 alignof(TestMessage));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestMessage>(), &TestMessage::ByteSizeLong,
            &TestMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestMessage, _impl_._cached_size_),
        false,
    },
    &TestMessage::kDescriptorMethods,
    &descriptor_table_test_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 37, 2> TestMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::TestMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestMessage, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.name_)}},
    // double value = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.value_)}},
    // repeated string tags = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.tags_)}},
    // bool is_valid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestMessage, _impl_.is_valid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.is_valid_)}},
    // string data = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 3;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated string tags = 4;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_valid = 5;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.is_valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string data = 6;
    {PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\4\0\4\0\4\0"
    "test.TestMessage"
    "name"
    "tags"
    "data"
  }},
};

PROTOBUF_NOINLINE void TestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test.TestMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_valid_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.is_valid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestMessage& this_ = static_cast<const TestMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:test.TestMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.TestMessage.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double value = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_value(), target);
          }

          // repeated string tags = 4;
          for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
            const auto& s = this_._internal_tags().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.TestMessage.tags");
            target = stream->WriteString(4, s, target);
          }

          // bool is_valid = 5;
          if (this_._internal_is_valid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_valid(), target);
          }

          // string data = 6;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.TestMessage.data");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:test.TestMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestMessage::ByteSizeLong(const MessageLite& base) {
          const TestMessage& this_ = static_cast<const TestMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestMessage::ByteSizeLong() const {
          const TestMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:test.TestMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string tags = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
              for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_tags().Get(i));
              }
            }
          }
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string data = 6;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // double value = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
            // int32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // bool is_valid = 5;
            if (this_._internal_is_valid() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestMessage*>(&to_msg);
  auto& from = static_cast<const TestMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.TestMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_is_valid() != 0) {
    _this->_impl_.is_valid_ = from._impl_.is_valid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestMessage::CopyFrom(const TestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.TestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestMessage::InternalSwap(TestMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.is_valid_)
      + sizeof(TestMessage::_impl_.is_valid_)
      - PROTOBUF_FIELD_OFFSET(TestMessage, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata TestMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnotherTestMessage::_Internal {
 public:
};

AnotherTestMessage::AnotherTestMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test.AnotherTestMessage)
}
inline PROTOBUF_NDEBUG_INLINE AnotherTestMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::test::AnotherTestMessage& from_msg)
      : description_(arena, from.description_),
        _cached_size_{0} {}

AnotherTestMessage::AnotherTestMessage(
    ::google::protobuf::Arena* arena,
    const AnotherTestMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnotherTestMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:test.AnotherTestMessage)
}
inline PROTOBUF_NDEBUG_INLINE AnotherTestMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : description_(arena),
        _cached_size_{0} {}

inline void AnotherTestMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
AnotherTestMessage::~AnotherTestMessage() {
  // @@protoc_insertion_point(destructor:test.AnotherTestMessage)
  SharedDtor(*this);
}
inline void AnotherTestMessage::SharedDtor(MessageLite& self) {
  AnotherTestMessage& this_ = static_cast<AnotherTestMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnotherTestMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnotherTestMessage(arena);
}
constexpr auto AnotherTestMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnotherTestMessage),
                                            alignof(AnotherTestMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AnotherTestMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AnotherTestMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AnotherTestMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AnotherTestMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AnotherTestMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AnotherTestMessage>(), &AnotherTestMessage::ByteSizeLong,
            &AnotherTestMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AnotherTestMessage, _impl_._cached_size_),
        false,
    },
    &AnotherTestMessage::kDescriptorMethods,
    &descriptor_table_test_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AnotherTestMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> AnotherTestMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test::AnotherTestMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnotherTestMessage, _impl_.description_)}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AnotherTestMessage, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AnotherTestMessage, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(AnotherTestMessage, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(AnotherTestMessage, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\13\0\0\0\0\0"
    "test.AnotherTestMessage"
    "description"
  }},
};

PROTOBUF_NOINLINE void AnotherTestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test.AnotherTestMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnotherTestMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnotherTestMessage& this_ = static_cast<const AnotherTestMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnotherTestMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnotherTestMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:test.AnotherTestMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 timestamp = 1;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_timestamp(), target);
          }

          // string description = 2;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "test.AnotherTestMessage.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:test.AnotherTestMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnotherTestMessage::ByteSizeLong(const MessageLite& base) {
          const AnotherTestMessage& this_ = static_cast<const AnotherTestMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnotherTestMessage::ByteSizeLong() const {
          const AnotherTestMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:test.AnotherTestMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string description = 2;
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // int64 timestamp = 1;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnotherTestMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnotherTestMessage*>(&to_msg);
  auto& from = static_cast<const AnotherTestMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.AnotherTestMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnotherTestMessage::CopyFrom(const AnotherTestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.AnotherTestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnotherTestMessage::InternalSwap(AnotherTestMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata AnotherTestMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace test
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_test_5fmessage_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
